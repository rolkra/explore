[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 explore authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/abtest.html","id":"interactive-ab-testing","dir":"Articles","previous_headings":"","what":"Interactive A/B testing","title":"A/B test","text":"interactive /B testing simply call abtest() without parameters.","code":""},{"path":"/articles/abtest.html","id":"ab-testing-with-tidy-data","dir":"Articles","previous_headings":"","what":"A/B testing with tidy data","title":"A/B test","text":"want /B test data, pass ´abtest()´ function. example using synthetic data using one create_data_() functions explore","code":"library(dplyr) library(explore) data <- create_data_buy(obs = 1000)"},{"path":"/articles/abtest.html","id":"describe-dataset","dir":"Articles","previous_headings":"A/B testing with tidy data","what":"Describe dataset","title":"A/B test","text":"observation customer. ´buy´ variable contains 0/1 values (1 = customer buy product)","code":"data %>% describe() #> # A tibble: 13 × 8 #>    variable        type     na na_pct unique    min      mean    max #>    <chr>           <chr> <int>  <dbl>  <int>  <dbl>     <dbl>  <dbl> #>  1 period          int       0      0      1 202012 202012    202012 #>  2 buy             int       0      0      2      0      0.51      1 #>  3 age             int       0      0     66     17     52.3      88 #>  4 city_ind        int       0      0      2      0      0.5       1 #>  5 female_ind      int       0      0      2      0      0.5       1 #>  6 fixedvoice_ind  int       0      0      2      0      0.11      1 #>  7 fixeddata_ind   int       0      0      1      1      1         1 #>  8 fixedtv_ind     int       0      0      2      0      0.4       1 #>  9 mobilevoice_ind int       0      0      2      0      0.63      1 #> 10 mobiledata_prd  chr       0      0      3     NA     NA        NA #> 11 bbi_speed_ind   int       0      0      2      0      0.61      1 #> 12 bbi_usg_gb      int       0      0     83      9    164.   100000 #> 13 hh_single       int       0      0      2      0      0.37      1"},{"path":"/articles/abtest.html","id":"hypothesis-age-50","dir":"Articles","previous_headings":"A/B testing with tidy data","what":"Hypothesis age > 50","title":"A/B test","text":"want test hypothesis, customer age > 50 different buying behavior.  see clear pattern, people buy differ age people don´t buy. difference statistically significant?  /B test shows statistically significant difference!","code":"data %>% explore(age, target = buy) data %>% abtest(age > 50, target = buy, sign_level = 0.05)"},{"path":"/articles/abtest.html","id":"hypothesis-mobile-voice-vs-broadband-usage","dir":"Articles","previous_headings":"A/B testing with tidy data","what":"Hypothesis Mobile Voice vs Broadband Usage","title":"A/B test","text":"like test hypothesis, customer mobile voice product (mobilevoice_ind == 1) different bbi_usg_gb (broadband usage GB)  boxplot shows small difference Broadband Usage customers /without Mobile Voice product. difference statistically significant?  /B test shows statistically significant difference! p-value 0.09, max. 0.05 (defined sign_level = 0.05)","code":"data %>% explore(mobilevoice_ind, target = bbi_usg_gb) data %>% abtest(mobilevoice_ind == 1, target = bbi_usg_gb, sign_level = 0.05)"},{"path":"/articles/abtest.html","id":"ab-testing-with-count-data","dir":"Articles","previous_headings":"","what":"A/B testing with count data","title":"A/B test","text":"example using Titanic datasst. use_data_titanic() functions explore makes easier use popular example datasets.","code":"library(dplyr) library(explore) data <- use_data_titanic(count = TRUE)"},{"path":"/articles/abtest.html","id":"describe-dataset-1","dir":"Articles","previous_headings":"A/B testing with count data","what":"Describe dataset","title":"A/B test","text":"","code":"data %>% describe() #> # A tibble: 5 × 8 #>   variable type     na na_pct unique   min  mean   max #>   <chr>    <chr> <int>  <dbl>  <int> <dbl> <dbl> <dbl> #> 1 Class    chr       0      0      4    NA  NA      NA #> 2 Sex      chr       0      0      2    NA  NA      NA #> 3 Age      chr       0      0      2    NA  NA      NA #> 4 Survived chr       0      0      2    NA  NA      NA #> 5 n        dbl       0      0     22     0  68.8   670"},{"path":"/articles/abtest.html","id":"hypothesis-female","dir":"Articles","previous_headings":"A/B testing with count data","what":"Hypothesis Female","title":"A/B test","text":"want test hypothesis, female passengers higher chance survive.  see clear pattern, difference statistically significant?  /B test shows statistically significant difference!","code":"data %>% explore(Sex, target = Survived, n = n) data %>% abtest(Sex == \"Female\", target = Survived, n = n, sign_level = 0.05)"},{"path":"/articles/clean-drop.html","id":"rename-variable","dir":"Articles","previous_headings":"","what":"Rename variable","title":"Clean / Drop","text":"","code":"data <- use_data_titanic(count = FALSE) glimpse(data) #> Rows: 2,201 #> Columns: 4 #> $ Class    <chr> \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\"… #> $ Sex      <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male… #> $ Age      <chr> \"Child\", \"Child\", \"Child\", \"Child\", \"Child\", \"Child\", \"Child\"… #> $ Survived <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"… data <- data %>% clean_var(Age, name = \"age\") glimpse(data) #> Rows: 2,201 #> Columns: 4 #> $ Class    <chr> \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\"… #> $ Sex      <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male… #> $ age      <chr> \"Child\", \"Child\", \"Child\", \"Child\", \"Child\", \"Child\", \"Child\"… #> $ Survived <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"…"},{"path":"/articles/clean-drop.html","id":"replace-na-values","dir":"Articles","previous_headings":"","what":"Replace NA values","title":"Clean / Drop","text":"","code":"data <- use_data_beer() data %>% describe(energy_kcal_100ml) #> variable = energy_kcal_100ml #> type     = double #> na       = 11 of 161 (6.8%) #> unique   = 34 #> min|max  = 20 | 62 #> q05|q95  = 24 | 56.65 #> q25|q75  = 37 | 44 #> median   = 42 #> mean     = 39.89333 data <- data %>% clean_var(energy_kcal_100ml, na = 42) data %>% describe(energy_kcal_100ml) #> variable = energy_kcal_100ml #> type     = double #> na       = 0 of 161 (0%) #> unique   = 33 #> min|max  = 20 | 62 #> q05|q95  = 24 | 55 #> q25|q75  = 38 | 44 #> median   = 42 #> mean     = 40.03727"},{"path":"/articles/clean-drop.html","id":"set-min-max-values","dir":"Articles","previous_headings":"","what":"Set min max values","title":"Clean / Drop","text":"","code":"data <- create_data_person() data %>% describe(age) #> variable = age #> type     = integer #> na       = 0 of 1 000 (0%) #> unique   = 80 #> min|max  = 16 | 95 #> q05|q95  = 21 | 92 #> q25|q75  = 37 | 76 #> median   = 55 #> mean     = 55.845 data <- data %>% clean_var(age, min_val = 20, max_val = 80) data %>% describe(age) #> variable = age #> type     = integer #> na       = 0 of 1 000 (0%) #> unique   = 61 #> min|max  = 20 | 80 #> q05|q95  = 21 | 80 #> q25|q75  = 37 | 76 #> median   = 55 #> mean     = 54.276"},{"path":"/articles/clean-drop.html","id":"rescale-0-to-1","dir":"Articles","previous_headings":"","what":"Rescale 0 to 1","title":"Clean / Drop","text":"","code":"data %>% describe(income) #> variable = income #> type     = double #> na       = 0 of 1 000 (0%) #> unique   = 228 #> min|max  = 0 | 150 #> q05|q95  = 6 | 123.025 #> q25|q75  = 35 | 88.625 #> median   = 62 #> mean     = 61.5875 data <- data %>% clean_var(income, rescale01 = TRUE) data %>% describe(income) #> variable = income #> type     = double #> na       = 0 of 1 000 (0%) #> unique   = 228 #> min|max  = 0 | 1 #> q05|q95  = 0.04 | 0.820167 #> q25|q75  = 0.233333 | 0.590833 #> median   = 0.4 #> mean     = 0.410583"},{"path":"/articles/clean-drop.html","id":"cleaning-text","dir":"Articles","previous_headings":"","what":"Cleaning text","title":"Clean / Drop","text":"","code":"data[1, \"handset\"] <- \" android \" data[2, \"handset\"] <- \"ANDROID\" data %>% describe(handset) #> variable = handset #> type     = character #> na       = 0 of 1 000 (0%) #> unique   = 5 #>   android  = 1 (0.1%) #>  ANDROID   = 1 (0.1%) #>  Android   = 471 (47.1%) #>  Apple     = 430 (43%) #>  Other     = 97 (9.7%) data <- data %>% clean_var(handset, simplify_text = TRUE) data %>% describe(handset) #> variable = handset #> type     = character #> na       = 0 of 1 000 (0%) #> unique   = 3 #>  ANDROID = 473 (47.3%) #>  APPLE   = 430 (43%) #>  OTHER   = 97 (9.7%)"},{"path":"/articles/clean-drop.html","id":"drop-variables","dir":"Articles","previous_headings":"","what":"Drop variables","title":"Clean / Drop","text":"drop_var_no_variance() Drop variables variance drop_var_not_numeric() Drop numeric variables drop_var_low_variance() Drop variables low variance drop_var_by_names() Drop variables name drop_var_with_na() Drop variables NA-values","code":"data <- use_data_beer() data %>% describe_tbl() #> 161 observations with 11 variables #> 19 observations containing missings (NA) #> 5 variables containing missings (NA) #> 1 variables with no variance data %>%   drop_var_no_variance() %>%   describe_tbl() #> 161 observations with 10 variables #> 19 observations containing missings (NA) #> 5 variables containing missings (NA) #> 0 variables with no variance data %>%   drop_var_with_na() %>%   describe_tbl() #> 161 observations with 6 variables #> 0 observations containing missings (NA) #> 0 variables containing missings (NA) #> 1 variables with no variance"},{"path":"/articles/clean-drop.html","id":"drop-observations","dir":"Articles","previous_headings":"","what":"Drop observations","title":"Clean / Drop","text":"drop_obs_with_na() Drop observations NA-values drop_obs_if() Drop observations expression true","code":"data %>%   drop_obs_with_na() %>%   describe_tbl() #> 142 observations with 11 variables #> 0 observations containing missings (NA) #> 0 variables containing missings (NA) #> 1 variables with no variance data %>%   count_pct(type) #> # A tibble: 3 × 4 #>   type            n total   pct #>   <chr>       <int> <int> <dbl> #> 1 Alkoholfrei    27   161 16.8  #> 2 Bock            8   161  4.97 #> 3 Rest          126   161 78.3 data %>%   drop_obs_if(type == \"Alkoholfrei\") %>%   count_pct(type) #> # A tibble: 2 × 4 #>   type      n total   pct #>   <chr> <int> <int> <dbl> #> 1 Bock      8   134  5.97 #> 2 Rest    126   134 94.0"},{"path":[]},{"path":"/articles/data.html","id":"penguins","dir":"Articles","previous_headings":"Use data","what":"Penguins","title":"Data","text":"data set comes palmerpenguins package. contains measurements penguin species, island Palmer Archipelago, size (flipper length, body mass, bill dimensions), sex.","code":"library(dplyr) library(explore)  data <- use_data_penguins() glimpse(data) #> Rows: 344 #> Columns: 8 #> $ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel… #> $ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse… #> $ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, … #> $ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, … #> $ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186… #> $ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, … #> $ sex               <fct> male, female, female, NA, female, male, female, male… #> $ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…"},{"path":"/articles/data.html","id":"starwars","dir":"Articles","previous_headings":"Use data","what":"Starwars","title":"Data","text":"data set comes dplyr package. contains data 87 star war characters.","code":"data <- use_data_starwars() glimpse(data) #> Rows: 87 #> Columns: 14 #> $ name       <chr> \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Or… #> $ height     <int> 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 2… #> $ mass       <dbl> 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.… #> $ hair_color <chr> \"blond\", NA, NA, \"none\", \"brown\", \"brown, grey\", \"brown\", N… #> $ skin_color <chr> \"fair\", \"gold\", \"white, blue\", \"white\", \"light\", \"light\", \"… #> $ eye_color  <chr> \"blue\", \"yellow\", \"red\", \"yellow\", \"brown\", \"blue\", \"blue\",… #> $ birth_year <dbl> 19.0, 112.0, 33.0, 41.9, 19.0, 52.0, 47.0, NA, 24.0, 57.0, … #> $ sex        <chr> \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\",… #> $ gender     <chr> \"masculine\", \"masculine\", \"masculine\", \"masculine\", \"femini… #> $ homeworld  <chr> \"Tatooine\", \"Tatooine\", \"Naboo\", \"Tatooine\", \"Alderaan\", \"T… #> $ species    <chr> \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Huma… #> $ films      <list> <\"A New Hope\", \"The Empire Strikes Back\", \"Return of the J… #> $ vehicles   <list> <\"Snowspeeder\", \"Imperial Speeder Bike\">, <>, <>, <>, \"Imp… #> $ starships  <list> <\"X-wing\", \"Imperial shuttle\">, <>, <>, \"TIE Advanced x1\",…"},{"path":"/articles/data.html","id":"diamonds","dir":"Articles","previous_headings":"Use data","what":"Diamonds","title":"Data","text":"data set comes ggplot2 package. contains prices attributes almost 54,000 diamonds.","code":"data <- use_data_diamonds() glimpse(data) #> Rows: 53,940 #> Columns: 10 #> $ carat   <dbl> 0.23, 0.21, 0.23, 0.29, 0.31, 0.24, 0.24, 0.26, 0.22, 0.23, 0.… #> $ cut     <ord> Ideal, Premium, Good, Premium, Good, Very Good, Very Good, Ver… #> $ color   <ord> E, E, E, I, J, J, I, H, E, H, J, J, F, J, E, E, I, J, J, J, I,… #> $ clarity <ord> SI2, SI1, VS1, VS2, SI2, VVS2, VVS1, SI1, VS2, VS1, SI1, VS1, … #> $ depth   <dbl> 61.5, 59.8, 56.9, 62.4, 63.3, 62.8, 62.3, 61.9, 65.1, 59.4, 64… #> $ table   <dbl> 55, 61, 65, 58, 58, 57, 57, 55, 61, 61, 55, 56, 61, 54, 62, 58… #> $ price   <int> 326, 326, 327, 334, 335, 336, 336, 337, 337, 338, 339, 340, 34… #> $ x       <dbl> 3.95, 3.89, 4.05, 4.20, 4.34, 3.94, 3.95, 4.07, 3.87, 4.00, 4.… #> $ y       <dbl> 3.98, 3.84, 4.07, 4.23, 4.35, 3.96, 3.98, 4.11, 3.78, 4.05, 4.… #> $ z       <dbl> 2.43, 2.31, 2.31, 2.63, 2.75, 2.48, 2.47, 2.53, 2.49, 2.39, 2.…"},{"path":"/articles/data.html","id":"iris","dir":"Articles","previous_headings":"Use data","what":"Iris","title":"Data","text":"data set comes base R. data set gives measurements centimeters variables sepal length width petal length width, respectively, 50 flowers 3 species iris. species Iris setosa, versicolor, virginica.","code":"data <- use_data_iris() glimpse(data) #> Rows: 150 #> Columns: 5 #> $ Sepal.Length <dbl> 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.… #> $ Sepal.Width  <dbl> 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.… #> $ Petal.Length <dbl> 1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1.… #> $ Petal.Width  <dbl> 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.… #> $ Species      <fct> setosa, setosa, setosa, setosa, setosa, setosa, setosa, s…"},{"path":"/articles/data.html","id":"mpg","dir":"Articles","previous_headings":"Use data","what":"mpg","title":"Data","text":"data set comes ggplot2 package. contains subset fuel economy data EPA makes available https://fueleconomy.gov/. contains models new release every year 1999 2008 - used proxy popularity car.","code":"data <- use_data_mpg() glimpse(data) #> Rows: 234 #> Columns: 11 #> $ manufacturer <chr> \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"… #> $ model        <chr> \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"… #> $ displ        <dbl> 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.… #> $ year         <int> 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200… #> $ cyl          <int> 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, … #> $ trans        <chr> \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto… #> $ drv          <chr> \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4… #> $ cty          <int> 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1… #> $ hwy          <int> 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2… #> $ fl           <chr> \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p… #> $ class        <chr> \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…"},{"path":"/articles/data.html","id":"mtcars","dir":"Articles","previous_headings":"Use data","what":"mtcars","title":"Data","text":"data set comes base R. data extracted 1974 Motor Trend US magazine, comprises fuel consumption 10 aspects automobile design performance 32 automobiles (1973–74 models).","code":"data <- use_data_mtcars() glimpse(data) #> Rows: 32 #> Columns: 11 #> $ mpg  <dbl> 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17.8,… #> $ cyl  <dbl> 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8,… #> $ disp <dbl> 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8, 16… #> $ hp   <dbl> 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, 180… #> $ drat <dbl> 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92,… #> $ wt   <dbl> 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150, 3.… #> $ qsec <dbl> 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90, 18… #> $ vs   <dbl> 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,… #> $ am   <dbl> 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,… #> $ gear <dbl> 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3,… #> $ carb <dbl> 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2,…"},{"path":"/articles/data.html","id":"titanic","dir":"Articles","previous_headings":"Use data","what":"Titanic","title":"Data","text":"data set comes base R. Survival passengers Titanic.","code":"data <- use_data_titanic(count = FALSE) glimpse(data) #> Rows: 2,201 #> Columns: 4 #> $ Class    <chr> \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\", \"3rd\"… #> $ Sex      <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male… #> $ Age      <chr> \"Child\", \"Child\", \"Child\", \"Child\", \"Child\", \"Child\", \"Child\"… #> $ Survived <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"… data <- use_data_titanic(count = TRUE) glimpse(data) #> Rows: 32 #> Columns: 5 #> $ Class    <chr> \"1st\", \"2nd\", \"3rd\", \"Crew\", \"1st\", \"2nd\", \"3rd\", \"Crew\", \"1s… #> $ Sex      <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Female\", \"Female\", \"Female\",… #> $ Age      <chr> \"Child\", \"Child\", \"Child\", \"Child\", \"Child\", \"Child\", \"Child\"… #> $ Survived <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"… #> $ n        <dbl> 0, 0, 35, 0, 0, 0, 17, 0, 118, 154, 387, 670, 4, 13, 89, 3, 5…"},{"path":"/articles/data.html","id":"beer","dir":"Articles","previous_headings":"Use data","what":"Beer","title":"Data","text":"data set incomplete collection popular beers Austria, Germany Switzerland. Data collected various websites 2023. collected data may incorrect.","code":"data <- use_data_beer() glimpse(data) #> Rows: 161 #> Columns: 11 #> $ name              <chr> \"Puntigamer Maerzen\", \"Puntigamer PR0,0ST\", \"Puntiga… #> $ brand             <chr> \"Puntigamer\", \"Puntigamer\", \"Puntigamer\", \"Puntigame… #> $ country           <chr> \"Austria\", \"Austria\", \"Austria\", \"Austria\", \"Austria… #> $ year              <dbl> 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023… #> $ type              <chr> \"Rest\", \"Alkoholfrei\", \"Rest\", \"Rest\", \"Rest\", \"Rest… #> $ color_dark        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1… #> $ alcohol_vol_pct   <dbl> 5.1, 0.0, 5.2, 6.0, 4.9, 5.2, 4.4, 0.5, 5.7, 5.3, 7.… #> $ original_wort     <dbl> 11.5, 5.1, 12.1, 13.8, 11.5, 11.9, 11.1, 7.0, 13.2, … #> $ energy_kcal_100ml <dbl> 40, 20, 43, 50, 42, 43, 42, 27, 48, 45, 58, 45, 43, … #> $ carb_g_100ml      <dbl> 2.7, 4.4, 2.9, 3.6, 3.2, 3.0, 3.8, 5.7, 3.5, 3.3, 3.… #> $ sugar_g_100ml     <dbl> 0.0, 1.2, 0.0, 0.0, 0.0, 0.0, 0.0, 2.7, 0.0, 0.0, 0.…"},{"path":"/articles/data.html","id":"create-data","dir":"Articles","previous_headings":"","what":"Create data","title":"Data","text":"Artificial data can used unit-testing teaching.","code":""},{"path":"/articles/data.html","id":"ab-testing","dir":"Articles","previous_headings":"Create data","what":"A/B testing","title":"Data","text":"","code":"data <- create_data_abtest() glimpse(data) #> Rows: 4 #> Columns: 3 #> $ group   <chr> \"A\", \"A\", \"B\", \"B\" #> $ n       <dbl> 90, 10, 95, 5 #> $ success <dbl> 0, 1, 0, 1"},{"path":"/articles/data.html","id":"app","dir":"Articles","previous_headings":"Create data","what":"App","title":"Data","text":"","code":"data <- create_data_app(obs = 1000) glimpse(data) #> Rows: 1,000 #> Columns: 7 #> $ os           <chr> \"Android\", \"iOS\", \"Android\", \"iOS\", \"Other\", \"Android\", \"… #> $ free         <int> 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, … #> $ downloads    <int> 5802, 5048, 4579, 3449, 2464, 11276, 4026, 6841, 10419, 5… #> $ rating       <dbl> 4, 4, 3, 4, 1, 4, 5, 5, 4, 1, 1, 4, 4, 5, 5, 4, 3, 4, 2, … #> $ type         <chr> \"Kids\", \"Media\", \"Other\", \"Shopping\", \"Connect\", \"Learn\",… #> $ updates      <dbl> 63.00000, 58.00000, 62.00000, 44.00000, 24.00000, 75.0000… #> $ screen_sizes <dbl> 3, 2, 3, 2, 1, 3, 1, 2, 2, 3, 1, 3, 2, 1, 3, 1, 4, 5, 3, …"},{"path":"/articles/data.html","id":"buy","dir":"Articles","previous_headings":"Create data","what":"Buy","title":"Data","text":"","code":"data <- create_data_buy(obs = 1000) glimpse(data) #> Rows: 1,000 #> Columns: 13 #> $ period          <int> 202012, 202012, 202012, 202012, 202012, 202012, 202012… #> $ buy             <int> 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, … #> $ age             <int> 39, 57, 55, 66, 71, 44, 64, 51, 70, 44, 58, 47, 68, 71… #> $ city_ind        <int> 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, … #> $ female_ind      <int> 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, … #> $ fixedvoice_ind  <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, … #> $ fixeddata_ind   <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … #> $ fixedtv_ind     <int> 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, … #> $ mobilevoice_ind <int> 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, … #> $ mobiledata_prd  <chr> \"NO\", \"NO\", \"MOBILE STICK\", \"NO\", \"BUSINESS\", \"BUSINES… #> $ bbi_speed_ind   <int> 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, … #> $ bbi_usg_gb      <int> 77, 49, 53, 44, 55, 93, 50, 64, 63, 87, 45, 45, 70, 79… #> $ hh_single       <int> 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, …"},{"path":"/articles/data.html","id":"churn","dir":"Articles","previous_headings":"Create data","what":"Churn","title":"Data","text":"","code":"data <- create_data_churn(obs = 1000) glimpse(data) #> Rows: 1,000 #> Columns: 9 #> $ price      <dbl> 29, 27, 29, 11, 18, 21, 19, 13, 29, 22, 13, 27, 17, 11, 16,… #> $ type       <chr> \"Premium\", \"Regular\", \"Premium\", \"Promo\", \"Promo\", \"Promo\",… #> $ usage      <dbl> 63.0, 39.0, 87.0, 29.0, 22.5, 8.0, 56.0, 94.5, 46.0, 76.0, … #> $ shared     <int> 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1,… #> $ device     <chr> \"Computer\", \"Tablet\", \"Phone\", \"Tablet\", \"Computer\", \"Table… #> $ newsletter <int> 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0,… #> $ language   <chr> \"sp\", \"sp\", \"sp\", \"sp\", \"en\", \"en\", \"fr\", \"en\", \"en\", \"de\",… #> $ duration   <int> 7, 47, 99, 33, 94, 17, 95, 92, 43, 16, 62, 14, 52, 20, 76, … #> $ churn      <dbl> 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,…"},{"path":"/articles/data.html","id":"esoteric","dir":"Articles","previous_headings":"Create data","what":"Esoteric","title":"Data","text":"","code":"data <- create_data_esoteric(obs = 1000) glimpse(data) #> Rows: 1,000 #> Columns: 6 #> $ starsign        <chr> \"Leo\", \"Aquarius\", \"Virgo\", \"Pisces\", \"Aries\", \"Taurus… #> $ chinese         <chr> \"Dragon\", \"Monkey\", \"Tiger\", \"Pig\", \"Pig\", \"Horse\", \"D… #> $ moon            <chr> \"Waxing (+)\", \"Waxing (+)\", \"Waxing (+)\", \"Waning (-)\"… #> $ blood           <chr> \"A+\", \"AB+\", \"0+\", \"0+\", \"A+\", \"0+\", \"B+\", \"0+\", \"0-\",… #> $ fingers_crossed <int> 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, … #> $ success         <int> 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, …"},{"path":"/articles/data.html","id":"newsletter","dir":"Articles","previous_headings":"Create data","what":"Newsletter","title":"Data","text":"","code":"data <- create_data_newsletter(obs = 1000) glimpse(data) #> Rows: 1,000 #> Columns: 6 #> $ sending_h <int> 14, 14, 13, 13, 14, 16, 15, 12, 13, 14, 16, 14, 14, 12, 15, … #> $ message   <chr> \"voucher\", \"news\", \"news\", \"news\", \"voucher\", \"news\", \"news\"… #> $ age       <int> 80, 25, 17, 78, 30, 76, 30, 64, 50, 72, 65, 23, 23, 19, 30, … #> $ send      <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … #> $ click     <dbl> 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, … #> $ buy       <dbl> 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, …"},{"path":"/articles/data.html","id":"person","dir":"Articles","previous_headings":"Create data","what":"Person","title":"Data","text":"","code":"data <- create_data_person(obs = 1000) glimpse(data) #> Rows: 1,000 #> Columns: 15 #> $ age               <int> 46, 94, 66, 29, 82, 57, 65, 58, 29, 40, 84, 72, 24, … #> $ gender            <chr> \"Female\", \"Female\", \"Male\", \"Male\", \"Female\", \"Femal… #> $ eye_color         <chr> \"Blue\", \"Green\", \"Brown\", \"Green\", \"Brown\", \"Brown\",… #> $ shoe_size         <dbl> 45.2, 37.0, 45.0, 45.0, 39.0, 38.2, 41.2, 46.0, 40.0… #> $ iq                <dbl> 141, 71, 80, 74, 119, 95, 97, 135, 88, 140, 71, 126,… #> $ education         <int> 66, 41, 49, 49, 25, 68, 87, 46, 78, 14, 65, 62, 68, … #> $ income            <dbl> 132.0, 95.0, 18.0, 54.0, 70.0, 128.0, 128.5, 32.0, 8… #> $ handset           <chr> \"Apple\", \"Apple\", \"Apple\", \"Android\", \"Apple\", \"Andr… #> $ pet               <chr> \"No\", \"Cat\", \"Other\", \"No\", \"Dog\", \"No\", \"Cat\", \"Dog… #> $ favorite_pizza    <chr> \"Pepperoni\", \"Hawai\", \"Margaritha\", \"Carciofi\", \"Mar… #> $ favorite_icecream <chr> \"Lemon\", \"Strawberry\", \"Vanilla\", \"Vanilla\", \"Apple\"… #> $ likes_garlic      <int> 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0… #> $ likes_sushi       <int> 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1… #> $ likes_beatles     <int> 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0… #> $ likes_beer        <int> 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1…"},{"path":"/articles/data.html","id":"random","dir":"Articles","previous_headings":"Create data","what":"Random","title":"Data","text":"","code":"data <- create_data_random(obs = 1000) glimpse(data) #> Rows: 1,000 #> Columns: 12 #> $ id         <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, … #> $ target_ind <int> 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0,… #> $ var_1      <int> 27, 59, 16, 85, 85, 48, 77, 30, 7, 44, 46, 34, 19, 51, 2, 7… #> $ var_2      <int> 16, 14, 15, 51, 49, 62, 45, 6, 1, 22, 85, 27, 60, 61, 99, 1… #> $ var_3      <int> 21, 94, 38, 63, 18, 66, 73, 50, 87, 83, 98, 67, 64, 5, 19, … #> $ var_4      <int> 30, 83, 59, 81, 29, 14, 89, 1, 57, 97, 27, 98, 4, 26, 26, 9… #> $ var_5      <int> 25, 99, 72, 65, 24, 9, 30, 54, 78, 27, 32, 95, 49, 97, 85, … #> $ var_6      <int> 44, 40, 37, 53, 7, 72, 24, 84, 100, 11, 49, 68, 82, 77, 43,… #> $ var_7      <int> 93, 59, 8, 85, 3, 81, 39, 14, 67, 62, 45, 81, 87, 99, 40, 3… #> $ var_8      <int> 58, 49, 74, 23, 75, 82, 10, 28, 2, 60, 99, 85, 59, 34, 65, … #> $ var_9      <int> 80, 88, 24, 56, 90, 1, 16, 26, 77, 7, 90, 31, 89, 61, 46, 7… #> $ var_10     <int> 31, 32, 87, 33, 13, 36, 93, 88, 82, 2, 63, 78, 72, 19, 58, …"},{"path":"/articles/data.html","id":"unfair","dir":"Articles","previous_headings":"Create data","what":"Unfair","title":"Data","text":"","code":"data <- create_data_unfair(obs = 1000) glimpse(data) #> Rows: 1,000 #> Columns: 22 #> $ age         <int> 46, 94, 66, 29, 82, 57, 65, 58, 29, 40, 84, 72, 24, 87, 41… #> $ gender      <chr> \"Female\", \"Female\", \"Male\", \"Male\", \"Female\", \"Female\", \"F… #> $ eye_color   <chr> \"Blue\", \"Green\", \"Blue\", \"Blue\", \"Blue\", \"Brown\", \"Brown\",… #> $ shoe_size   <dbl> 45.2, 37.0, 45.0, 45.0, 39.0, 38.2, 41.2, 46.0, 40.0, 42.0… #> $ iq          <dbl> 141, 71, 80, 74, 119, 95, 97, 135, 88, 140, 71, 126, 106, … #> $ education   <int> 66, 41, 49, 49, 25, 68, 87, 46, 78, 14, 65, 62, 68, 16, 69… #> $ income      <dbl> 132.0, 95.0, 18.0, 54.0, 70.0, 128.0, 128.5, 32.0, 82.0, 9… #> $ handset     <chr> \"Apple\", \"Apple\", \"Apple\", \"Android\", \"Apple\", \"Android\", … #> $ pet         <chr> \"Other\", \"Cat\", \"Cat\", \"Dog\", \"Cat\", \"No\", \"Dog\", \"No\", \"N… #> $ smoking     <int> 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0… #> $ name_arabic <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0… #> $ outfit      <chr> \"Casual\", \"Casual\", \"Casual\", \"Alternative\", \"Elegant\", \"A… #> $ glasses     <int> 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1… #> $ tatoos      <int> 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0… #> $ kids        <int> 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0… #> $ bad_debt    <dbl> 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0… #> $ credit_card <chr> \"No\", \"Master\", \"Master\", \"No\", \"No\", \"Visa\", \"Visa\", \"Vis… #> $ left_handed <int> 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0… #> $ skin_color  <chr> \"White\", \"Brown\", \"White\", \"White\", \"White\", \"White\", \"Bla… #> $ religion    <chr> \"Christian\", \"No\", \"Christian\", \"No\", \"Christian\", \"No\", \"… #> $ internet_gb <dbl> 0.000000, 60.609298, 260.437887, 55.199729, 0.000000, 179.… #> $ target_ind  <int> 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1…"},{"path":"/articles/data.html","id":"empty","dir":"Articles","previous_headings":"Create data","what":"Empty","title":"Data","text":"Create empty data set add random variables.","code":"data <- create_data_empty(obs = 1000) %>%   add_var_random_01(\"smoking\", prob = c(0.8, 0.2)) %>%   add_var_random_cat(\"gender\",                       cat = c(\"female\", \"male\", \"diverse\"),                       prob = c(0.45, 0.45, 0.1)) %>%   add_var_random_dbl(\"internet_usage\", min_val = 0, max_val = 1000) %>%   add_var_random_int(\"age\", min_val = 18, max_val = 100) %>%   add_var_random_moon() %>%   add_var_random_starsign() glimpse(data) #> Rows: 1,000 #> Columns: 6 #> $ smoking         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, … #> $ gender          <chr> \"male\", \"male\", \"female\", \"male\", \"female\", \"female\", … #> $ internet_usage  <dbl> 923.7630, 979.0669, 773.8658, 697.6332, 470.4925, 609.… #> $ age             <int> 84, 54, 44, 45, 60, 73, 60, 74, 62, 46, 81, 95, 58, 19… #> $ random_moon     <chr> \"Waxing (+)\", \"Waning (-)\", \"Waning (-)\", \"Waxing (+)\"… #> $ random_starsign <chr> \"Saggitarius\", \"Saggitarius\", \"Libra\", \"Pisces\", \"Pisc…"},{"path":"/articles/describe.html","id":"describe-table","dir":"Articles","previous_headings":"","what":"Describe table","title":"Describe","text":"","code":"data %>% describe_tbl() #> 100 observations with 13 variables #> 0 observations containing missings (NA) #> 0 variables containing missings (NA) #> 2 variables with no variance"},{"path":"/articles/describe.html","id":"describe-all-variables","dir":"Articles","previous_headings":"","what":"Describe all variables","title":"Describe","text":"","code":"data %>% describe_all() #> # A tibble: 13 × 8 #>    variable        type     na na_pct unique    min      mean    max #>    <chr>           <chr> <int>  <dbl>  <int>  <dbl>     <dbl>  <dbl> #>  1 period          int       0      0      1 202012 202012    202012 #>  2 buy             int       0      0      2      0      0.53      1 #>  3 age             int       0      0     41     24     52.6      92 #>  4 city_ind        int       0      0      2      0      0.49      1 #>  5 female_ind      int       0      0      2      0      0.53      1 #>  6 fixedvoice_ind  int       0      0      2      0      0.08      1 #>  7 fixeddata_ind   int       0      0      1      1      1         1 #>  8 fixedtv_ind     int       0      0      2      0      0.43      1 #>  9 mobilevoice_ind int       0      0      2      0      0.68      1 #> 10 mobiledata_prd  chr       0      0      3     NA     NA        NA #> 11 bbi_speed_ind   int       0      0      2      0      0.6       1 #> 12 bbi_usg_gb      int       0      0     56     10   1064.   100000 #> 13 hh_single       int       0      0      2      0      0.29      1 data %>%    describe_all() %>%   filter(unique == 1) #> # A tibble: 2 × 8 #>   variable      type     na na_pct unique    min   mean    max #>   <chr>         <chr> <int>  <dbl>  <int>  <dbl>  <dbl>  <dbl> #> 1 period        int       0      0      1 202012 202012 202012 #> 2 fixeddata_ind int       0      0      1      1      1      1"},{"path":"/articles/describe.html","id":"describe-one-variable","dir":"Articles","previous_headings":"","what":"Describe one variable","title":"Describe","text":"","code":"data %>% describe(age) #> variable = age #> type     = integer #> na       = 0 of 100 (0%) #> unique   = 41 #> min|max  = 24 | 92 #> q05|q95  = 33.85 | 71 #> q25|q75  = 45 | 60 #> median   = 52.5 #> mean     = 52.55 data %>% describe(buy) #> variable = buy #> type     = integer #> na       = 0 of 100 (0%) #> unique   = 2 #>        0 = 47 (47%) #>        1 = 53 (53%)"},{"path":[]},{"path":"/articles/explain.html","id":"decision-tree","dir":"Articles","previous_headings":"Explain / Model","what":"Decision Tree","title":"Explain","text":"","code":"data %>% explain_tree(target = buy) data %>% explain_tree(target = mobiledata_prd) data %>% explain_tree(target = age)"},{"path":"/articles/explain.html","id":"random-forest","dir":"Articles","previous_headings":"Explain / Model","what":"Random Forest","title":"Explain","text":"get model output can use parameter = \"model = get (feature importance plot table, trained model). use model prediction, can use predict_target()","code":"data %>% explain_forest(target = buy, ntree = 100)"},{"path":"/articles/explain.html","id":"xgboost","dir":"Articles","previous_headings":"Explain / Model","what":"XGBoost","title":"Explain","text":"XGBoost accepts numeric variables, use drop_var_not_numeric() drop mobile_data_prd numeric variable. alternative convert non numeric variables numeric.  Use parameter = \"\" get details training  use model prediction, can use predict_target()","code":"data %>%   drop_var_not_numeric() |>    explain_xgboost(target = buy) train <- data %>%   drop_var_not_numeric() |>    explain_xgboost(target = buy, out = \"all\") train$importance #>           variable        gain       cover  frequency  importance #>             <char>       <num>       <num>      <num>       <num> #> 1:             age 0.438876299 0.269718075 0.22916667 0.438876299 #> 2:      bbi_usg_gb 0.273748159 0.309418667 0.31250000 0.273748159 #> 3:      female_ind 0.148257511 0.145936389 0.13095238 0.148257511 #> 4:     fixedtv_ind 0.087929677 0.126867898 0.12500000 0.087929677 #> 5:   bbi_speed_ind 0.022082803 0.057552002 0.07440476 0.022082803 #> 6:        city_ind 0.018582321 0.064343469 0.06845238 0.018582321 #> 7:       hh_single 0.005310378 0.010887744 0.02083333 0.005310378 #> 8:  fixedvoice_ind 0.003014397 0.008814722 0.02083333 0.003014397 #> 9: mobilevoice_ind 0.002198457 0.006461034 0.01785714 0.002198457 train$tune_plot train$tune_data #>    model_nr   eta max_depth    runtime  iter train_auc_mean test_auc_mean #>       <int> <num>     <num> <difftime> <num>          <num>         <num> #> 1:        1  0.30         3     0 mins    21      0.9599662     0.9259773 #> 2:        2  0.10         3     0 mins    52      0.9572578     0.9271735 #> 3:        3  0.01         3     0 mins   551      0.9592901     0.9268295 #> 4:        4  0.30         5     0 mins    13      0.9762086     0.9212647 #> 5:        5  0.10         5     0 mins    38      0.9773647     0.9258133 #> 6:        6  0.01         5     0 mins    71      0.9601223     0.9256453"},{"path":"/articles/explain.html","id":"logistic-regression","dir":"Articles","previous_headings":"Explain / Model","what":"Logistic Regression","title":"Explain","text":"","code":"data %>% explain_logreg(target = buy) #> # A tibble: 6 × 5 #>   term          estimate std.error statistic  p.value #>   <chr>            <dbl>     <dbl>     <dbl>    <dbl> #> 1 (Intercept)  5.87      0.544        10.8   3.88e-27 #> 2 age         -0.146     0.0106      -13.8   3.49e-43 #> 3 city_ind     0.711     0.183         3.89  1.02e- 4 #> 4 female_ind   1.75      0.186         9.38  6.91e-21 #> 5 fixedtv_ind  1.51      0.190         7.93  2.14e-15 #> 6 bbi_usg_gb  -0.0000724 0.0000904    -0.801 4.23e- 1"},{"path":"/articles/explain.html","id":"balance-target","dir":"Articles","previous_headings":"","what":"Balance Target","title":"Explain","text":"data set unbalanced target (case 5% observations buy == 1) may difficult create decision tree. may help balance target growing decision tree (use weighs alternative). example sample data buy 10% target == 1.","code":"data <- create_data_buy(obs = 2000, target1_prob = 0.05) data %>% describe(buy) #> variable = buy #> type     = integer #> na       = 0 of 2 000 (0%) #> unique   = 2 #>        0 = 1 899 (95%) #>        1 = 101 (5.1%) data %>%   balance_target(target = buy, min_prop = 0.10) %>%   explain_tree(target = buy)"},{"path":"/articles/explore.html","id":"interactive-data-exploration","dir":"Articles","previous_headings":"","what":"Interactive data exploration","title":"explore","text":"Explore data set (case iris data set) one line code: shiny app launched, can inspect individual variable, explore relation target (binary / categorical / numerical), grow decision tree create fully automated report variables “mouse clicks”.  can choose variable containing target, binary (0/1, FALSE/TRUE “”/“yes”), categorical numeric.","code":"explore(iris)"},{"path":"/articles/explore.html","id":"report-variables","dir":"Articles","previous_headings":"","what":"Report variables","title":"explore","text":"Create rich HTML report variables one line code:  can simply add target create report. case use binary target, categorical numerical target work well. use binary target, parameter split = FALSE (targetpct = TRUE) give different view data.","code":"# report of all variables iris %>% report(output_file = \"report.html\", output_dir = tempdir()) # report of all variables and their relationship with a binary target iris$is_versicolor <- ifelse(iris$Species == \"versicolor\", 1, 0) iris %>%    report(output_file = \"report.html\",           output_dir = tempdir(),          target = is_versicolor)"},{"path":"/articles/explore.html","id":"grow-a-decision-tree","dir":"Articles","previous_headings":"","what":"Grow a decision tree","title":"explore","text":"Grow decision tree one line code:  can grow decision tree binary target .  using numerical target. syntax stays .  can control growth tree using parameters maxdepth, minsplit cp. create types models use explain_forest(), explain_xgboost() explain_logreg().","code":"iris %>% explain_tree(target = Species) iris$is_versicolor <- ifelse(iris$Species == \"versicolor\", 1, 0) iris %>% select(-Species) %>% explain_tree(target = is_versicolor) iris %>% explain_tree(target = Sepal.Length)"},{"path":"/articles/explore.html","id":"explore-dataset","dir":"Articles","previous_headings":"","what":"Explore dataset","title":"explore","text":"Explore table one line code see type variables contains.  can also use describe_tbl() just need main facts without visualization.","code":"iris %>% explore_tbl() iris %>% describe_tbl() #> 150 observations with 6 variables #> 0 observations containing missings (NA) #> 0 variables containing missings (NA) #> 0 variables with no variance"},{"path":"/articles/explore.html","id":"explore-variables","dir":"Articles","previous_headings":"","what":"Explore variables","title":"explore","text":"Explore variable one line code. don’t care variable numerical categorical.","code":"iris %>% explore(Species) iris %>% explore(Sepal.Length)"},{"path":"/articles/explore.html","id":"explore-variables-with-a-target","dir":"Articles","previous_headings":"","what":"Explore variables with a target","title":"explore","text":"Explore variable relationship binary target one line code. don’t care variable numerical categorical.  Using split = FALSE change plot %target:  target can two levels:  target can even numeric:","code":"iris %>% explore(Sepal.Length, target = is_versicolor) iris %>% explore(Sepal.Length, target = is_versicolor, split = FALSE) iris %>% explore(Sepal.Length, target = Species) iris %>% explore(Sepal.Length, target = Petal.Length)"},{"path":"/articles/explore.html","id":"explore-multiple-variables","dir":"Articles","previous_headings":"","what":"Explore multiple variables","title":"explore","text":"use high number variables explore_all() RMarkdown-File, necessary set meaningful fig.width fig.height junk. function total_fig_height() helps automatically set fig.height: fig.height=total_fig_height(iris)  use target: fig.height=total_fig_height(iris, var_name_target = \"Species\")  can control total_fig_height() parameters ncols (number columns plots) size (height 1 plot)","code":"iris %>%    select(Sepal.Length, Sepal.Width) %>%    explore_all() iris %>%    select(Sepal.Length, Sepal.Width, is_versicolor) %>%    explore_all(target = is_versicolor) iris %>%    select(Sepal.Length, Sepal.Width, is_versicolor) %>%    explore_all(target = is_versicolor, split = FALSE) iris %>%    select(Sepal.Length, Sepal.Width, Species) %>%    explore_all(target = Species) iris %>%    select(Sepal.Length, Sepal.Width, Petal.Length) %>%    explore_all(target = Petal.Length) data(iris) iris %>%    explore_all() iris %>% explore_all(target = Species)"},{"path":"/articles/explore.html","id":"explore-correlation-between-two-variables","dir":"Articles","previous_headings":"","what":"Explore correlation between two variables","title":"explore","text":"Explore correlation two variables one line code:  can add target :","code":"iris %>% explore(Sepal.Length, Petal.Length) iris %>% explore(Sepal.Length, Petal.Length, target = Species)"},{"path":"/articles/explore.html","id":"explore-options","dir":"Articles","previous_headings":"","what":"Explore options","title":"explore","text":"use explore explore variable want set lower upper limits values, can use min_val max_val parameters. values min_val set min_val. values max_val set max_val.  explore uses auto-scale default. deactivate use parameter auto_scale = FALSE","code":"iris %>% explore(Sepal.Length, min_val = 4.5, max_val = 7) iris %>% explore(Sepal.Length, auto_scale = FALSE)"},{"path":"/articles/explore.html","id":"describing-data","dir":"Articles","previous_headings":"","what":"Describing data","title":"explore","text":"Describe data one line code: result data-frame, row variable data. can use filter dplyr quick checks: can use describe describing variables . don’t need care variale numerical categorical. output text.","code":"iris %>% describe() #> # A tibble: 5 × 8 #>   variable     type     na na_pct unique   min  mean   max #>   <chr>        <chr> <int>  <dbl>  <int> <dbl> <dbl> <dbl> #> 1 Sepal.Length dbl       0      0     35   4.3  5.84   7.9 #> 2 Sepal.Width  dbl       0      0     23   2    3.06   4.4 #> 3 Petal.Length dbl       0      0     43   1    3.76   6.9 #> 4 Petal.Width  dbl       0      0     22   0.1  1.2    2.5 #> 5 Species      fct       0      0      3  NA   NA     NA # show all variables that contain less than 5 unique values iris %>% describe() %>% filter(unique < 5) #> # A tibble: 1 × 8 #>   variable type     na na_pct unique   min  mean   max #>   <chr>    <chr> <int>  <dbl>  <int> <dbl> <dbl> <dbl> #> 1 Species  fct       0      0      3    NA    NA    NA # show all variables contain NA values iris %>% describe() %>% filter(na > 0) #> # A tibble: 0 × 8 #> # ℹ 8 variables: variable <chr>, type <chr>, na <int>, na_pct <dbl>, #> #   unique <int>, min <dbl>, mean <dbl>, max <dbl> # describe a numerical variable iris %>% describe(Species) #> variable = Species #> type     = factor #> na       = 0 of 150 (0%) #> unique   = 3 #>  setosa     = 50 (33.3%) #>  versicolor = 50 (33.3%) #>  virginica  = 50 (33.3%) # describe a categorical variable iris %>% describe(Sepal.Length) #> variable = Sepal.Length #> type     = double #> na       = 0 of 150 (0%) #> unique   = 35 #> min|max  = 4.3 | 7.9 #> q05|q95  = 4.6 | 7.255 #> q25|q75  = 5.1 | 6.4 #> median   = 5.8 #> mean     = 5.843333"},{"path":"/articles/explore.html","id":"use-data","dir":"Articles","previous_headings":"","what":"Use data","title":"explore","text":"Use one prepared datasets explore: use_data_beer() use_data_diamonds() use_data_iris() use_data_mpg() use_data_mtcars() use_data_penguins() use_data_starwars() use_data_titanic()","code":"use_data_beer() %>% describe() #> # A tibble: 11 × 8 #>    variable          type     na na_pct unique    min    mean    max #>    <chr>             <chr> <int>  <dbl>  <int>  <dbl>   <dbl>  <dbl> #>  1 name              chr       0    0      161   NA     NA      NA   #>  2 brand             chr       0    0       29   NA     NA      NA   #>  3 country           chr       0    0        3   NA     NA      NA   #>  4 year              dbl       0    0        1 2023   2023    2023   #>  5 type              chr       0    0        3   NA     NA      NA   #>  6 color_dark        dbl       0    0        2    0      0.09    1   #>  7 alcohol_vol_pct   dbl       2    1.2     35    0      4.32    8.4 #>  8 original_wort     dbl       5    3.1     54    5.1   11.3    18.3 #>  9 energy_kcal_100ml dbl      11    6.8     34   20     39.9    62   #> 10 carb_g_100ml      dbl      16    9.9     44    1.5    3.53    6.7 #> 11 sugar_g_100ml     dbl      16    9.9     26    0      0.72    4.6"},{"path":"/articles/explore.html","id":"create-data","dir":"Articles","previous_headings":"","what":"Create data","title":"explore","text":"Use one prepared datasets explore: create_data_abtest() create_data_app() create_data_buy() create_data_churn() create_data_esoteric() create_data_newsletter() create_data_person() create_data_unfair() create_data_random() can build random dataset using create_data_empty() add_var_random_*() functions:","code":"# create dataset and describe it data <- create_data_app(obs = 100) describe(data) #> # A tibble: 7 × 8 #>   variable     type     na na_pct unique   min    mean   max #>   <chr>        <chr> <int>  <dbl>  <int> <dbl>   <dbl> <dbl> #> 1 os           chr       0      0      3    NA   NA       NA #> 2 free         int       0      0      2     0    0.62     1 #> 3 downloads    int       0      0     99   255 6704.   18386 #> 4 rating       dbl       0      0      5     1    3.44     5 #> 5 type         chr       0      0     10    NA   NA       NA #> 6 updates      dbl       0      0     72     1   45.6     99 #> 7 screen_sizes dbl       0      0      5     1    2.61     5 # create dataset and describe it data <- create_data_random(obs = 100, vars = 5) describe(data) #> # A tibble: 7 × 8 #>   variable   type     na na_pct unique   min  mean   max #>   <chr>      <chr> <int>  <dbl>  <int> <dbl> <dbl> <dbl> #> 1 id         int       0      0    100     1 50.5    100 #> 2 target_ind int       0      0      2     0  0.53     1 #> 3 var_1      int       0      0     61     1 51.4     99 #> 4 var_2      int       0      0     63     1 48.6     98 #> 5 var_3      int       0      0     62     1 49.2    100 #> 6 var_4      int       0      0     68     0 48.6    100 #> 7 var_5      int       0      0     64     2 51.9     99 # create dataset and describe it data <- create_data_empty(obs = 1000) %>%    add_var_random_01(\"target\") %>%    add_var_random_dbl(\"age\", min_val = 18, max_val = 80) %>%    add_var_random_cat(\"gender\",                       cat = c(\"male\", \"female\", \"other\"),                       prob = c(0.4, 0.4, 0.2)) %>%    add_var_random_starsign() %>%   add_var_random_moon() describe(data) #> # A tibble: 5 × 8 #>   variable        type     na na_pct unique   min  mean   max #>   <chr>           <chr> <int>  <dbl>  <int> <dbl> <dbl> <dbl> #> 1 target          int       0      0      2   0    0.51   1   #> 2 age             dbl       0      0   1000  18.2 49.1   80.0 #> 3 gender          chr       0      0      3  NA   NA     NA   #> 4 random_starsign chr       0      0     12  NA   NA     NA   #> 5 random_moon     chr       0      0      4  NA   NA     NA data %>% select(random_starsign, random_moon) %>% explore_all()"},{"path":"/articles/explore.html","id":"basic-data-cleaning","dir":"Articles","previous_headings":"","what":"Basic data cleaning","title":"explore","text":"clean variable can use clean_var. one line code can rename variable, replace NA-values set minimum maximum value. drop variables observations can use drop_var_*() drop_obs_*() functions.","code":"iris %>%    clean_var(Sepal.Length,              min_val = 4.5,              max_val = 7.0,              na = 5.8,              name = \"sepal_length\") %>%    describe() #> # A tibble: 5 × 8 #>   variable     type     na na_pct unique   min  mean   max #>   <chr>        <chr> <int>  <dbl>  <int> <dbl> <dbl> <dbl> #> 1 sepal_length dbl       0      0     26   4.5  5.81   7   #> 2 Sepal.Width  dbl       0      0     23   2    3.06   4.4 #> 3 Petal.Length dbl       0      0     43   1    3.76   6.9 #> 4 Petal.Width  dbl       0      0     22   0.1  1.2    2.5 #> 5 Species      fct       0      0      3  NA   NA     NA use_data_penguins() %>%    describe_tbl() #> 344 observations with 8 variables #> 11 observations containing missings (NA) #> 5 variables containing missings (NA) #> 0 variables with no variance use_data_penguins() %>%   drop_obs_with_na() %>%   describe_tbl() #> 333 observations with 8 variables #> 0 observations containing missings (NA) #> 0 variables containing missings (NA) #> 0 variables with no variance"},{"path":"/articles/explore.html","id":"create-notebook","dir":"Articles","previous_headings":"","what":"Create notebook","title":"explore","text":"Create RMarkdown template explore data. Set output_dir (existing file may overwritten)","code":"create_notebook_explore(   output_dir = tempdir(),   output_file = \"notebook-explore.Rmd\")"},{"path":"/articles/explore_mtcars.html","id":"how-to-explore-the-mtcars-dataset-using-the-explore-package-","dir":"Articles","previous_headings":"","what":"How to explore the mtcars dataset using the explore package.","title":"Explore mtcars","text":"explore package simplifies Exploratory Data Analysis (EDA). Get faster insights less code! mtcars dataset comes dplyr package. use packages explore dplyr (mtcars, select(), mutate() %>% operator).","code":"library(dplyr) library(explore)"},{"path":"/articles/explore_mtcars.html","id":"explore-dataset","dir":"Articles","previous_headings":"How to explore the mtcars dataset using the explore package.","what":"Explore dataset","title":"Explore mtcars","text":"data extracted 1974 Motor Trend US magazine, comprises fuel consumption 10 aspects automobile design performance 32 automobiles (1973–74 models).","code":"mtcars %>% explore_tbl() mtcars %>% describe() #> # A tibble: 11 × 8 #>    variable type     na na_pct unique   min   mean    max #>    <chr>    <chr> <int>  <dbl>  <int> <dbl>  <dbl>  <dbl> #>  1 mpg      dbl       0      0     25 10.4   20.1   33.9  #>  2 cyl      dbl       0      0      3  4      6.19   8    #>  3 disp     dbl       0      0     27 71.1  231.   472    #>  4 hp       dbl       0      0     22 52    147.   335    #>  5 drat     dbl       0      0     22  2.76   3.6    4.93 #>  6 wt       dbl       0      0     29  1.51   3.22   5.42 #>  7 qsec     dbl       0      0     30 14.5   17.8   22.9  #>  8 vs       dbl       0      0      2  0      0.44   1    #>  9 am       dbl       0      0      2  0      0.41   1    #> 10 gear     dbl       0      0      3  3      3.69   5    #> 11 carb     dbl       0      0      6  1      2.81   8"},{"path":"/articles/explore_mtcars.html","id":"explore-variables","dir":"Articles","previous_headings":"How to explore the mtcars dataset using the explore package.","what":"Explore variables","title":"Explore mtcars","text":"","code":"mtcars %>%    explore_all()"},{"path":"/articles/explore_mtcars.html","id":"number-of-gears","dir":"Articles","previous_headings":"How to explore the mtcars dataset using the explore package.","what":"Number of gears?","title":"Explore mtcars","text":"difference cars 3,4 5 gears?  cars dataset 3 4 gears. 15.6% 5 gears. Now check relation variables gear:  see 100% cars = 0 (automatic) 3 gears. cars = 1 (manual) 5 gears.","code":"mtcars %>%    explore(gear) mtcars %>%    select(gear, mpg, hp, cyl, am) %>%    explore_all(target = gear)"},{"path":"/articles/explore_mtcars.html","id":"high-miles-per-gallon","dir":"Articles","previous_headings":"How to explore the mtcars dataset using the explore package.","what":"High miles per gallon?","title":"Explore mtcars","text":"Let’s define interesting target: Cars mpg (miles per gallon) > 25 copy data create new target variable  , 19% cars mpg > 25. else special ?    strong differences cars / without “high mpg”. Now let’s grow decision tree:  Growing decision tree, shows seems strong correlation wt (weight) “high mpg”. Cars low weight much likely “high mpg”. Let’s take closer look wt:   plot shows percentage cars high mpg. Cars high mpg weight < 2.5. wt (weight) good predictor high mpg.  strong correlation wt mpg. want high miles per gallon (mpg), buy car low weight (wt)!","code":"data <- mtcars %>%    mutate(highmpg = if_else(mpg > 25, 1, 0, 0)) %>%    select(-mpg)  data %>% explore(highmpg) data %>%    select(highmpg, cyl, disp, hp) %>%    explore_all(target = highmpg) data %>%    select(highmpg, drat, wt, qsec, vs) %>%    explore_all(target = highmpg) data %>%    select(highmpg, am, gear, carb) %>%    explore_all(target = highmpg) data %>%    explain_tree(target = highmpg) data %>% explore(wt, target = highmpg) data %>% explore(wt, target = highmpg, split = FALSE) mtcars %>% explore(wt, mpg)"},{"path":"/articles/explore_mtcars.html","id":"horsepower","dir":"Articles","previous_headings":"How to explore the mtcars dataset using the explore package.","what":"Horsepower?","title":"Explore mtcars","text":"relation horsepower variables like number cylinder? Let’s build decision tree horsepower target:  cars average hp 147 (shown top node). data split cyl. Cars cyl<7 (56% cars) average hp 98 cars cp>=7 (44% cars) average hp 209. variables cyl mpg can explain hp. bottom nodes showing average hp 80, 121 209. tree rounded values shown. want know exact values split, can use parameter = \"model\" get model returned take look. see split mpg done exactly 21.45 Now let’s take look direct correlation variables used tree hp:  Cars 8 cylinders higher horsepower. Cars low miles per gallon (mpg) higher horsepower!","code":"mtcars %>%    explain_tree(target = hp, minsplit=15) model #> n= 32  #>  #> node), split, n, deviance, yval #>       * denotes terminal node #>  #> 1) root 32 145726.900 146.68750   #>   2) cyl< 7 18  14638.940  98.05556   #>     4) mpg>=21.45 10   3618.000  80.00000 * #>     5) mpg< 21.45 8   3685.875 120.62500 * #>   3) cyl>=7 14  33782.360 209.21430 * mtcars %>%    select(hp, cyl, mpg) %>%    explore_all(target = hp)"},{"path":"/articles/explore_penguins.html","id":"how-to-explore-the-penguins-dataset-using-the-explore-package-","dir":"Articles","previous_headings":"","what":"How to explore the penguins dataset using the explore package.","title":"Explore penguins","text":"explore package simplifies Exploratory Data Analysis (EDA). Get faster insights less code! use < 10 lines code just 6 function names explore penguins: penguins dataset comes palmerpenguins package. 344 observations 8 variables. (https://github.com/allisonhorst/palmerpenguins) Furthermore, use packages {dplyr} filter() %>% {explore} data exploration.","code":"library(dplyr) library(explore) penguins <- explore::use_data_penguins() # equivalent to  # penguins <- palmerpenguins::penguins"},{"path":"/articles/explore_penguins.html","id":"describe-variables","dir":"Articles","previous_headings":"How to explore the penguins dataset using the explore package.","what":"Describe variables","title":"Explore penguins","text":"NA-values (unknown values) data. variable containing NAs sex. flipper_length_mm others contain 2 observations NAs.","code":"penguins %>% describe() #> # A tibble: 8 × 8 #>   variable          type     na na_pct unique    min   mean    max #>   <chr>             <chr> <int>  <dbl>  <int>  <dbl>  <dbl>  <dbl> #> 1 species           fct       0    0        3   NA     NA     NA   #> 2 island            fct       0    0        3   NA     NA     NA   #> 3 bill_length_mm    dbl       2    0.6    165   32.1   43.9   59.6 #> 4 bill_depth_mm     dbl       2    0.6     81   13.1   17.2   21.5 #> 5 flipper_length_mm int       2    0.6     56  172    201.   231   #> 6 body_mass_g       int       2    0.6     95 2700   4202.  6300   #> 7 sex               fct      11    3.2      3   NA     NA     NA   #> 8 year              int       0    0        3 2007   2008.  2009"},{"path":"/articles/explore_penguins.html","id":"data-cleaning","dir":"Articles","previous_headings":"How to explore the penguins dataset using the explore package.","what":"Data cleaning","title":"Explore penguins","text":"use penguins known flipper length data exploration! reduced penguins 344 342.","code":"data <- penguins %>%    filter(flipper_length_mm > 0)"},{"path":"/articles/explore_penguins.html","id":"explore-variables","dir":"Articles","previous_headings":"How to explore the penguins dataset using the explore package.","what":"Explore variables","title":"Explore penguins","text":"","code":"data %>%    explore_all()"},{"path":"/articles/explore_penguins.html","id":"which-species","dir":"Articles","previous_headings":"How to explore the penguins dataset using the explore package.","what":"Which species?","title":"Explore penguins","text":"relationship variables species?  already see strong patterns data. flipper_length_mm separates species Gentoo, bill_length_mm separates species Adelie Chinstrap. see Chinstrap Gentoo located separate islands. Now explain species using decision tree:  found easy explanation find species just using flipper_length_mm bill_length_mm. flipper_legnth_mm >= 207, Gentoo penguin (95% right) flipper_length_mm < 207 bill_length_mm < 43, Adelie penguin (97% right) flipper_length_mm < 207 bill_length_mm >= 43, Chinstrap penguin (92% right) Now let’s take closer look variables:  plot shows perfect good separation 3 species!","code":"data %>%    explore_all(target = species) data %>% explain_tree(target = species) data %>% explore(flipper_length_mm, bill_length_mm, target = species)"},{"path":"/articles/explore_titanic.html","id":"how-to-explore-the-titanic-dataset-using-the-explore-package-","dir":"Articles","previous_headings":"","what":"How to explore the Titanic dataset using the explore package.","title":"Explore titanic","text":"explore package simplifies Exploratory Data Analysis (EDA). Get faster insights less code! titanic dataset available base R. data 5 variables 32 rows. row represent observation. tidy, instead data set contains Frequencies! data frame, therefore need convert first.","code":"library(dplyr) library(tibble) library(explore) titanic <- as_tibble(Titanic)"},{"path":"/articles/explore_titanic.html","id":"explore-dataset","dir":"Articles","previous_headings":"How to explore the Titanic dataset using the explore package.","what":"Explore dataset","title":"Explore titanic","text":"variables categorical except n, representing number observations. data look like :","code":"titanic %>% describe_tbl(n = n) #> 2 201 (2.2k) observations with 5 variables #> 0 observations containing missings (NA) #> 0 variables containing missings (NA) #> 0 variables with no variance titanic %>% describe() #> # A tibble: 5 × 8 #>   variable type     na na_pct unique   min  mean   max #>   <chr>    <chr> <int>  <dbl>  <int> <dbl> <dbl> <dbl> #> 1 Class    chr       0      0      4    NA  NA      NA #> 2 Sex      chr       0      0      2    NA  NA      NA #> 3 Age      chr       0      0      2    NA  NA      NA #> 4 Survived chr       0      0      2    NA  NA      NA #> 5 n        dbl       0      0     22     0  68.8   670 titanic %>% head(10) #> # A tibble: 10 × 5 #>    Class Sex    Age   Survived     n #>    <chr> <chr>  <chr> <chr>    <dbl> #>  1 1st   Male   Child No           0 #>  2 2nd   Male   Child No           0 #>  3 3rd   Male   Child No          35 #>  4 Crew  Male   Child No           0 #>  5 1st   Female Child No           0 #>  6 2nd   Female Child No           0 #>  7 3rd   Female Child No          17 #>  8 Crew  Female Child No           0 #>  9 1st   Male   Adult No         118 #> 10 2nd   Male   Adult No         154"},{"path":"/articles/explore_titanic.html","id":"explore-variables","dir":"Articles","previous_headings":"How to explore the Titanic dataset using the explore package.","what":"Explore variables","title":"Explore titanic","text":"normal explore() function {explore} package expects tidy dataset (row observation), need add parameter n (number observations)  get exact numbers using describe() together n-parameter (weight) explore variables, can simply use explore_all(). automatically fit height plot using fig.height=total_fig_height(titanic, var_name_n = \"n\") code chunk header.","code":"titanic %>% explore(Class, n = n) titanic %>% describe(Class, n = n) #> variable = Class #> type     = character #> na       = 0 of 2 201 (0%) #> unique   = 4 #>  1st     = 325 (14.8%) #>  2nd     = 285 (12.9%) #>  3rd     = 706 (32.1%) #>  Crew    = 885 (40.2%) titanic %>% explore_all(n = n)"},{"path":"/articles/explore_titanic.html","id":"survived","dir":"Articles","previous_headings":"How to explore the Titanic dataset using the explore package.","what":"Survived?","title":"Explore titanic","text":"Now want check relation variables Survived. can use explore() function Survived target.  get better feeling relationship Class Survived, switch percentage split target sperate bars. can using split = TRUE (default).  Now get plot, color sum 100%. big difference bar length indicates important relationship two variables. case, passengers 1st Class highest probability survive.  Female much likely survive!  Child advantage survive. Now can create simple decision tree. count-data need pass parameter n.  see Sex Class can give good explanation likely survive. Sex = Male: 21% survived (79% observations) Sex = Female & Class = 3rd: 46% survived (9% observations) Sex = Female & Class <> 3rd: 93% survived (12% observations)","code":"titanic %>% explore(Class, target = Survived, n = n, split = FALSE) titanic %>% explore(Class, target = Survived, n = n, split = TRUE) titanic %>% explore(Sex, target = Survived, n = n) titanic %>% explore(Age, target = Survived, n = n) titanic %>% explain_tree(target = Survived, n = n)"},{"path":"/articles/explore_titanic.html","id":"other-correlations","dir":"Articles","previous_headings":"How to explore the Titanic dataset using the explore package.","what":"Other correlations","title":"Explore titanic","text":"Child unlikely 1st class! Crew members adult expected.  Almost female Crew members! Female tend better Class!","code":"titanic %>% explore(Age, target = Class, n = n) titanic %>% explore(Sex, target = Class, n = n)"},{"path":"/articles/predict.html","id":"train-model","dir":"Articles","previous_headings":"","what":"Train model","title":"Predict","text":"First create decision tree model, using buy target (buy contains 0 1 values)  see clear patterns. Now create random forest model (accurate). get model , use parameter = \"model\"","code":"train %>% explain_tree(target = buy) model <- train %>% explain_forest(target = buy, out = \"model\")"},{"path":"/articles/predict.html","id":"predict","dir":"Articles","previous_headings":"","what":"Predict","title":"Predict","text":"Now create test data use model prediction. use different seed get different data. Now got 2 new variables prediction_0 (probability buy == 0) prediction_1 (probability buy == 1). can check predictions comparing prediction_1 real values buy.  clear difference buy == 0 buy == 1. prediction works.","code":"test <- create_data_buy(obs = 1000, seed = 2) glimpse(test) #> Rows: 1,000 #> Columns: 13 #> $ period          <int> 202012, 202012, 202012, 202012, 202012, 202012, 202012… #> $ buy             <int> 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, … #> $ age             <int> 40, 61, 76, 39, 59, 47, 37, 65, 34, 64, 53, 46, 56, 67… #> $ city_ind        <int> 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, … #> $ female_ind      <int> 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, … #> $ fixedvoice_ind  <int> 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, … #> $ fixeddata_ind   <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … #> $ fixedtv_ind     <int> 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, … #> $ mobilevoice_ind <int> 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, … #> $ mobiledata_prd  <chr> \"BUSINESS\", \"MOBILE STICK\", \"NO\", \"MOBILE STICK\", \"NO\"… #> $ bbi_speed_ind   <int> 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, … #> $ bbi_usg_gb      <int> 77, 68, 8, 63, 49, 75, 66, 45, 82, 55, 45, 53, 49, 53,… #> $ hh_single       <int> 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, … test <- test %>% predict_target(model = model) glimpse(test) #> Rows: 1,000 #> Columns: 15 #> $ period          <int> 202012, 202012, 202012, 202012, 202012, 202012, 202012… #> $ buy             <int> 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, … #> $ age             <int> 40, 61, 76, 39, 59, 47, 37, 65, 34, 64, 53, 46, 56, 67… #> $ city_ind        <int> 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, … #> $ female_ind      <int> 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, … #> $ fixedvoice_ind  <int> 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, … #> $ fixeddata_ind   <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … #> $ fixedtv_ind     <int> 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, … #> $ mobilevoice_ind <int> 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, … #> $ mobiledata_prd  <chr> \"BUSINESS\", \"MOBILE STICK\", \"NO\", \"MOBILE STICK\", \"NO\"… #> $ bbi_speed_ind   <int> 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, … #> $ bbi_usg_gb      <int> 77, 68, 8, 63, 49, 75, 66, 45, 82, 55, 45, 53, 49, 53,… #> $ hh_single       <int> 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, … #> $ prediction_0    <dbl> 0.06, 0.40, 1.00, 0.00, 0.74, 0.40, 0.04, 1.00, 0.00, … #> $ prediction_1    <dbl> 0.94, 0.60, 0.00, 1.00, 0.26, 0.60, 0.96, 0.00, 1.00, … test %>% explore(prediction_1, target = buy)"},{"path":[]},{"path":"/articles/report-target.html","id":"describe-data","dir":"Articles","previous_headings":"Explore","what":"Describe Data","title":"Report target","text":"","code":"#> 1 000 (1k) observations with 9 variables #> 0 observations containing missings (NA) #> 0 variables containing missings (NA) #> 0 variables with no variance #> # A tibble: 9 × 8 #>   variable   type     na na_pct unique   min  mean   max #>   <chr>      <chr> <int>  <dbl>  <int> <dbl> <dbl> <dbl> #> 1 price      dbl       0      0     26     4 19.1     29 #> 2 type       chr       0      0      3    NA NA       NA #> 3 usage      dbl       0      0    160     0 54.7    150 #> 4 shared     int       0      0      2     0  0.4      1 #> 5 device     chr       0      0      3    NA NA       NA #> 6 newsletter int       0      0      2     0  0.5      1 #> 7 language   chr       0      0      4    NA NA       NA #> 8 duration   int       0      0    101     0 49.6    100 #> 9 churn      dbl       0      0      2     0  0.35     1"},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/report-targetpct.html","id":"describe-data","dir":"Articles","previous_headings":"Explore","what":"Describe Data","title":"Report targetpct","text":"","code":"#> 1 000 (1k) observations with 9 variables #> 0 observations containing missings (NA) #> 0 variables containing missings (NA) #> 0 variables with no variance #> # A tibble: 9 × 8 #>   variable   type     na na_pct unique   min  mean   max #>   <chr>      <chr> <int>  <dbl>  <int> <dbl> <dbl> <dbl> #> 1 price      dbl       0      0     26     4 19.1     29 #> 2 type       chr       0      0      3    NA NA       NA #> 3 usage      dbl       0      0    160     0 54.7    150 #> 4 shared     int       0      0      2     0  0.4      1 #> 5 device     chr       0      0      3    NA NA       NA #> 6 newsletter int       0      0      2     0  0.5      1 #> 7 language   chr       0      0      4    NA NA       NA #> 8 duration   int       0      0    101     0 49.6    100 #> 9 churn      dbl       0      0      2     0  0.35     1"},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/report.html","id":"describe-data","dir":"Articles","previous_headings":"Explore","what":"Describe Data","title":"Report variables","text":"","code":"#> 1 000 (1k) observations with 9 variables #> 0 observations containing missings (NA) #> 0 variables containing missings (NA) #> 0 variables with no variance #> # A tibble: 9 × 8 #>   variable   type     na na_pct unique   min  mean   max #>   <chr>      <chr> <int>  <dbl>  <int> <dbl> <dbl> <dbl> #> 1 price      dbl       0      0     26     4 19.1     29 #> 2 type       chr       0      0      3    NA NA       NA #> 3 usage      dbl       0      0    160     0 54.7    150 #> 4 shared     int       0      0      2     0  0.4      1 #> 5 device     chr       0      0      3    NA NA       NA #> 6 newsletter int       0      0      2     0  0.5      1 #> 7 language   chr       0      0      4    NA NA       NA #> 8 duration   int       0      0    101     0 49.6    100 #> 9 churn      dbl       0      0      2     0  0.35     1"},{"path":[]},{"path":"/articles/tips-tricks.html","id":"count-with-percent","dir":"Articles","previous_headings":"","what":"Count with percent","title":"Tips & tricks","text":"classic count() returns number observations. add percent values, simply use count_pct() {explore}.","code":"data <- use_data_penguins() data %>% count(island) #> # A tibble: 3 × 2 #>   island        n #>   <fct>     <int> #> 1 Biscoe      168 #> 2 Dream       124 #> 3 Torgersen    52 data %>% count_pct(island) #> # A tibble: 3 × 4 #>   island        n total   pct #>   <fct>     <int> <int> <dbl> #> 1 Biscoe      168   344  48.8 #> 2 Dream       124   344  36.0 #> 3 Torgersen    52   344  15.1"},{"path":"/articles/tips-tricks.html","id":"add-id","dir":"Articles","previous_headings":"","what":"Add id","title":"Tips & tricks","text":"add id variable, simply use add_var_id() {explore}.","code":"data %>% glimpse() #> Rows: 344 #> Columns: 8 #> $ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel… #> $ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse… #> $ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, … #> $ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, … #> $ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186… #> $ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, … #> $ sex               <fct> male, female, female, NA, female, male, female, male… #> $ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007… data %>% add_var_id() %>% glimpse() #> Rows: 344 #> Columns: 9 #> $ id                <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1… #> $ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel… #> $ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse… #> $ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, … #> $ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, … #> $ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186… #> $ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, … #> $ sex               <fct> male, female, female, NA, female, male, female, male… #> $ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…"},{"path":"/articles/tips-tricks.html","id":"user-defined-report","dir":"Articles","previous_headings":"","what":"User defined report","title":"Tips & tricks","text":"Create user defined report (RMarkdown template) explore data.","code":"create_notebook_explore(   output_dir = tempdir(),   output_file = \"notebook-explore.Rmd\")"},{"path":"/articles/tips-tricks.html","id":"data-dictionary","dir":"Articles","previous_headings":"","what":"Data Dictionary","title":"Tips & tricks","text":"Create Data Dictionary data set (Markdown File data_dict.md) Add title, detailed descriptions change default filename","code":"iris  %>%  data_dict_md(output_dir = tempdir()) description <- data.frame(                   variable = c(\"Species\"),                    description = c(\"Species of Iris flower\")) data_dict_md(iris,               title = \"iris flower data set\",               description =  description,               output_file = \"data_dict_iris.md\",              output_dir = tempdir())"},{"path":"/articles/tips-tricks.html","id":"color","dir":"Articles","previous_headings":"","what":"Color","title":"Tips & tricks","text":"","code":"colors <- mix_color(\"blue\", n = 5) colors #> [1] \"#000055\" \"#0000AA\" \"#0000FF\" \"#5454FF\" \"#A9A9FF\" show_color(colors) colors <- mix_color(\"gold\", \"red\", n = 4) colors #> [1] \"#FFD700\" \"#FF8F00\" \"#FF4700\" \"#FF0000\" show_color(colors)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Roland Krasser. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Krasser R (2024). explore: Simplifies Exploratory Data Analysis. R package version 1.3.0.9002, https://github.com/rolkra/explore, https://rolkra.github.io/explore/.","code":"@Manual{,   title = {explore: Simplifies Exploratory Data Analysis},   author = {Roland Krasser},   year = {2024},   note = {R package version 1.3.0.9002, https://github.com/rolkra/explore},   url = {https://rolkra.github.io/explore/}, }"},{"path":"/index.html","id":"explore-","dir":"","previous_headings":"","what":"Simplifies Exploratory Data Analysis","title":"Simplifies Exploratory Data Analysis","text":"Simplifies Exploratory Data Analysis.","code":""},{"path":"/index.html","id":"why-this-package","dir":"","previous_headings":"","what":"Why this package?","title":"Simplifies Exploratory Data Analysis","text":"Faster insights less code experienced R users. Exploring fresh new dataset exciting. Instead searching syntax, use attention searching interesting patterns data, using just handful easy remember functions. code easy understand - even non R users. Instant success new R users. said R steep learning curve, especially come GUI statistical analysis. Instead learning lot R syntax can explore data, explore package enables instant success. can start just one function - explore() - learn R syntax later step step.","code":""},{"path":"/index.html","id":"how-to-use-it","dir":"","previous_headings":"","what":"How to use it","title":"Simplifies Exploratory Data Analysis","text":"three ways use package: Interactive data exploration (univariate, bivariate, multivariate). target can defined (binary / categorical / numerical). Generate automated report one line code. target can binary, categorical numeric. Manual exploration using easy remember set tidy functions. basically five “verbs” remember: explore - want explore table, variable relationship variable target (binary, categorical numeric). output functions plot (automatically checks attribute categorical numerical, chooses best plot-type handles outliers). describe - want describe dataset variable (number na, unique values, …) output functions text. explain - create simple model explains target. explain_tree() decision tree, explain_forest() random forest, explain_xgboost() xgboost model explain_logreg() logistic regression. report - generate automated report variables. target can defined (binary, categorical numeric) abtest - test difference statistically significant can use {explore} tidy data (row observation) count data (row group observations attributes, one variable stores number observations). use count data, need add n parameter (variable containing number observations). functions support count data.","code":""},{"path":[]},{"path":"/index.html","id":"cran","dir":"","previous_headings":"Installation","what":"CRAN","title":"Simplifies Exploratory Data Analysis","text":"","code":"install.packages(\"explore\")"},{"path":"/index.html","id":"dev-version-github","dir":"","previous_headings":"Installation","what":"DEV version (github)","title":"Simplifies Exploratory Data Analysis","text":"behind firewall, may want : Download unzip explore package install devtools::install_local","code":"# install from github if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"rolkra/explore\") # install local if (!require(devtools)) install.packages(\"devtools\") devtools::install_local(path = <path of local package>, force = TRUE)"},{"path":[]},{"path":"/index.html","id":"interactive-data-exploration","dir":"","previous_headings":"Examples","what":"Interactive data exploration","title":"Simplifies Exploratory Data Analysis","text":"Example use explore package explore iris dataset","code":"# load package library(explore)  # explore interactive explore(iris)"},{"path":[]},{"path":[]},{"path":[]},{"path":"/index.html","id":"automated-report","dir":"","previous_headings":"Examples","what":"Automated Report","title":"Simplifies Exploratory Data Analysis","text":"Create report clicking “report ” button use report() function. target defined, report shows variables. target defined, report shows relation variables target. Report variables  create report shows variables relation target, just add target parameter  create report binary target can use parameter targetpct = TRUE (split = FALSE)","code":"iris |> report(output_dir = tempdir()) iris |> report(output_dir = tempdir(), target = Species) # define a target (is Species versicolor?) iris$is_versicolor <- ifelse(iris$Species == \"versicolor\", 1, 0) iris$Species <- NULL  # create report iris |> report(output_dir = tempdir(),                 target = is_versicolor,                 targetpct = TRUE)"},{"path":"/index.html","id":"manual-exploration","dir":"","previous_headings":"Examples","what":"Manual exploration","title":"Simplifies Exploratory Data Analysis","text":"Example use functions explore package explore tidy data (row observation) like iris dataset: Example use functions explore package explore count-data (row group observations): useful functions:","code":"# load packages library(explore)  # use iris dataset data(iris)  # explore Species iris |> explore(Species)  # explore Sepal.Length iris |> explore(Sepal.Length)  # define a target (is Species versicolor?) iris$is_versicolor <- ifelse(iris$Species == \"versicolor\", 1, 0)  # explore relationship between Sepal.Length and the target iris |> explore(Sepal.Length, target = is_versicolor)  # explore relationship between all variables and the target iris |> explore_all(target = is_versicolor)  # explore correlation between Sepal.Length and Petal.Length iris |> explore(Sepal.Length, Petal.Length)  # explore correlation between Sepal.Length, Petal.Length and a target iris |> explore(Sepal.Length, Petal.Length, target = is_versicolor)  # describe dataset describe(iris)  # describe Species iris |> describe(Species)  # explain target using a decision tree iris$Species <- NULL iris |> explain_tree(target = is_versicolor)  # explain target using a logistic regression iris |> explain_logreg(target = is_versicolor) # load packages library(tibble) library(explore)  # use titanic dataset # n = number of observations titanic <- as_tibble(Titanic)  # describe data describe(titanic)  # describe Class titanic |> describe(Class, n = n)  # explore Class titanic |> explore(Class, n = n)  # explore relationship between Class and the target titanic |> explore(Class, n = n, target = Survived)  # explore relationship between all variables and the target titanic |> explore_all(n = n, target = Survived)  # explain target using a decision tree titanic |> explain_tree(n = n, target = Survived) # use data set and explore it use_data_penguins() |> explore() use_data_starwars() |> explore() use_data_diamonds() |> explore() use_data_iris() |> explore() use_data_mpg() |> explore() use_data_mtcars() |> explore() use_data_titanic() |> explore() use_data_beer() |> explore()  # create data set and explore it create_data_app() |> explore() create_data_buy() |> explore() create_data_churn() |> explore() create_data_esoteric() |> explore() create_data_newsletter() |> explore() create_data_person() |> explore() create_data_unfair() |> explore()  # create random dataset with 100 observarions and 5 random variables # and explore it data <- create_data_random(obs = 100, vars = 5) explore(data)  # create your own random dataset and explore it data <- create_data_empty(obs = 1000) |>    add_var_random_01(\"target\") |>    add_var_random_dbl(\"age\", min_val = 18, max_val = 80) |>    add_var_random_cat(\"gender\",                       cat = c(\"male\", \"female\", \"other\"),                       prob = c(0.4, 0.4, 0.2)) |>    add_var_random_starsign() |>    add_var_random_moon()    explore(data)  # create an RMarkdown template to explore your own data # set output_dir (existing file may be overwritten) create_notebook_explore(   output_dir = tempdir(),   output_file = \"notebook-explore.Rmd\")"},{"path":"/reference/abtest.html","id":null,"dir":"Reference","previous_headings":"","what":"A/B testing — abtest","title":"A/B testing — abtest","text":"/B testing","code":""},{"path":"/reference/abtest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A/B testing — abtest","text":"","code":"abtest(data, expr, n, target, sign_level = 0.05, color = \"grey\")"},{"path":"/reference/abtest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A/B testing — abtest","text":"data dataset. data provided, shiny app launched expr Logical expression, return FALSE/TRUE n Variable number observations (count data) target Target variable sign_level Significance Level (typical 0.01/0.05/0.10) color Fill color bar/violin-plot","code":""},{"path":"/reference/abtest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A/B testing — abtest","text":"Plot shows difference significant","code":""},{"path":"/reference/abtest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A/B testing — abtest","text":"","code":"## Using chi2-test or t-test depending on target type data <- create_data_buy(obs = 100) abtest(data, female_ind == 1, target = buy)  # chi2 test  abtest(data, city_ind == 1, target = age)    # t test   ## If small number of observations, Fisher's Exact test ## is used for a binary target (if <= 5 observations in a subgroup) data <- create_data_buy(obs = 25, seed = 1) abtest(data, female_ind == 1, target = buy)  # Fisher's Exact test"},{"path":"/reference/abtest_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"A/B testing interactive — abtest_shiny","title":"A/B testing interactive — abtest_shiny","text":"Launches shiny app /B test","code":""},{"path":"/reference/abtest_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A/B testing interactive — abtest_shiny","text":"","code":"abtest_shiny(   size_a = 100,   size_b = 100,   success_a = 10,   success_b = 20,   success_unit = \"percent\",   sign_level = 0.05 )"},{"path":"/reference/abtest_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A/B testing interactive — abtest_shiny","text":"size_a Size Group size_b Size Group B success_a Success Group success_b Success Group B success_unit \"count\" | \"percent\" sign_level Significance Level (typical 0.01/0.05/0.10)","code":""},{"path":"/reference/abtest_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A/B testing interactive — abtest_shiny","text":"","code":"# Only run examples in interactive R sessions if (interactive())  {    abtest_shiny() }"},{"path":"/reference/abtest_targetnum.html","id":null,"dir":"Reference","previous_headings":"","what":"A/B testing comparing two mean — abtest_targetnum","title":"A/B testing comparing two mean — abtest_targetnum","text":"/B testing comparing two mean","code":""},{"path":"/reference/abtest_targetnum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A/B testing comparing two mean — abtest_targetnum","text":"","code":"abtest_targetnum(data, expr, target, sign_level = 0.05, color = \"grey\")"},{"path":"/reference/abtest_targetnum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A/B testing comparing two mean — abtest_targetnum","text":"data dataset expr Expression, results FALSE/TRUE target Target variable (must numeric) sign_level Significance Level (typical 0.01/0.05/0.10) color fill color","code":""},{"path":"/reference/abtest_targetnum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A/B testing comparing two mean — abtest_targetnum","text":"Plot shows difference significant","code":""},{"path":"/reference/abtest_targetnum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A/B testing comparing two mean — abtest_targetnum","text":"","code":"data <- create_data_buy(obs = 100) abtest(data, city_ind == 1, target = age)"},{"path":"/reference/abtest_targetpct.html","id":null,"dir":"Reference","previous_headings":"","what":"A/B testing comparing percent per group — abtest_targetpct","title":"A/B testing comparing percent per group — abtest_targetpct","text":"/B testing comparing percent per group","code":""},{"path":"/reference/abtest_targetpct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A/B testing comparing percent per group — abtest_targetpct","text":"","code":"abtest_targetpct(   data,   expr,   n,   target,   sign_level = 0.05,   group_label,   ab_label = FALSE,   color = \"grey\" )"},{"path":"/reference/abtest_targetpct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A/B testing comparing percent per group — abtest_targetpct","text":"data dataset expr Expression, results FALSE/TRUE n Variable number observations (count data) target Target variable (must 0/1 FALSE/TRUE) sign_level Significance Level (typical 0.01/0.05/0.10) group_label Label groups (default = expr) ab_label Label Groups B (default = FALSE) color color bar","code":""},{"path":"/reference/abtest_targetpct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A/B testing comparing percent per group — abtest_targetpct","text":"Plot shows difference significant","code":""},{"path":"/reference/abtest_targetpct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A/B testing comparing percent per group — abtest_targetpct","text":"","code":"data <- create_data_buy(obs = 100) abtest(data, female_ind == 1, target = buy)  abtest(data, age >= 40, target = buy)"},{"path":"/reference/add_var_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a variable id at first column in dataset — add_var_id","title":"Add a variable id at first column in dataset — add_var_id","text":"Add variable id first column dataset","code":""},{"path":"/reference/add_var_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a variable id at first column in dataset — add_var_id","text":"","code":"add_var_id(data, name = \"id\", overwrite = FALSE)"},{"path":"/reference/add_var_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a variable id at first column in dataset — add_var_id","text":"data dataset name Name new variable (string) overwrite Can new id variable overwrite existing variable dataset?","code":""},{"path":"/reference/add_var_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a variable id at first column in dataset — add_var_id","text":"Data set containing new id variable","code":""},{"path":"/reference/add_var_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a variable id at first column in dataset — add_var_id","text":"","code":"library(magrittr) iris %>% add_var_id() %>% head() #>   id Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1  1          5.1         3.5          1.4         0.2  setosa #> 2  2          4.9         3.0          1.4         0.2  setosa #> 3  3          4.7         3.2          1.3         0.2  setosa #> 4  4          4.6         3.1          1.5         0.2  setosa #> 5  5          5.0         3.6          1.4         0.2  setosa #> 6  6          5.4         3.9          1.7         0.4  setosa iris %>% add_var_id(name = \"iris_nr\") %>% head() #>   iris_nr Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1       1          5.1         3.5          1.4         0.2  setosa #> 2       2          4.9         3.0          1.4         0.2  setosa #> 3       3          4.7         3.2          1.3         0.2  setosa #> 4       4          4.6         3.1          1.5         0.2  setosa #> 5       5          5.0         3.6          1.4         0.2  setosa #> 6       6          5.4         3.9          1.7         0.4  setosa"},{"path":"/reference/add_var_random_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a random 0/1 variable to dataset — add_var_random_01","title":"Add a random 0/1 variable to dataset — add_var_random_01","text":"Add random 0/1 variable dataset","code":""},{"path":"/reference/add_var_random_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a random 0/1 variable to dataset — add_var_random_01","text":"","code":"add_var_random_01(   data,   name = \"random_01\",   prob = c(0.5, 0.5),   overwrite = TRUE,   seed )"},{"path":"/reference/add_var_random_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a random 0/1 variable to dataset — add_var_random_01","text":"data dataset name Name new variable (string) prob Vector probabilities overwrite Can new random variable overwrite existing variable dataset? seed Seed random number generation (integer)","code":""},{"path":"/reference/add_var_random_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a random 0/1 variable to dataset — add_var_random_01","text":"Dataset containing new random variable","code":""},{"path":"/reference/add_var_random_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a random 0/1 variable to dataset — add_var_random_01","text":"","code":"library(magrittr) iris %>% add_var_random_01() %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species random_01 #> 1          5.1         3.5          1.4         0.2  setosa         1 #> 2          4.9         3.0          1.4         0.2  setosa         0 #> 3          4.7         3.2          1.3         0.2  setosa         1 #> 4          4.6         3.1          1.5         0.2  setosa         0 #> 5          5.0         3.6          1.4         0.2  setosa         0 #> 6          5.4         3.9          1.7         0.4  setosa         1 iris %>% add_var_random_01(name = \"my_var\") %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species my_var #> 1          5.1         3.5          1.4         0.2  setosa      0 #> 2          4.9         3.0          1.4         0.2  setosa      1 #> 3          4.7         3.2          1.3         0.2  setosa      1 #> 4          4.6         3.1          1.5         0.2  setosa      0 #> 5          5.0         3.6          1.4         0.2  setosa      0 #> 6          5.4         3.9          1.7         0.4  setosa      0"},{"path":"/reference/add_var_random_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a random categorical variable to dataset — add_var_random_cat","title":"Add a random categorical variable to dataset — add_var_random_cat","text":"Add random categorical variable dataset","code":""},{"path":"/reference/add_var_random_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a random categorical variable to dataset — add_var_random_cat","text":"","code":"add_var_random_cat(   data,   name = \"random_cat\",   cat = LETTERS[1:6],   prob,   overwrite = TRUE,   seed )"},{"path":"/reference/add_var_random_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a random categorical variable to dataset — add_var_random_cat","text":"data dataset name Name new variable (string) cat Vector categories prob Vector probabilities overwrite Can new random variable overwrite existing variable dataset? seed Seed random number generation (integer)","code":""},{"path":"/reference/add_var_random_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a random categorical variable to dataset — add_var_random_cat","text":"Dataset containing new random variable","code":""},{"path":"/reference/add_var_random_cat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a random categorical variable to dataset — add_var_random_cat","text":"","code":"library(magrittr) iris %>% add_var_random_cat() %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species random_cat #> 1          5.1         3.5          1.4         0.2  setosa          C #> 2          4.9         3.0          1.4         0.2  setosa          E #> 3          4.7         3.2          1.3         0.2  setosa          D #> 4          4.6         3.1          1.5         0.2  setosa          A #> 5          5.0         3.6          1.4         0.2  setosa          B #> 6          5.4         3.9          1.7         0.4  setosa          B iris %>% add_var_random_cat(name = \"my_cat\") %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species my_cat #> 1          5.1         3.5          1.4         0.2  setosa      F #> 2          4.9         3.0          1.4         0.2  setosa      B #> 3          4.7         3.2          1.3         0.2  setosa      B #> 4          4.6         3.1          1.5         0.2  setosa      E #> 5          5.0         3.6          1.4         0.2  setosa      C #> 6          5.4         3.9          1.7         0.4  setosa      D iris %>% add_var_random_cat(cat = c(\"Version A\", \"Version B\")) %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species random_cat #> 1          5.1         3.5          1.4         0.2  setosa  Version A #> 2          4.9         3.0          1.4         0.2  setosa  Version A #> 3          4.7         3.2          1.3         0.2  setosa  Version A #> 4          4.6         3.1          1.5         0.2  setosa  Version B #> 5          5.0         3.6          1.4         0.2  setosa  Version A #> 6          5.4         3.9          1.7         0.4  setosa  Version A iris %>% add_var_random_cat(cat = c(1,2,3,4,5)) %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species random_cat #> 1          5.1         3.5          1.4         0.2  setosa          4 #> 2          4.9         3.0          1.4         0.2  setosa          2 #> 3          4.7         3.2          1.3         0.2  setosa          1 #> 4          4.6         3.1          1.5         0.2  setosa          2 #> 5          5.0         3.6          1.4         0.2  setosa          2 #> 6          5.4         3.9          1.7         0.4  setosa          1"},{"path":"/reference/add_var_random_dbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a random double variable to dataset — add_var_random_dbl","title":"Add a random double variable to dataset — add_var_random_dbl","text":"Add random double variable dataset","code":""},{"path":"/reference/add_var_random_dbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a random double variable to dataset — add_var_random_dbl","text":"","code":"add_var_random_dbl(   data,   name = \"random_dbl\",   min_val = 0,   max_val = 100,   overwrite = TRUE,   seed )"},{"path":"/reference/add_var_random_dbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a random double variable to dataset — add_var_random_dbl","text":"data dataset name Name new variable (string) min_val Minimum random integers max_val Maximum random integers overwrite Can new random variable overwrite existing variable dataset? seed Seed random number generation (integer)","code":""},{"path":"/reference/add_var_random_dbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a random double variable to dataset — add_var_random_dbl","text":"Dataset containing new random variable","code":""},{"path":"/reference/add_var_random_dbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a random double variable to dataset — add_var_random_dbl","text":"","code":"library(magrittr) iris %>% add_var_random_dbl() %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species random_dbl #> 1          5.1         3.5          1.4         0.2  setosa   38.62818 #> 2          4.9         3.0          1.4         0.2  setosa   54.23828 #> 3          4.7         3.2          1.3         0.2  setosa   74.42531 #> 4          4.6         3.1          1.5         0.2  setosa   33.33324 #> 5          5.0         3.6          1.4         0.2  setosa   32.49152 #> 6          5.4         3.9          1.7         0.4  setosa   42.37430 iris %>% add_var_random_dbl(name = \"random_var\") %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species random_var #> 1          5.1         3.5          1.4         0.2  setosa  91.637595 #> 2          4.9         3.0          1.4         0.2  setosa   7.087567 #> 3          4.7         3.2          1.3         0.2  setosa  81.009608 #> 4          4.6         3.1          1.5         0.2  setosa  48.590447 #> 5          5.0         3.6          1.4         0.2  setosa  30.523473 #> 6          5.4         3.9          1.7         0.4  setosa  61.787383 iris %>% add_var_random_dbl(min_val = 1, max_val = 10) %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species random_dbl #> 1          5.1         3.5          1.4         0.2  setosa   3.173445 #> 2          4.9         3.0          1.4         0.2  setosa   4.697004 #> 3          4.7         3.2          1.3         0.2  setosa   8.300575 #> 4          4.6         3.1          1.5         0.2  setosa   4.412271 #> 5          5.0         3.6          1.4         0.2  setosa   5.022552 #> 6          5.4         3.9          1.7         0.4  setosa   6.134570"},{"path":"/reference/add_var_random_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a random integer variable to dataset — add_var_random_int","title":"Add a random integer variable to dataset — add_var_random_int","text":"Add random integer variable dataset","code":""},{"path":"/reference/add_var_random_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a random integer variable to dataset — add_var_random_int","text":"","code":"add_var_random_int(   data,   name = \"random_int\",   min_val = 1,   max_val = 10,   overwrite = TRUE,   seed )"},{"path":"/reference/add_var_random_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a random integer variable to dataset — add_var_random_int","text":"data dataset name Name new variable (string) min_val Minimum random integers max_val Maximum random integers overwrite Can new random variable overwrite existing variable dataset? seed Seed random number generation (integer)","code":""},{"path":"/reference/add_var_random_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a random integer variable to dataset — add_var_random_int","text":"Dataset containing new random variable","code":""},{"path":"/reference/add_var_random_int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a random integer variable to dataset — add_var_random_int","text":"","code":"library(magrittr) iris %>% add_var_random_int() %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species random_int #> 1          5.1         3.5          1.4         0.2  setosa          8 #> 2          4.9         3.0          1.4         0.2  setosa          8 #> 3          4.7         3.2          1.3         0.2  setosa         10 #> 4          4.6         3.1          1.5         0.2  setosa          8 #> 5          5.0         3.6          1.4         0.2  setosa          5 #> 6          5.4         3.9          1.7         0.4  setosa          4 iris %>% add_var_random_int(name = \"random_var\") %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species random_var #> 1          5.1         3.5          1.4         0.2  setosa          7 #> 2          4.9         3.0          1.4         0.2  setosa          5 #> 3          4.7         3.2          1.3         0.2  setosa          4 #> 4          4.6         3.1          1.5         0.2  setosa          2 #> 5          5.0         3.6          1.4         0.2  setosa          5 #> 6          5.4         3.9          1.7         0.4  setosa          3 iris %>% add_var_random_int(min_val = 1, max_val = 10) %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species random_int #> 1          5.1         3.5          1.4         0.2  setosa          2 #> 2          4.9         3.0          1.4         0.2  setosa          2 #> 3          4.7         3.2          1.3         0.2  setosa          6 #> 4          4.6         3.1          1.5         0.2  setosa          5 #> 5          5.0         3.6          1.4         0.2  setosa         10 #> 6          5.4         3.9          1.7         0.4  setosa          6"},{"path":"/reference/add_var_random_moon.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a random moon variable to dataset — add_var_random_moon","title":"Add a random moon variable to dataset — add_var_random_moon","text":"Add random moon variable dataset","code":""},{"path":"/reference/add_var_random_moon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a random moon variable to dataset — add_var_random_moon","text":"","code":"add_var_random_moon(data, name = \"random_moon\", overwrite = TRUE, seed)"},{"path":"/reference/add_var_random_moon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a random moon variable to dataset — add_var_random_moon","text":"data dataset name Name new variable (string) overwrite Can new random variable overwrite existing variable dataset? seed Seed random number generation (integer)","code":""},{"path":"/reference/add_var_random_moon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a random moon variable to dataset — add_var_random_moon","text":"Dataset containing new random variable","code":""},{"path":"/reference/add_var_random_moon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a random moon variable to dataset — add_var_random_moon","text":"","code":"library(magrittr) iris %>% add_var_random_moon() %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species random_moon #> 1          5.1         3.5          1.4         0.2  setosa  Waning (-) #> 2          4.9         3.0          1.4         0.2  setosa    Full (O) #> 3          4.7         3.2          1.3         0.2  setosa    Full (O) #> 4          4.6         3.1          1.5         0.2  setosa  Waxing (+) #> 5          5.0         3.6          1.4         0.2  setosa  Waxing (+) #> 6          5.4         3.9          1.7         0.4  setosa  Waning (-)"},{"path":"/reference/add_var_random_starsign.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a random starsign variable to dataset — add_var_random_starsign","title":"Add a random starsign variable to dataset — add_var_random_starsign","text":"Add random starsign variable dataset","code":""},{"path":"/reference/add_var_random_starsign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a random starsign variable to dataset — add_var_random_starsign","text":"","code":"add_var_random_starsign(   data,   name = \"random_starsign\",   lang = \"en\",   overwrite = TRUE,   seed )"},{"path":"/reference/add_var_random_starsign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a random starsign variable to dataset — add_var_random_starsign","text":"data dataset name Name new variable (string) lang Language used starsign (en = English, de = Deutsch, es = Espanol) overwrite Can new random variable overwrite existing variable dataset? seed Seed random number generation (integer)","code":""},{"path":"/reference/add_var_random_starsign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a random starsign variable to dataset — add_var_random_starsign","text":"Dataset containing new random variable","code":""},{"path":"/reference/add_var_random_starsign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a random starsign variable to dataset — add_var_random_starsign","text":"","code":"library(magrittr) iris %>% add_var_random_starsign() %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species random_starsign #> 1          5.1         3.5          1.4         0.2  setosa        Aquarius #> 2          4.9         3.0          1.4         0.2  setosa       Carpicorn #> 3          4.7         3.2          1.3         0.2  setosa        Aquarius #> 4          4.6         3.1          1.5         0.2  setosa          Taurus #> 5          5.0         3.6          1.4         0.2  setosa          Gemini #> 6          5.4         3.9          1.7         0.4  setosa     Saggitarius iris %>% add_var_random_starsign(lang = \"de\") %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species random_starsign #> 1          5.1         3.5          1.4         0.2  setosa       Steinbock #> 2          4.9         3.0          1.4         0.2  setosa        Skorpion #> 3          4.7         3.2          1.3         0.2  setosa          Fische #> 4          4.6         3.1          1.5         0.2  setosa       Steinbock #> 5          5.0         3.6          1.4         0.2  setosa        Schuetze #> 6          5.4         3.9          1.7         0.4  setosa        Zwilling"},{"path":"/reference/balance_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance target variable — balance_target","title":"Balance target variable — balance_target","text":"Balances target variable dataset using downsampling. Target must 0/1, FALSE/TRUE ore /yes","code":""},{"path":"/reference/balance_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance target variable — balance_target","text":"","code":"balance_target(data, target, min_prop = 0.1, seed)"},{"path":"/reference/balance_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance target variable — balance_target","text":"data dataset target Target variable (0/1, TRUE/FALSE, yes/) min_prop Minimum proportion one target categories seed Seed random number generator","code":""},{"path":"/reference/balance_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balance target variable — balance_target","text":"Data","code":""},{"path":"/reference/balance_target.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balance target variable — balance_target","text":"","code":"iris$is_versicolor <- ifelse(iris$Species == \"versicolor\", 1, 0) balanced <- balance_target(iris, target = is_versicolor, min_prop = 0.5) describe(balanced, is_versicolor) #> variable = is_versicolor #> type     = double #> na       = 0 of 100 (0%) #> unique   = 2 #>        0 = 50 (50%) #>        1 = 50 (50%)"},{"path":"/reference/check_vec_low_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Check vector for low variance — check_vec_low_variance","title":"Check vector for low variance — check_vec_low_variance","text":"Check vector low variance","code":""},{"path":"/reference/check_vec_low_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check vector for low variance — check_vec_low_variance","text":"","code":"check_vec_low_variance(values, max_prop = 0.99)"},{"path":"/reference/check_vec_low_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check vector for low variance — check_vec_low_variance","text":"values Vector values max_prop Maximum proportion values without variance","code":""},{"path":"/reference/check_vec_low_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check vector for low variance — check_vec_low_variance","text":"TRUE/FALSE (low variance)","code":""},{"path":"/reference/check_vec_low_variance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check vector for low variance — check_vec_low_variance","text":"","code":"if (FALSE) { values <- c(1, rep(0 ,1000)) check_vec_low_variance(values, max_prop = 0.9) }"},{"path":"/reference/clean_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean variable — clean_var","title":"Clean variable — clean_var","text":"Clean variable (replace NA values, set min_val max_val)","code":""},{"path":"/reference/clean_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean variable — clean_var","text":"","code":"clean_var(   data,   var,   na = NA,   min_val = NA,   max_val = NA,   max_cat = NA,   rescale01 = FALSE,   simplify_text = FALSE,   name = NA )"},{"path":"/reference/clean_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean variable — clean_var","text":"data dataset var Name variable na Value replaces NA min_val values < min_val converted min_val (var numeric character) max_val values > max_val converted max_val (var numeric character) max_cat Maximum number different factor levels categorical variable (, .added) rescale01 TRUE, value rescaled 0 1 (var must numeric) simplify_text TRUE, character variable simplified (trim, upper, ...) name New name variable (string)","code":""},{"path":"/reference/clean_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean variable — clean_var","text":"Dataset","code":""},{"path":"/reference/clean_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean variable — clean_var","text":"","code":"library(magrittr) iris %>% clean_var(Sepal.Width, max_val = 3.5, name = \"sepal_width\") %>% head() #>   Sepal.Length sepal_width Petal.Length Petal.Width Species #> 1          5.1         3.5          1.4         0.2  setosa #> 2          4.9         3.0          1.4         0.2  setosa #> 3          4.7         3.2          1.3         0.2  setosa #> 4          4.6         3.1          1.5         0.2  setosa #> 5          5.0         3.5          1.4         0.2  setosa #> 6          5.4         3.5          1.7         0.4  setosa iris %>% clean_var(Sepal.Width, rescale01 = TRUE) %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1          5.1   0.6250000          1.4         0.2  setosa #> 2          4.9   0.4166667          1.4         0.2  setosa #> 3          4.7   0.5000000          1.3         0.2  setosa #> 4          4.6   0.4583333          1.5         0.2  setosa #> 5          5.0   0.6666667          1.4         0.2  setosa #> 6          5.4   0.7916667          1.7         0.4  setosa"},{"path":"/reference/count_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds percentage to dplyr::count() — count_pct","title":"Adds percentage to dplyr::count() — count_pct","text":"Adds variables total pct (percentage) dplyr::count()","code":""},{"path":"/reference/count_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds percentage to dplyr::count() — count_pct","text":"","code":"count_pct(data, ...)"},{"path":"/reference/count_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds percentage to dplyr::count() — count_pct","text":"data dataset ... parameters passed count()","code":""},{"path":"/reference/count_pct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds percentage to dplyr::count() — count_pct","text":"Dataset","code":""},{"path":"/reference/count_pct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds percentage to dplyr::count() — count_pct","text":"","code":"count_pct(iris, Species) #>      Species  n total      pct #> 1     setosa 50   150 33.33333 #> 2 versicolor 50   150 33.33333 #> 3  virginica 50   150 33.33333"},{"path":"/reference/create_data_abtest.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data of A/B testing — create_data_abtest","title":"Create data of A/B testing — create_data_abtest","text":"Data can used unit-testing teaching","code":""},{"path":"/reference/create_data_abtest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data of A/B testing — create_data_abtest","text":"","code":"create_data_abtest(   n_a = 100,   n_b = 100,   success_a = 10,   success_b = 5,   success_unit = \"count\",   count = TRUE )"},{"path":"/reference/create_data_abtest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data of A/B testing — create_data_abtest","text":"n_a Total size group n_b Total size group B success_a Success group success_b Success group B success_unit Unit (\"count\"|\"percent\") count Create count-data (FALSE|TRUE)","code":""},{"path":"/reference/create_data_abtest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data of A/B testing — create_data_abtest","text":"dataset tibble","code":""},{"path":"/reference/create_data_abtest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create data of A/B testing — create_data_abtest","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union create_data_abtest() %>% abtest()  create_data_abtest(   n_a = 100,   n_b = 100,   success_a = 20,   success_b = 30,   success_unit = \"count\" ) %>% abtest()"},{"path":"/reference/create_data_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data app — create_data_app","title":"Create data app — create_data_app","text":"Artificial data can used unit-testing teaching","code":""},{"path":"/reference/create_data_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data app — create_data_app","text":"","code":"create_data_app(obs = 1000, add_id = FALSE, seed = 123)"},{"path":"/reference/create_data_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data app — create_data_app","text":"obs Number observations add_id Add id-variable data? seed Seed randomization (integer)","code":""},{"path":"/reference/create_data_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data app — create_data_app","text":"dataset tibble","code":""},{"path":"/reference/create_data_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create data app — create_data_app","text":"","code":"create_data_app() #> # A tibble: 1,000 × 7 #>    os       free downloads rating type     updates screen_sizes #>    <chr>   <int>     <int>  <dbl> <chr>      <dbl>        <dbl> #>  1 Android     1      5802      4 Kids          63            3 #>  2 iOS         1      5048      4 Media         58            2 #>  3 Android     1      4579      3 Other         62            3 #>  4 iOS         0      3449      4 Shopping      44            2 #>  5 Other       0      2464      1 Connect       24            1 #>  6 Android     1     11276      4 Learn         75            3 #>  7 iOS         0      4026      5 Shopping      34            1 #>  8 iOS         1      6841      5 Work          91            2 #>  9 iOS         1     10419      4 Learn         29            2 #> 10 Android     1      5421      1 Media         29            3 #> # ℹ 990 more rows"},{"path":"/reference/create_data_buy.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data buy — create_data_buy","title":"Create data buy — create_data_buy","text":"Artificial data can used unit-testing teaching","code":""},{"path":"/reference/create_data_buy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data buy — create_data_buy","text":"","code":"create_data_buy(   obs = 1000,   target_name = \"buy\",   factorise_target = FALSE,   target1_prob = 0.5,   add_extreme = TRUE,   flip_gender = FALSE,   add_id = FALSE,   seed = 123 )"},{"path":"/reference/create_data_buy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data buy — create_data_buy","text":"obs Number observations target_name Variable name target factorise_target target variable factorised? (0/1 factor /yes)? target1_prob Probability target = 1 add_extreme Add observation extreme values? flip_gender Male/Female flipped data? add_id Add id-variable data? seed Seed randomization","code":""},{"path":"/reference/create_data_buy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data buy — create_data_buy","text":"dataset tibble","code":""},{"path":"/reference/create_data_buy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create data buy — create_data_buy","text":"Variables dataset: id = Identifier period = Year & Month (YYYYMM) city_ind = Indicating customer residing city (1 = yes, 0 = ) female_ind = Gender customer female (1 = yes, 0 = ) fixedvoice_ind = Customer fixed voice product (1 = yes, 0 = ) fixeddata_ind = Customer fixed data product (1 = yes, 0 = ) fixedtv_ind = Customer fixed TV product (1 = yes, 0 = ) mobilevoice_ind = Customer mobile voice product (1 = yes, 0 = ) mobiledata_prd = Customer mobile data product (/MOBILE STICK/BUSINESS) bbi_speed_ind = Customer Broadband Internet (BBI) extra speed bbi_usg_gb = Broadband Internet (BBI) usage Gigabyte (GB) last month hh_single = Expected Single Household (1 = yes, 0 = ) Target dataset: buy (may renamed) = customer buy new product next month? (1 = yes, 0 = )","code":""},{"path":"/reference/create_data_buy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create data buy — create_data_buy","text":"","code":"create_data_buy() #> # A tibble: 1,000 × 13 #>    period   buy   age city_ind female_ind fixedvoice_ind fixeddata_ind #>     <int> <int> <int>    <int>      <int>          <int>         <int> #>  1 202012     1    39        1          0              0             1 #>  2 202012     0    57        0          0              0             1 #>  3 202012     1    55        0          1              0             1 #>  4 202012     0    66        0          0              0             1 #>  5 202012     0    71        0          1              0             1 #>  6 202012     1    44        1          0              0             1 #>  7 202012     0    64        0          0              0             1 #>  8 202012     0    51        1          0              0             1 #>  9 202012     0    70        1          0              0             1 #> 10 202012     1    44        1          1              0             1 #> # ℹ 990 more rows #> # ℹ 6 more variables: fixedtv_ind <int>, mobilevoice_ind <int>, #> #   mobiledata_prd <chr>, bbi_speed_ind <int>, bbi_usg_gb <int>, #> #   hh_single <int>"},{"path":"/reference/create_data_churn.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data churn — create_data_churn","title":"Create data churn — create_data_churn","text":"Artificial data can used unit-testing teaching","code":""},{"path":"/reference/create_data_churn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data churn — create_data_churn","text":"","code":"create_data_churn(   obs = 1000,   target_name = \"churn\",   factorise_target = FALSE,   target1_prob = 0.4,   add_id = FALSE,   seed = 123 )"},{"path":"/reference/create_data_churn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data churn — create_data_churn","text":"obs Number observations target_name Variable name target factorise_target target variable factorised? target1_prob Probability target = 1 add_id Add id-variable data? seed Seed randomization (integer)","code":""},{"path":"/reference/create_data_churn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data churn — create_data_churn","text":"dataset tibble","code":""},{"path":"/reference/create_data_churn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create data churn — create_data_churn","text":"","code":"create_data_churn() #> # A tibble: 1,000 × 9 #>    price type    usage shared device   newsletter language duration churn #>    <dbl> <chr>   <dbl>  <int> <chr>         <int> <chr>       <int> <dbl> #>  1    29 Premium  63        1 Computer          1 sp              7     0 #>  2    27 Regular  39        0 Tablet            1 sp             47     0 #>  3    29 Premium  87        1 Phone             1 sp             99     0 #>  4    11 Promo    29        0 Tablet            0 sp             33     1 #>  5    18 Promo    22.5      1 Computer          1 en             94     0 #>  6    21 Promo     8        1 Tablet            1 en             17     0 #>  7    19 Promo    56        0 Phone             0 fr             95     0 #>  8    13 Promo    94.5      1 Phone             1 en             92     0 #>  9    29 Premium  46        0 Phone             0 en             43     0 #> 10    22 Promo    76        0 Phone             1 de             16     1 #> # ℹ 990 more rows"},{"path":"/reference/create_data_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an empty dataset — create_data_empty","title":"Create an empty dataset — create_data_empty","text":"Create empty dataset","code":""},{"path":"/reference/create_data_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an empty dataset — create_data_empty","text":"","code":"create_data_empty(obs = 1000, add_id = FALSE)"},{"path":"/reference/create_data_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an empty dataset — create_data_empty","text":"obs Number observations add_id Add id","code":""},{"path":"/reference/create_data_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an empty dataset — create_data_empty","text":"Dataset tibble","code":""},{"path":"/reference/create_data_empty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an empty dataset — create_data_empty","text":"","code":"create_data_empty(obs = 100) #> # A tibble: 100 × 0 create_data_empty(obs = 100, add_id = TRUE) #> # A tibble: 100 × 1 #>       id #>    <int> #>  1     1 #>  2     2 #>  3     3 #>  4     4 #>  5     5 #>  6     6 #>  7     7 #>  8     8 #>  9     9 #> 10    10 #> # ℹ 90 more rows"},{"path":"/reference/create_data_esoteric.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data esoteric — create_data_esoteric","title":"Create data esoteric — create_data_esoteric","text":"Random data can used unit-testing teaching","code":""},{"path":"/reference/create_data_esoteric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data esoteric — create_data_esoteric","text":"","code":"create_data_esoteric(obs = 1000, add_id = FALSE, seed = 123)"},{"path":"/reference/create_data_esoteric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data esoteric — create_data_esoteric","text":"obs Number observations add_id Add id-variable data? seed Seed randomization","code":""},{"path":"/reference/create_data_esoteric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data esoteric — create_data_esoteric","text":"dataset tibble","code":""},{"path":"/reference/create_data_esoteric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create data esoteric — create_data_esoteric","text":"Variables dataset: id = Identifier starsign = random starsign chinese = random chinese zodiac moon = random moon phase blood = random blood type fingers_crossed = random fingers crossed (1 = yes, 0 = ) success = random success (1 = yes, 0 = )","code":""},{"path":"/reference/create_data_esoteric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create data esoteric — create_data_esoteric","text":"","code":"create_data_esoteric(obs = 100) #> # A tibble: 100 × 6 #>    starsign chinese moon       blood fingers_crossed success #>    <chr>    <chr>   <chr>      <chr>           <int>   <int> #>  1 Leo      Monkey  Waxing (+) B+                  1       1 #>  2 Aquarius Dragon  New ( )    A+                  0       1 #>  3 Virgo    Horse   Waning (-) B+                  1       1 #>  4 Pisces   Rat     Waning (-) B+                  0       1 #>  5 Aries    Horse   Waning (-) 0+                  0       1 #>  6 Taurus   Pig     Full (O)   0+                  0       1 #>  7 Scorpio  Pig     Waxing (+) A+                  0       0 #>  8 Pisces   Monkey  Waxing (+) A+                  0       0 #>  9 Scorpio  Snake   Waxing (+) 0+                  0       0 #> 10 Libra    Tiger   Waxing (+) 0+                  0       1 #> # ℹ 90 more rows"},{"path":"/reference/create_data_newsletter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data newsletter — create_data_newsletter","title":"Create data newsletter — create_data_newsletter","text":"Artificial data can used unit-testing teaching (fairness & AI bias)","code":""},{"path":"/reference/create_data_newsletter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data newsletter — create_data_newsletter","text":"","code":"create_data_newsletter(obs = 1000, add_id = FALSE, seed = 123)"},{"path":"/reference/create_data_newsletter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data newsletter — create_data_newsletter","text":"obs Number observations add_id Add id-variable data? seed Seed randomization (integer)","code":""},{"path":"/reference/create_data_newsletter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data newsletter — create_data_newsletter","text":"dataset tibble","code":""},{"path":"/reference/create_data_newsletter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create data newsletter — create_data_newsletter","text":"","code":"create_data_newsletter() #> # A tibble: 1,000 × 6 #>    sending_h message   age  send click   buy #>        <int> <chr>   <int> <int> <dbl> <dbl> #>  1        14 voucher    80     1     0     0 #>  2        14 news       25     1     0     0 #>  3        13 news       17     1     0     0 #>  4        13 news       78     1     0     0 #>  5        14 voucher    30     1     1     1 #>  6        16 news       76     1     0     0 #>  7        15 news       30     1     0     0 #>  8        12 news       64     1     1     0 #>  9        13 voucher    50     1     1     0 #> 10        14 news       72     1     0     0 #> # ℹ 990 more rows"},{"path":"/reference/create_data_person.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data person — create_data_person","title":"Create data person — create_data_person","text":"Artificial data can used unit-testing teaching","code":""},{"path":"/reference/create_data_person.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data person — create_data_person","text":"","code":"create_data_person(obs = 1000, add_id = FALSE, seed = 123)"},{"path":"/reference/create_data_person.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data person — create_data_person","text":"obs Number observations add_id Add id seed Seed randomization (integer)","code":""},{"path":"/reference/create_data_person.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data person — create_data_person","text":"dataset tibble","code":""},{"path":"/reference/create_data_person.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create data person — create_data_person","text":"","code":"create_data_person() #> # A tibble: 1,000 × 15 #>      age gender eye_color shoe_size    iq education income handset pet   #>    <int> <chr>  <chr>         <dbl> <dbl>     <int>  <dbl> <chr>   <chr> #>  1    46 Female Blue           45.2   141        66   132  Apple   No    #>  2    94 Female Green          37      71        41    95  Apple   Cat   #>  3    66 Male   Brown          45      80        49    18  Apple   Other #>  4    29 Male   Green          45      74        49    54  Android No    #>  5    82 Female Brown          39     119        25    70  Apple   Dog   #>  6    57 Female Brown          38.2    95        68   128  Android No    #>  7    65 Female Green          41.2    97        87   128. Other   Cat   #>  8    58 Male   Blue           46     135        46    32  Android Dog   #>  9    29 Male   Blue           40      88        78    82  Apple   No    #> 10    40 Male   Green          42     140        14    94  Apple   Other #> # ℹ 990 more rows #> # ℹ 6 more variables: favorite_pizza <chr>, favorite_icecream <chr>, #> #   likes_garlic <int>, likes_sushi <int>, likes_beatles <int>, #> #   likes_beer <int>"},{"path":"/reference/create_data_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data random — create_data_random","title":"Create data random — create_data_random","text":"Random data can used unit-testing teaching","code":""},{"path":"/reference/create_data_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data random — create_data_random","text":"","code":"create_data_random(   obs = 1000,   vars = 10,   target_name = \"target_ind\",   factorise_target = FALSE,   target1_prob = 0.5,   add_id = TRUE,   seed = 123 )"},{"path":"/reference/create_data_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data random — create_data_random","text":"obs Number observations vars Number variables target_name Variable name target factorise_target target variable factorised? (0/1 facotr /yes)? target1_prob Probability target = 1 add_id Add id-variable data? seed Seed randomization","code":""},{"path":"/reference/create_data_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data random — create_data_random","text":"dataset tibble","code":""},{"path":"/reference/create_data_random.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create data random — create_data_random","text":"Variables dataset: id = Identifier var_X = variable containing values 0 100 Target dataset: target_ind (may renamed) = random values (1 = yes, 0 = )","code":""},{"path":"/reference/create_data_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create data random — create_data_random","text":"","code":"create_data_random(obs = 100, vars = 5) #> # A tibble: 100 × 7 #>       id target_ind var_1 var_2 var_3 var_4 var_5 #>    <int>      <int> <int> <int> <int> <int> <int> #>  1     1          1    60    24    78    99    35 #>  2     2          0    33    96     1    14    37 #>  3     3          1    49    60    78    91    29 #>  4     4          0    95    52    73    58     8 #>  5     5          0    48    40    63    40    37 #>  6     6          1    89    88    48    45    18 #>  7     7          0    91    36    16    71    54 #>  8     8          0    61    29     1     8    50 #>  9     9          0    41    17    45    34    95 #> 10    10          1    15    17    49    68    34 #> # ℹ 90 more rows"},{"path":"/reference/create_data_unfair.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data unfair — create_data_unfair","title":"Create data unfair — create_data_unfair","text":"Artificial data can used unit-testing teaching (fairness & AI bias)","code":""},{"path":"/reference/create_data_unfair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data unfair — create_data_unfair","text":"","code":"create_data_unfair(   obs = 1000,   target_name = \"target_ind\",   factorise_target = FALSE,   target1_prob = 0.25,   add_id = FALSE,   seed = 123 )"},{"path":"/reference/create_data_unfair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data unfair — create_data_unfair","text":"obs Number observations target_name Variable name target factorise_target target variable factorised? target1_prob Probability target = 1 add_id Add id-variable data? seed Seed randomization (integer)","code":""},{"path":"/reference/create_data_unfair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data unfair — create_data_unfair","text":"dataset tibble","code":""},{"path":"/reference/create_data_unfair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create data unfair — create_data_unfair","text":"","code":"create_data_unfair() #> # A tibble: 1,000 × 22 #>      age gender eye_color shoe_size    iq education income handset pet   smoking #>    <int> <chr>  <chr>         <dbl> <dbl>     <int>  <dbl> <chr>   <chr>   <int> #>  1    46 Female Blue           45.2   141        66   132  Apple   Other       0 #>  2    94 Female Green          37      71        41    95  Apple   Cat         0 #>  3    66 Male   Blue           45      80        49    18  Apple   Cat         0 #>  4    29 Male   Blue           45      74        49    54  Android Dog         0 #>  5    82 Female Blue           39     119        25    70  Apple   Cat         1 #>  6    57 Female Brown          38.2    95        68   128  Android No          0 #>  7    65 Female Brown          41.2    97        87   128. Other   Dog         1 #>  8    58 Male   Blue           46     135        46    32  Android No          0 #>  9    29 Male   Blue           40      88        78    82  Apple   No          0 #> 10    40 Male   Green          42     140        14    94  Apple   Cat         0 #> # ℹ 990 more rows #> # ℹ 12 more variables: name_arabic <int>, outfit <chr>, glasses <int>, #> #   tatoos <int>, kids <int>, bad_debt <dbl>, credit_card <chr>, #> #   left_handed <int>, skin_color <chr>, religion <chr>, internet_gb <dbl>, #> #   target_ind <int>"},{"path":"/reference/create_notebook_explore.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a notebook — create_notebook_explore","title":"Generate a notebook — create_notebook_explore","text":"Generate RMarkdown Notebook template report. must provide output-directory (parameter output_dir). default file-name \"notebook-explore.Rmd\" (may overwrite existing file name)","code":""},{"path":"/reference/create_notebook_explore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a notebook — create_notebook_explore","text":"","code":"create_notebook_explore(output_file = \"notebook-explore.Rmd\", output_dir)"},{"path":"/reference/create_notebook_explore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a notebook — create_notebook_explore","text":"output_file Filename html report output_dir Directory save html report","code":""},{"path":"/reference/create_notebook_explore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a notebook — create_notebook_explore","text":"","code":"create_notebook_explore(output_file = \"explore.Rmd\", output_dir = tempdir()) #> Notebook /tmp/Rtmp4DuB4o/explore.Rmd generated"},{"path":"/reference/data_dict_md.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data dictionary Markdown file — data_dict_md","title":"Create a data dictionary Markdown file — data_dict_md","text":"Create data dictionary Markdown file","code":""},{"path":"/reference/data_dict_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data dictionary Markdown file — data_dict_md","text":"","code":"data_dict_md(   data,   title = \"\",   description = NA,   output_file = \"data_dict.md\",   output_dir )"},{"path":"/reference/data_dict_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data dictionary Markdown file — data_dict_md","text":"data dataframe (data dictionary variables) title Title data dictionary description Detailed description variables data (dataframe columns 'variable' 'description') output_file Output filename Markdown file output_dir Directory Markdown file saved","code":""},{"path":"/reference/data_dict_md.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data dictionary Markdown file — data_dict_md","text":"Create Markdown file","code":""},{"path":"/reference/data_dict_md.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data dictionary Markdown file — data_dict_md","text":"","code":"# Data dictionary of a dataframe data_dict_md(iris,              title = \"iris flower data set\",              output_dir = tempdir())  # Data dictionary of a dataframe with additional description of variables description <- data.frame(                  variable = c(\"Species\"),                  description = c(\"Species of Iris flower\")) data_dict_md(iris,              title = \"iris flower data set\",              description = description,              output_dir = tempdir())"},{"path":"/reference/decrypt.html","id":null,"dir":"Reference","previous_headings":"","what":"decrypt text — decrypt","title":"decrypt text — decrypt","text":"decrypt text","code":""},{"path":"/reference/decrypt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"decrypt text — decrypt","text":"","code":"decrypt(text, codeletters = c(toupper(letters), letters, 0:9), shift = 18)"},{"path":"/reference/decrypt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"decrypt text — decrypt","text":"text text (character) codeletters string letters used decryption shift Number elements shifted","code":""},{"path":"/reference/decrypt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"decrypt text — decrypt","text":"Decrypted text","code":""},{"path":"/reference/decrypt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"decrypt text — decrypt","text":"","code":"decrypt(\"zw336 E693v\") #> [1] \"hello world\""},{"path":"/reference/describe.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe a dataset or variable — describe","title":"Describe a dataset or variable — describe","text":"Describe dataset variable (depending input parameters)","code":""},{"path":"/reference/describe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe a dataset or variable — describe","text":"","code":"describe(data, var, n, target, out = \"text\", ...)"},{"path":"/reference/describe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe a dataset or variable — describe","text":"data dataset var variable dataset n Weights variable count-data target Target variable (0/1 FALSE/TRUE) Output format (\"text\"|\"list\") variable description ... arguments","code":""},{"path":"/reference/describe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe a dataset or variable — describe","text":"Description table, text list","code":""},{"path":"/reference/describe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe a dataset or variable — describe","text":"","code":"# Load package library(magrittr)  # Describe a dataset iris %>% describe() #> # A tibble: 5 × 8 #>   variable     type     na na_pct unique   min  mean   max #>   <chr>        <chr> <int>  <dbl>  <int> <dbl> <dbl> <dbl> #> 1 Sepal.Length dbl       0      0     35   4.3  5.84   7.9 #> 2 Sepal.Width  dbl       0      0     23   2    3.06   4.4 #> 3 Petal.Length dbl       0      0     43   1    3.76   6.9 #> 4 Petal.Width  dbl       0      0     22   0.1  1.2    2.5 #> 5 Species      fct       0      0      3  NA   NA     NA    # Describe a variable iris %>% describe(Species) #> variable = Species #> type     = factor #> na       = 0 of 150 (0%) #> unique   = 3 #>  setosa     = 50 (33.3%) #>  versicolor = 50 (33.3%) #>  virginica  = 50 (33.3%) iris %>% describe(Sepal.Length) #> variable = Sepal.Length #> type     = double #> na       = 0 of 150 (0%) #> unique   = 35 #> min|max  = 4.3 | 7.9 #> q05|q95  = 4.6 | 7.255 #> q25|q75  = 5.1 | 6.4 #> median   = 5.8 #> mean     = 5.843333"},{"path":"/reference/describe_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe all variables of a dataset — describe_all","title":"Describe all variables of a dataset — describe_all","text":"Describe variables dataset","code":""},{"path":"/reference/describe_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe all variables of a dataset — describe_all","text":"","code":"describe_all(data, out = \"large\")"},{"path":"/reference/describe_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe all variables of a dataset — describe_all","text":"data dataset Output format (\"small\"|\"large\")","code":""},{"path":"/reference/describe_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe all variables of a dataset — describe_all","text":"Dataset (tibble)","code":""},{"path":"/reference/describe_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe all variables of a dataset — describe_all","text":"","code":"describe_all(iris) #> # A tibble: 5 × 8 #>   variable     type     na na_pct unique   min  mean   max #>   <chr>        <chr> <int>  <dbl>  <int> <dbl> <dbl> <dbl> #> 1 Sepal.Length dbl       0      0     35   4.3  5.84   7.9 #> 2 Sepal.Width  dbl       0      0     23   2    3.06   4.4 #> 3 Petal.Length dbl       0      0     43   1    3.76   6.9 #> 4 Petal.Width  dbl       0      0     22   0.1  1.2    2.5 #> 5 Species      fct       0      0      3  NA   NA     NA"},{"path":"/reference/describe_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe categorical variable — describe_cat","title":"Describe categorical variable — describe_cat","text":"Describe categorical variable","code":""},{"path":"/reference/describe_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe categorical variable — describe_cat","text":"","code":"describe_cat(data, var, n, max_cat = 10, out = \"text\", margin = 0)"},{"path":"/reference/describe_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe categorical variable — describe_cat","text":"data dataset var Variable variable name n Weights variable count-data max_cat Maximum number categories displayed Output format (\"text\"|\"list\"|\"tibble\"|\"df\") margin Left margin text output (number spaces)","code":""},{"path":"/reference/describe_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe categorical variable — describe_cat","text":"Description text list","code":""},{"path":"/reference/describe_cat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe categorical variable — describe_cat","text":"","code":"describe_cat(iris, Species) #> variable = Species #> type     = factor #> na       = 0 of 150 (0%) #> unique   = 3 #>  setosa     = 50 (33.3%) #>  versicolor = 50 (33.3%) #>  virginica  = 50 (33.3%)"},{"path":"/reference/describe_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe numerical variable — describe_num","title":"Describe numerical variable — describe_num","text":"Describe numerical variable","code":""},{"path":"/reference/describe_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe numerical variable — describe_num","text":"","code":"describe_num(data, var, n, out = \"text\", margin = 0)"},{"path":"/reference/describe_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe numerical variable — describe_num","text":"data dataset var Variable variable name n Weights variable count-data Output format (\"text\"|\"list\") margin Left margin text output (number spaces)","code":""},{"path":"/reference/describe_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe numerical variable — describe_num","text":"Description text list","code":""},{"path":"/reference/describe_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe numerical variable — describe_num","text":"","code":"describe_num(iris, Sepal.Length) #> variable = Sepal.Length #> type     = double #> na       = 0 of 150 (0%) #> unique   = 35 #> min|max  = 4.3 | 7.9 #> q05|q95  = 4.6 | 7.255 #> q25|q75  = 5.1 | 6.4 #> median   = 5.8 #> mean     = 5.843333"},{"path":"/reference/describe_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe table — describe_tbl","title":"Describe table — describe_tbl","text":"Describe table (e.g. number rows columns dataset)","code":""},{"path":"/reference/describe_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe table — describe_tbl","text":"","code":"describe_tbl(data, n, target, out = \"text\")"},{"path":"/reference/describe_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe table — describe_tbl","text":"data dataset n Weights variable count-data target Target variable (binary) Output format (\"text\"|\"list\")","code":""},{"path":"/reference/describe_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe table — describe_tbl","text":"Description text list","code":""},{"path":"/reference/describe_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe table — describe_tbl","text":"","code":"describe_tbl(iris) #> 150 observations with 5 variables #> 0 observations containing missings (NA) #> 0 variables containing missings (NA) #> 0 variables with no variance  iris[1,1] <- NA describe_tbl(iris) #> 150 observations with 5 variables #> 1 observations containing missings (NA) #> 1 variables containing missings (NA) #> 0 variables with no variance"},{"path":"/reference/drop_obs_if.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop all observations where expression is true — drop_obs_if","title":"Drop all observations where expression is true — drop_obs_if","text":"Drop observations expression true","code":""},{"path":"/reference/drop_obs_if.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop all observations where expression is true — drop_obs_if","text":"","code":"drop_obs_if(data, expr)"},{"path":"/reference/drop_obs_if.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop all observations where expression is true — drop_obs_if","text":"data Data frame expr Expression","code":""},{"path":"/reference/drop_obs_if.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop all observations where expression is true — drop_obs_if","text":"Data frame","code":""},{"path":"/reference/drop_obs_if.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop all observations where expression is true — drop_obs_if","text":"","code":"drop_obs_if(iris, Species == \"setosa\") #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1            7.0         3.2          4.7         1.4 versicolor #> 2            6.4         3.2          4.5         1.5 versicolor #> 3            6.9         3.1          4.9         1.5 versicolor #> 4            5.5         2.3          4.0         1.3 versicolor #> 5            6.5         2.8          4.6         1.5 versicolor #> 6            5.7         2.8          4.5         1.3 versicolor #> 7            6.3         3.3          4.7         1.6 versicolor #> 8            4.9         2.4          3.3         1.0 versicolor #> 9            6.6         2.9          4.6         1.3 versicolor #> 10           5.2         2.7          3.9         1.4 versicolor #> 11           5.0         2.0          3.5         1.0 versicolor #> 12           5.9         3.0          4.2         1.5 versicolor #> 13           6.0         2.2          4.0         1.0 versicolor #> 14           6.1         2.9          4.7         1.4 versicolor #> 15           5.6         2.9          3.6         1.3 versicolor #> 16           6.7         3.1          4.4         1.4 versicolor #> 17           5.6         3.0          4.5         1.5 versicolor #> 18           5.8         2.7          4.1         1.0 versicolor #> 19           6.2         2.2          4.5         1.5 versicolor #> 20           5.6         2.5          3.9         1.1 versicolor #> 21           5.9         3.2          4.8         1.8 versicolor #> 22           6.1         2.8          4.0         1.3 versicolor #> 23           6.3         2.5          4.9         1.5 versicolor #> 24           6.1         2.8          4.7         1.2 versicolor #> 25           6.4         2.9          4.3         1.3 versicolor #> 26           6.6         3.0          4.4         1.4 versicolor #> 27           6.8         2.8          4.8         1.4 versicolor #> 28           6.7         3.0          5.0         1.7 versicolor #> 29           6.0         2.9          4.5         1.5 versicolor #> 30           5.7         2.6          3.5         1.0 versicolor #> 31           5.5         2.4          3.8         1.1 versicolor #> 32           5.5         2.4          3.7         1.0 versicolor #> 33           5.8         2.7          3.9         1.2 versicolor #> 34           6.0         2.7          5.1         1.6 versicolor #> 35           5.4         3.0          4.5         1.5 versicolor #> 36           6.0         3.4          4.5         1.6 versicolor #> 37           6.7         3.1          4.7         1.5 versicolor #> 38           6.3         2.3          4.4         1.3 versicolor #> 39           5.6         3.0          4.1         1.3 versicolor #> 40           5.5         2.5          4.0         1.3 versicolor #> 41           5.5         2.6          4.4         1.2 versicolor #> 42           6.1         3.0          4.6         1.4 versicolor #> 43           5.8         2.6          4.0         1.2 versicolor #> 44           5.0         2.3          3.3         1.0 versicolor #> 45           5.6         2.7          4.2         1.3 versicolor #> 46           5.7         3.0          4.2         1.2 versicolor #> 47           5.7         2.9          4.2         1.3 versicolor #> 48           6.2         2.9          4.3         1.3 versicolor #> 49           5.1         2.5          3.0         1.1 versicolor #> 50           5.7         2.8          4.1         1.3 versicolor #> 51           6.3         3.3          6.0         2.5  virginica #> 52           5.8         2.7          5.1         1.9  virginica #> 53           7.1         3.0          5.9         2.1  virginica #> 54           6.3         2.9          5.6         1.8  virginica #> 55           6.5         3.0          5.8         2.2  virginica #> 56           7.6         3.0          6.6         2.1  virginica #> 57           4.9         2.5          4.5         1.7  virginica #> 58           7.3         2.9          6.3         1.8  virginica #> 59           6.7         2.5          5.8         1.8  virginica #> 60           7.2         3.6          6.1         2.5  virginica #> 61           6.5         3.2          5.1         2.0  virginica #> 62           6.4         2.7          5.3         1.9  virginica #> 63           6.8         3.0          5.5         2.1  virginica #> 64           5.7         2.5          5.0         2.0  virginica #> 65           5.8         2.8          5.1         2.4  virginica #> 66           6.4         3.2          5.3         2.3  virginica #> 67           6.5         3.0          5.5         1.8  virginica #> 68           7.7         3.8          6.7         2.2  virginica #> 69           7.7         2.6          6.9         2.3  virginica #> 70           6.0         2.2          5.0         1.5  virginica #> 71           6.9         3.2          5.7         2.3  virginica #> 72           5.6         2.8          4.9         2.0  virginica #> 73           7.7         2.8          6.7         2.0  virginica #> 74           6.3         2.7          4.9         1.8  virginica #> 75           6.7         3.3          5.7         2.1  virginica #> 76           7.2         3.2          6.0         1.8  virginica #> 77           6.2         2.8          4.8         1.8  virginica #> 78           6.1         3.0          4.9         1.8  virginica #> 79           6.4         2.8          5.6         2.1  virginica #> 80           7.2         3.0          5.8         1.6  virginica #> 81           7.4         2.8          6.1         1.9  virginica #> 82           7.9         3.8          6.4         2.0  virginica #> 83           6.4         2.8          5.6         2.2  virginica #> 84           6.3         2.8          5.1         1.5  virginica #> 85           6.1         2.6          5.6         1.4  virginica #> 86           7.7         3.0          6.1         2.3  virginica #> 87           6.3         3.4          5.6         2.4  virginica #> 88           6.4         3.1          5.5         1.8  virginica #> 89           6.0         3.0          4.8         1.8  virginica #> 90           6.9         3.1          5.4         2.1  virginica #> 91           6.7         3.1          5.6         2.4  virginica #> 92           6.9         3.1          5.1         2.3  virginica #> 93           5.8         2.7          5.1         1.9  virginica #> 94           6.8         3.2          5.9         2.3  virginica #> 95           6.7         3.3          5.7         2.5  virginica #> 96           6.7         3.0          5.2         2.3  virginica #> 97           6.3         2.5          5.0         1.9  virginica #> 98           6.5         3.0          5.2         2.0  virginica #> 99           6.2         3.4          5.4         2.3  virginica #> 100          5.9         3.0          5.1         1.8  virginica drop_obs_if(iris, Sepal.Length < 5 | Sepal.Length >7) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1            5.1         3.5          1.4         0.2     setosa #> 2            5.0         3.6          1.4         0.2     setosa #> 3            5.4         3.9          1.7         0.4     setosa #> 4            5.0         3.4          1.5         0.2     setosa #> 5            5.4         3.7          1.5         0.2     setosa #> 6            5.8         4.0          1.2         0.2     setosa #> 7            5.7         4.4          1.5         0.4     setosa #> 8            5.4         3.9          1.3         0.4     setosa #> 9            5.1         3.5          1.4         0.3     setosa #> 10           5.7         3.8          1.7         0.3     setosa #> 11           5.1         3.8          1.5         0.3     setosa #> 12           5.4         3.4          1.7         0.2     setosa #> 13           5.1         3.7          1.5         0.4     setosa #> 14           5.1         3.3          1.7         0.5     setosa #> 15           5.0         3.0          1.6         0.2     setosa #> 16           5.0         3.4          1.6         0.4     setosa #> 17           5.2         3.5          1.5         0.2     setosa #> 18           5.2         3.4          1.4         0.2     setosa #> 19           5.4         3.4          1.5         0.4     setosa #> 20           5.2         4.1          1.5         0.1     setosa #> 21           5.5         4.2          1.4         0.2     setosa #> 22           5.0         3.2          1.2         0.2     setosa #> 23           5.5         3.5          1.3         0.2     setosa #> 24           5.1         3.4          1.5         0.2     setosa #> 25           5.0         3.5          1.3         0.3     setosa #> 26           5.0         3.5          1.6         0.6     setosa #> 27           5.1         3.8          1.9         0.4     setosa #> 28           5.1         3.8          1.6         0.2     setosa #> 29           5.3         3.7          1.5         0.2     setosa #> 30           5.0         3.3          1.4         0.2     setosa #> 31           7.0         3.2          4.7         1.4 versicolor #> 32           6.4         3.2          4.5         1.5 versicolor #> 33           6.9         3.1          4.9         1.5 versicolor #> 34           5.5         2.3          4.0         1.3 versicolor #> 35           6.5         2.8          4.6         1.5 versicolor #> 36           5.7         2.8          4.5         1.3 versicolor #> 37           6.3         3.3          4.7         1.6 versicolor #> 38           6.6         2.9          4.6         1.3 versicolor #> 39           5.2         2.7          3.9         1.4 versicolor #> 40           5.0         2.0          3.5         1.0 versicolor #> 41           5.9         3.0          4.2         1.5 versicolor #> 42           6.0         2.2          4.0         1.0 versicolor #> 43           6.1         2.9          4.7         1.4 versicolor #> 44           5.6         2.9          3.6         1.3 versicolor #> 45           6.7         3.1          4.4         1.4 versicolor #> 46           5.6         3.0          4.5         1.5 versicolor #> 47           5.8         2.7          4.1         1.0 versicolor #> 48           6.2         2.2          4.5         1.5 versicolor #> 49           5.6         2.5          3.9         1.1 versicolor #> 50           5.9         3.2          4.8         1.8 versicolor #> 51           6.1         2.8          4.0         1.3 versicolor #> 52           6.3         2.5          4.9         1.5 versicolor #> 53           6.1         2.8          4.7         1.2 versicolor #> 54           6.4         2.9          4.3         1.3 versicolor #> 55           6.6         3.0          4.4         1.4 versicolor #> 56           6.8         2.8          4.8         1.4 versicolor #> 57           6.7         3.0          5.0         1.7 versicolor #> 58           6.0         2.9          4.5         1.5 versicolor #> 59           5.7         2.6          3.5         1.0 versicolor #> 60           5.5         2.4          3.8         1.1 versicolor #> 61           5.5         2.4          3.7         1.0 versicolor #> 62           5.8         2.7          3.9         1.2 versicolor #> 63           6.0         2.7          5.1         1.6 versicolor #> 64           5.4         3.0          4.5         1.5 versicolor #> 65           6.0         3.4          4.5         1.6 versicolor #> 66           6.7         3.1          4.7         1.5 versicolor #> 67           6.3         2.3          4.4         1.3 versicolor #> 68           5.6         3.0          4.1         1.3 versicolor #> 69           5.5         2.5          4.0         1.3 versicolor #> 70           5.5         2.6          4.4         1.2 versicolor #> 71           6.1         3.0          4.6         1.4 versicolor #> 72           5.8         2.6          4.0         1.2 versicolor #> 73           5.0         2.3          3.3         1.0 versicolor #> 74           5.6         2.7          4.2         1.3 versicolor #> 75           5.7         3.0          4.2         1.2 versicolor #> 76           5.7         2.9          4.2         1.3 versicolor #> 77           6.2         2.9          4.3         1.3 versicolor #> 78           5.1         2.5          3.0         1.1 versicolor #> 79           5.7         2.8          4.1         1.3 versicolor #> 80           6.3         3.3          6.0         2.5  virginica #> 81           5.8         2.7          5.1         1.9  virginica #> 82           6.3         2.9          5.6         1.8  virginica #> 83           6.5         3.0          5.8         2.2  virginica #> 84           6.7         2.5          5.8         1.8  virginica #> 85           6.5         3.2          5.1         2.0  virginica #> 86           6.4         2.7          5.3         1.9  virginica #> 87           6.8         3.0          5.5         2.1  virginica #> 88           5.7         2.5          5.0         2.0  virginica #> 89           5.8         2.8          5.1         2.4  virginica #> 90           6.4         3.2          5.3         2.3  virginica #> 91           6.5         3.0          5.5         1.8  virginica #> 92           6.0         2.2          5.0         1.5  virginica #> 93           6.9         3.2          5.7         2.3  virginica #> 94           5.6         2.8          4.9         2.0  virginica #> 95           6.3         2.7          4.9         1.8  virginica #> 96           6.7         3.3          5.7         2.1  virginica #> 97           6.2         2.8          4.8         1.8  virginica #> 98           6.1         3.0          4.9         1.8  virginica #> 99           6.4         2.8          5.6         2.1  virginica #> 100          6.4         2.8          5.6         2.2  virginica #> 101          6.3         2.8          5.1         1.5  virginica #> 102          6.1         2.6          5.6         1.4  virginica #> 103          6.3         3.4          5.6         2.4  virginica #> 104          6.4         3.1          5.5         1.8  virginica #> 105          6.0         3.0          4.8         1.8  virginica #> 106          6.9         3.1          5.4         2.1  virginica #> 107          6.7         3.1          5.6         2.4  virginica #> 108          6.9         3.1          5.1         2.3  virginica #> 109          5.8         2.7          5.1         1.9  virginica #> 110          6.8         3.2          5.9         2.3  virginica #> 111          6.7         3.3          5.7         2.5  virginica #> 112          6.7         3.0          5.2         2.3  virginica #> 113          6.3         2.5          5.0         1.9  virginica #> 114          6.5         3.0          5.2         2.0  virginica #> 115          6.2         3.4          5.4         2.3  virginica #> 116          5.9         3.0          5.1         1.8  virginica"},{"path":"/reference/drop_obs_with_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop all observations with NA-values — drop_obs_with_na","title":"Drop all observations with NA-values — drop_obs_with_na","text":"Drop observations NA-values","code":""},{"path":"/reference/drop_obs_with_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop all observations with NA-values — drop_obs_with_na","text":"","code":"drop_obs_with_na(data)"},{"path":"/reference/drop_obs_with_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop all observations with NA-values — drop_obs_with_na","text":"data Data frame","code":""},{"path":"/reference/drop_obs_with_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop all observations with NA-values — drop_obs_with_na","text":"Data frame","code":""},{"path":"/reference/drop_obs_with_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop all observations with NA-values — drop_obs_with_na","text":"","code":"data <- data.frame(a = 1:10, b = rep(\"A\",10)) data[1,1] <- NA drop_obs_with_na(data) #>     a b #> 2   2 A #> 3   3 A #> 4   4 A #> 5   5 A #> 6   6 A #> 7   7 A #> 8   8 A #> 9   9 A #> 10 10 A"},{"path":"/reference/drop_var_by_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop variables by name — drop_var_by_names","title":"Drop variables by name — drop_var_by_names","text":"Drop variables name","code":""},{"path":"/reference/drop_var_by_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop variables by name — drop_var_by_names","text":"","code":"drop_var_by_names(data, var_names)"},{"path":"/reference/drop_var_by_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop variables by name — drop_var_by_names","text":"data Data frame var_names Vector variable names (string)","code":""},{"path":"/reference/drop_var_by_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop variables by name — drop_var_by_names","text":"Data frame","code":""},{"path":"/reference/drop_var_by_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop variables by name — drop_var_by_names","text":"","code":"drop_var_by_names(iris, \"Species\") #>     Sepal.Length Sepal.Width Petal.Length Petal.Width #> 1            5.1         3.5          1.4         0.2 #> 2            4.9         3.0          1.4         0.2 #> 3            4.7         3.2          1.3         0.2 #> 4            4.6         3.1          1.5         0.2 #> 5            5.0         3.6          1.4         0.2 #> 6            5.4         3.9          1.7         0.4 #> 7            4.6         3.4          1.4         0.3 #> 8            5.0         3.4          1.5         0.2 #> 9            4.4         2.9          1.4         0.2 #> 10           4.9         3.1          1.5         0.1 #> 11           5.4         3.7          1.5         0.2 #> 12           4.8         3.4          1.6         0.2 #> 13           4.8         3.0          1.4         0.1 #> 14           4.3         3.0          1.1         0.1 #> 15           5.8         4.0          1.2         0.2 #> 16           5.7         4.4          1.5         0.4 #> 17           5.4         3.9          1.3         0.4 #> 18           5.1         3.5          1.4         0.3 #> 19           5.7         3.8          1.7         0.3 #> 20           5.1         3.8          1.5         0.3 #> 21           5.4         3.4          1.7         0.2 #> 22           5.1         3.7          1.5         0.4 #> 23           4.6         3.6          1.0         0.2 #> 24           5.1         3.3          1.7         0.5 #> 25           4.8         3.4          1.9         0.2 #> 26           5.0         3.0          1.6         0.2 #> 27           5.0         3.4          1.6         0.4 #> 28           5.2         3.5          1.5         0.2 #> 29           5.2         3.4          1.4         0.2 #> 30           4.7         3.2          1.6         0.2 #> 31           4.8         3.1          1.6         0.2 #> 32           5.4         3.4          1.5         0.4 #> 33           5.2         4.1          1.5         0.1 #> 34           5.5         4.2          1.4         0.2 #> 35           4.9         3.1          1.5         0.2 #> 36           5.0         3.2          1.2         0.2 #> 37           5.5         3.5          1.3         0.2 #> 38           4.9         3.6          1.4         0.1 #> 39           4.4         3.0          1.3         0.2 #> 40           5.1         3.4          1.5         0.2 #> 41           5.0         3.5          1.3         0.3 #> 42           4.5         2.3          1.3         0.3 #> 43           4.4         3.2          1.3         0.2 #> 44           5.0         3.5          1.6         0.6 #> 45           5.1         3.8          1.9         0.4 #> 46           4.8         3.0          1.4         0.3 #> 47           5.1         3.8          1.6         0.2 #> 48           4.6         3.2          1.4         0.2 #> 49           5.3         3.7          1.5         0.2 #> 50           5.0         3.3          1.4         0.2 #> 51           7.0         3.2          4.7         1.4 #> 52           6.4         3.2          4.5         1.5 #> 53           6.9         3.1          4.9         1.5 #> 54           5.5         2.3          4.0         1.3 #> 55           6.5         2.8          4.6         1.5 #> 56           5.7         2.8          4.5         1.3 #> 57           6.3         3.3          4.7         1.6 #> 58           4.9         2.4          3.3         1.0 #> 59           6.6         2.9          4.6         1.3 #> 60           5.2         2.7          3.9         1.4 #> 61           5.0         2.0          3.5         1.0 #> 62           5.9         3.0          4.2         1.5 #> 63           6.0         2.2          4.0         1.0 #> 64           6.1         2.9          4.7         1.4 #> 65           5.6         2.9          3.6         1.3 #> 66           6.7         3.1          4.4         1.4 #> 67           5.6         3.0          4.5         1.5 #> 68           5.8         2.7          4.1         1.0 #> 69           6.2         2.2          4.5         1.5 #> 70           5.6         2.5          3.9         1.1 #> 71           5.9         3.2          4.8         1.8 #> 72           6.1         2.8          4.0         1.3 #> 73           6.3         2.5          4.9         1.5 #> 74           6.1         2.8          4.7         1.2 #> 75           6.4         2.9          4.3         1.3 #> 76           6.6         3.0          4.4         1.4 #> 77           6.8         2.8          4.8         1.4 #> 78           6.7         3.0          5.0         1.7 #> 79           6.0         2.9          4.5         1.5 #> 80           5.7         2.6          3.5         1.0 #> 81           5.5         2.4          3.8         1.1 #> 82           5.5         2.4          3.7         1.0 #> 83           5.8         2.7          3.9         1.2 #> 84           6.0         2.7          5.1         1.6 #> 85           5.4         3.0          4.5         1.5 #> 86           6.0         3.4          4.5         1.6 #> 87           6.7         3.1          4.7         1.5 #> 88           6.3         2.3          4.4         1.3 #> 89           5.6         3.0          4.1         1.3 #> 90           5.5         2.5          4.0         1.3 #> 91           5.5         2.6          4.4         1.2 #> 92           6.1         3.0          4.6         1.4 #> 93           5.8         2.6          4.0         1.2 #> 94           5.0         2.3          3.3         1.0 #> 95           5.6         2.7          4.2         1.3 #> 96           5.7         3.0          4.2         1.2 #> 97           5.7         2.9          4.2         1.3 #> 98           6.2         2.9          4.3         1.3 #> 99           5.1         2.5          3.0         1.1 #> 100          5.7         2.8          4.1         1.3 #> 101          6.3         3.3          6.0         2.5 #> 102          5.8         2.7          5.1         1.9 #> 103          7.1         3.0          5.9         2.1 #> 104          6.3         2.9          5.6         1.8 #> 105          6.5         3.0          5.8         2.2 #> 106          7.6         3.0          6.6         2.1 #> 107          4.9         2.5          4.5         1.7 #> 108          7.3         2.9          6.3         1.8 #> 109          6.7         2.5          5.8         1.8 #> 110          7.2         3.6          6.1         2.5 #> 111          6.5         3.2          5.1         2.0 #> 112          6.4         2.7          5.3         1.9 #> 113          6.8         3.0          5.5         2.1 #> 114          5.7         2.5          5.0         2.0 #> 115          5.8         2.8          5.1         2.4 #> 116          6.4         3.2          5.3         2.3 #> 117          6.5         3.0          5.5         1.8 #> 118          7.7         3.8          6.7         2.2 #> 119          7.7         2.6          6.9         2.3 #> 120          6.0         2.2          5.0         1.5 #> 121          6.9         3.2          5.7         2.3 #> 122          5.6         2.8          4.9         2.0 #> 123          7.7         2.8          6.7         2.0 #> 124          6.3         2.7          4.9         1.8 #> 125          6.7         3.3          5.7         2.1 #> 126          7.2         3.2          6.0         1.8 #> 127          6.2         2.8          4.8         1.8 #> 128          6.1         3.0          4.9         1.8 #> 129          6.4         2.8          5.6         2.1 #> 130          7.2         3.0          5.8         1.6 #> 131          7.4         2.8          6.1         1.9 #> 132          7.9         3.8          6.4         2.0 #> 133          6.4         2.8          5.6         2.2 #> 134          6.3         2.8          5.1         1.5 #> 135          6.1         2.6          5.6         1.4 #> 136          7.7         3.0          6.1         2.3 #> 137          6.3         3.4          5.6         2.4 #> 138          6.4         3.1          5.5         1.8 #> 139          6.0         3.0          4.8         1.8 #> 140          6.9         3.1          5.4         2.1 #> 141          6.7         3.1          5.6         2.4 #> 142          6.9         3.1          5.1         2.3 #> 143          5.8         2.7          5.1         1.9 #> 144          6.8         3.2          5.9         2.3 #> 145          6.7         3.3          5.7         2.5 #> 146          6.7         3.0          5.2         2.3 #> 147          6.3         2.5          5.0         1.9 #> 148          6.5         3.0          5.2         2.0 #> 149          6.2         3.4          5.4         2.3 #> 150          5.9         3.0          5.1         1.8 drop_var_by_names(iris, c(\"Sepal.Length\", \"Sepal.Width\")) #>     Petal.Length Petal.Width    Species #> 1            1.4         0.2     setosa #> 2            1.4         0.2     setosa #> 3            1.3         0.2     setosa #> 4            1.5         0.2     setosa #> 5            1.4         0.2     setosa #> 6            1.7         0.4     setosa #> 7            1.4         0.3     setosa #> 8            1.5         0.2     setosa #> 9            1.4         0.2     setosa #> 10           1.5         0.1     setosa #> 11           1.5         0.2     setosa #> 12           1.6         0.2     setosa #> 13           1.4         0.1     setosa #> 14           1.1         0.1     setosa #> 15           1.2         0.2     setosa #> 16           1.5         0.4     setosa #> 17           1.3         0.4     setosa #> 18           1.4         0.3     setosa #> 19           1.7         0.3     setosa #> 20           1.5         0.3     setosa #> 21           1.7         0.2     setosa #> 22           1.5         0.4     setosa #> 23           1.0         0.2     setosa #> 24           1.7         0.5     setosa #> 25           1.9         0.2     setosa #> 26           1.6         0.2     setosa #> 27           1.6         0.4     setosa #> 28           1.5         0.2     setosa #> 29           1.4         0.2     setosa #> 30           1.6         0.2     setosa #> 31           1.6         0.2     setosa #> 32           1.5         0.4     setosa #> 33           1.5         0.1     setosa #> 34           1.4         0.2     setosa #> 35           1.5         0.2     setosa #> 36           1.2         0.2     setosa #> 37           1.3         0.2     setosa #> 38           1.4         0.1     setosa #> 39           1.3         0.2     setosa #> 40           1.5         0.2     setosa #> 41           1.3         0.3     setosa #> 42           1.3         0.3     setosa #> 43           1.3         0.2     setosa #> 44           1.6         0.6     setosa #> 45           1.9         0.4     setosa #> 46           1.4         0.3     setosa #> 47           1.6         0.2     setosa #> 48           1.4         0.2     setosa #> 49           1.5         0.2     setosa #> 50           1.4         0.2     setosa #> 51           4.7         1.4 versicolor #> 52           4.5         1.5 versicolor #> 53           4.9         1.5 versicolor #> 54           4.0         1.3 versicolor #> 55           4.6         1.5 versicolor #> 56           4.5         1.3 versicolor #> 57           4.7         1.6 versicolor #> 58           3.3         1.0 versicolor #> 59           4.6         1.3 versicolor #> 60           3.9         1.4 versicolor #> 61           3.5         1.0 versicolor #> 62           4.2         1.5 versicolor #> 63           4.0         1.0 versicolor #> 64           4.7         1.4 versicolor #> 65           3.6         1.3 versicolor #> 66           4.4         1.4 versicolor #> 67           4.5         1.5 versicolor #> 68           4.1         1.0 versicolor #> 69           4.5         1.5 versicolor #> 70           3.9         1.1 versicolor #> 71           4.8         1.8 versicolor #> 72           4.0         1.3 versicolor #> 73           4.9         1.5 versicolor #> 74           4.7         1.2 versicolor #> 75           4.3         1.3 versicolor #> 76           4.4         1.4 versicolor #> 77           4.8         1.4 versicolor #> 78           5.0         1.7 versicolor #> 79           4.5         1.5 versicolor #> 80           3.5         1.0 versicolor #> 81           3.8         1.1 versicolor #> 82           3.7         1.0 versicolor #> 83           3.9         1.2 versicolor #> 84           5.1         1.6 versicolor #> 85           4.5         1.5 versicolor #> 86           4.5         1.6 versicolor #> 87           4.7         1.5 versicolor #> 88           4.4         1.3 versicolor #> 89           4.1         1.3 versicolor #> 90           4.0         1.3 versicolor #> 91           4.4         1.2 versicolor #> 92           4.6         1.4 versicolor #> 93           4.0         1.2 versicolor #> 94           3.3         1.0 versicolor #> 95           4.2         1.3 versicolor #> 96           4.2         1.2 versicolor #> 97           4.2         1.3 versicolor #> 98           4.3         1.3 versicolor #> 99           3.0         1.1 versicolor #> 100          4.1         1.3 versicolor #> 101          6.0         2.5  virginica #> 102          5.1         1.9  virginica #> 103          5.9         2.1  virginica #> 104          5.6         1.8  virginica #> 105          5.8         2.2  virginica #> 106          6.6         2.1  virginica #> 107          4.5         1.7  virginica #> 108          6.3         1.8  virginica #> 109          5.8         1.8  virginica #> 110          6.1         2.5  virginica #> 111          5.1         2.0  virginica #> 112          5.3         1.9  virginica #> 113          5.5         2.1  virginica #> 114          5.0         2.0  virginica #> 115          5.1         2.4  virginica #> 116          5.3         2.3  virginica #> 117          5.5         1.8  virginica #> 118          6.7         2.2  virginica #> 119          6.9         2.3  virginica #> 120          5.0         1.5  virginica #> 121          5.7         2.3  virginica #> 122          4.9         2.0  virginica #> 123          6.7         2.0  virginica #> 124          4.9         1.8  virginica #> 125          5.7         2.1  virginica #> 126          6.0         1.8  virginica #> 127          4.8         1.8  virginica #> 128          4.9         1.8  virginica #> 129          5.6         2.1  virginica #> 130          5.8         1.6  virginica #> 131          6.1         1.9  virginica #> 132          6.4         2.0  virginica #> 133          5.6         2.2  virginica #> 134          5.1         1.5  virginica #> 135          5.6         1.4  virginica #> 136          6.1         2.3  virginica #> 137          5.6         2.4  virginica #> 138          5.5         1.8  virginica #> 139          4.8         1.8  virginica #> 140          5.4         2.1  virginica #> 141          5.6         2.4  virginica #> 142          5.1         2.3  virginica #> 143          5.1         1.9  virginica #> 144          5.9         2.3  virginica #> 145          5.7         2.5  virginica #> 146          5.2         2.3  virginica #> 147          5.0         1.9  virginica #> 148          5.2         2.0  virginica #> 149          5.4         2.3  virginica #> 150          5.1         1.8  virginica"},{"path":"/reference/drop_var_low_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop all variables with low variance — drop_var_low_variance","title":"Drop all variables with low variance — drop_var_low_variance","text":"Drop variables low variance","code":""},{"path":"/reference/drop_var_low_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop all variables with low variance — drop_var_low_variance","text":"","code":"drop_var_low_variance(data, max_prop = 0.99)"},{"path":"/reference/drop_var_low_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop all variables with low variance — drop_var_low_variance","text":"data Data frame max_prop Maximum proportion values without variance","code":""},{"path":"/reference/drop_var_low_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop all variables with low variance — drop_var_low_variance","text":"Data frame","code":""},{"path":"/reference/drop_var_low_variance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop all variables with low variance — drop_var_low_variance","text":"","code":"data <- data.frame(a = 1:100, b = c(0, rep(1, 99))) drop_var_low_variance(data, max_prop = 0.9) #>       a #> 1     1 #> 2     2 #> 3     3 #> 4     4 #> 5     5 #> 6     6 #> 7     7 #> 8     8 #> 9     9 #> 10   10 #> 11   11 #> 12   12 #> 13   13 #> 14   14 #> 15   15 #> 16   16 #> 17   17 #> 18   18 #> 19   19 #> 20   20 #> 21   21 #> 22   22 #> 23   23 #> 24   24 #> 25   25 #> 26   26 #> 27   27 #> 28   28 #> 29   29 #> 30   30 #> 31   31 #> 32   32 #> 33   33 #> 34   34 #> 35   35 #> 36   36 #> 37   37 #> 38   38 #> 39   39 #> 40   40 #> 41   41 #> 42   42 #> 43   43 #> 44   44 #> 45   45 #> 46   46 #> 47   47 #> 48   48 #> 49   49 #> 50   50 #> 51   51 #> 52   52 #> 53   53 #> 54   54 #> 55   55 #> 56   56 #> 57   57 #> 58   58 #> 59   59 #> 60   60 #> 61   61 #> 62   62 #> 63   63 #> 64   64 #> 65   65 #> 66   66 #> 67   67 #> 68   68 #> 69   69 #> 70   70 #> 71   71 #> 72   72 #> 73   73 #> 74   74 #> 75   75 #> 76   76 #> 77   77 #> 78   78 #> 79   79 #> 80   80 #> 81   81 #> 82   82 #> 83   83 #> 84   84 #> 85   85 #> 86   86 #> 87   87 #> 88   88 #> 89   89 #> 90   90 #> 91   91 #> 92   92 #> 93   93 #> 94   94 #> 95   95 #> 96   96 #> 97   97 #> 98   98 #> 99   99 #> 100 100"},{"path":"/reference/drop_var_no_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop all variables with no variance — drop_var_no_variance","title":"Drop all variables with no variance — drop_var_no_variance","text":"Drop variables variance","code":""},{"path":"/reference/drop_var_no_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop all variables with no variance — drop_var_no_variance","text":"","code":"drop_var_no_variance(data)"},{"path":"/reference/drop_var_no_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop all variables with no variance — drop_var_no_variance","text":"data Data frame","code":""},{"path":"/reference/drop_var_no_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop all variables with no variance — drop_var_no_variance","text":"Data frame","code":""},{"path":"/reference/drop_var_no_variance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop all variables with no variance — drop_var_no_variance","text":"","code":"data <- data.frame(a = 1:10, b = rep(1,10)) drop_var_no_variance(data) #>     a #> 1   1 #> 2   2 #> 3   3 #> 4   4 #> 5   5 #> 6   6 #> 7   7 #> 8   8 #> 9   9 #> 10 10"},{"path":"/reference/drop_var_not_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop all not numeric variables — drop_var_not_numeric","title":"Drop all not numeric variables — drop_var_not_numeric","text":"Drop numeric variables","code":""},{"path":"/reference/drop_var_not_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop all not numeric variables — drop_var_not_numeric","text":"","code":"drop_var_not_numeric(data)"},{"path":"/reference/drop_var_not_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop all not numeric variables — drop_var_not_numeric","text":"data Data frame","code":""},{"path":"/reference/drop_var_not_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop all not numeric variables — drop_var_not_numeric","text":"Data frame","code":""},{"path":"/reference/drop_var_not_numeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop all not numeric variables — drop_var_not_numeric","text":"","code":"data <- data.frame(a = 1:10, b = rep(\"A\",10)) drop_var_not_numeric(data) #>     a #> 1   1 #> 2   2 #> 3   3 #> 4   4 #> 5   5 #> 6   6 #> 7   7 #> 8   8 #> 9   9 #> 10 10"},{"path":"/reference/drop_var_with_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop all variables with NA-values — drop_var_with_na","title":"Drop all variables with NA-values — drop_var_with_na","text":"Drop variables NA-values","code":""},{"path":"/reference/drop_var_with_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop all variables with NA-values — drop_var_with_na","text":"","code":"drop_var_with_na(data)"},{"path":"/reference/drop_var_with_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop all variables with NA-values — drop_var_with_na","text":"data Data frame","code":""},{"path":"/reference/drop_var_with_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop all variables with NA-values — drop_var_with_na","text":"Data frame","code":""},{"path":"/reference/drop_var_with_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop all variables with NA-values — drop_var_with_na","text":"","code":"data <- data.frame(a = 1:10, b = rep(NA,10)) drop_var_with_na(data) #>     a #> 1   1 #> 2   2 #> 3   3 #> 4   4 #> 5   5 #> 6   6 #> 7   7 #> 8   8 #> 9   9 #> 10 10"},{"path":"/reference/encrypt.html","id":null,"dir":"Reference","previous_headings":"","what":"encrypt text — encrypt","title":"encrypt text — encrypt","text":"encrypt text","code":""},{"path":"/reference/encrypt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"encrypt text — encrypt","text":"","code":"encrypt(text, codeletters = c(toupper(letters), letters, 0:9), shift = 18)"},{"path":"/reference/encrypt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"encrypt text — encrypt","text":"text text (character) codeletters string letters used encryption shift Number elements shifted","code":""},{"path":"/reference/encrypt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"encrypt text — encrypt","text":"Encrypted text","code":""},{"path":"/reference/encrypt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"encrypt text — encrypt","text":"","code":"encrypt(\"hello world\") #> [1] \"zw336 E693v\""},{"path":"/reference/explain_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Explain a target using Random Forest. — explain_forest","title":"Explain a target using Random Forest. — explain_forest","text":"Explain target using Random Forest.","code":""},{"path":"/reference/explain_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explain a target using Random Forest. — explain_forest","text":"","code":"explain_forest(data, target, ntree = 50, out = \"plot\", ...)"},{"path":"/reference/explain_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explain a target using Random Forest. — explain_forest","text":"data dataset target Target variable (binary) ntree Number trees used Random Forest Output function: \"plot\" | \"model\" | \"importance\" | \" ... Arguments passed randomForest::randomForest","code":""},{"path":"/reference/explain_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explain a target using Random Forest. — explain_forest","text":"Plot importance (= \"plot\")","code":""},{"path":"/reference/explain_forest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explain a target using Random Forest. — explain_forest","text":"","code":"data <- create_data_buy() explain_forest(data, target = buy)"},{"path":"/reference/explain_logreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Explain a binary target using a logistic regression (glm).\nModel chosen by AIC in a Stepwise Algorithm (MASS::stepAIC()). — explain_logreg","title":"Explain a binary target using a logistic regression (glm).\nModel chosen by AIC in a Stepwise Algorithm (MASS::stepAIC()). — explain_logreg","text":"Explain binary target using logistic regression (glm). Model chosen AIC Stepwise Algorithm (MASS::stepAIC()).","code":""},{"path":"/reference/explain_logreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explain a binary target using a logistic regression (glm).\nModel chosen by AIC in a Stepwise Algorithm (MASS::stepAIC()). — explain_logreg","text":"","code":"explain_logreg(data, target, out = \"tibble\", ...)"},{"path":"/reference/explain_logreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explain a binary target using a logistic regression (glm).\nModel chosen by AIC in a Stepwise Algorithm (MASS::stepAIC()). — explain_logreg","text":"data dataset target Target variable (binary) Output function: \"tibble\" | \"model\" ... arguments","code":""},{"path":"/reference/explain_logreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explain a binary target using a logistic regression (glm).\nModel chosen by AIC in a Stepwise Algorithm (MASS::stepAIC()). — explain_logreg","text":"Dataset results (term, estimate, std.error, z.value, p.value)","code":""},{"path":"/reference/explain_logreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explain a binary target using a logistic regression (glm).\nModel chosen by AIC in a Stepwise Algorithm (MASS::stepAIC()). — explain_logreg","text":"","code":"data <- iris data$is_versicolor <- ifelse(iris$Species == \"versicolor\", 1, 0) data$Species <- NULL explain_logreg(data, target = is_versicolor) #> # A tibble: 4 × 5 #>   term         estimate std.error statistic    p.value #>   <chr>           <dbl>     <dbl>     <dbl>      <dbl> #> 1 (Intercept)      6.95     2.23       3.12 0.00179    #> 2 Sepal.Width     -2.96     0.667     -4.43 0.00000926 #> 3 Petal.Length     1.13     0.462      2.44 0.0148     #> 4 Petal.Width     -2.61     1.08      -2.42 0.0156"},{"path":"/reference/explain_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Explain a target using a simple decision tree (classification or regression) — explain_tree","title":"Explain a target using a simple decision tree (classification or regression) — explain_tree","text":"Explain target using simple decision tree (classification regression)","code":""},{"path":"/reference/explain_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explain a target using a simple decision tree (classification or regression) — explain_tree","text":"","code":"explain_tree(   data,   target,   n,   max_cat = 10,   max_target_cat = 5,   maxdepth = 3,   minsplit = 20,   cp = 0,   weights = NA,   size = 0.7,   out = \"plot\",   ... )"},{"path":"/reference/explain_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explain a target using a simple decision tree (classification or regression) — explain_tree","text":"data dataset target Target variable n weights variable (count data) max_cat Drop categorical variables higher number levels max_target_cat Maximum number categories plotted target (except NA) maxdepth Set maximum depth node final tree, root     node counted depth 0.  Values greater  30 rpart     give nonsense results 32-bit machines. minsplit minimum number observations must exist node order      split attempted. cp complexity parameter.  split decrease overall     lack fit factor cp attempted.  instance,     anova splitting, means overall R-squared must     increase cp step. main role parameter     save computing time pruning splits obviously     worthwhile. Essentially,user informs program     split improve fit cp likely     pruned cross-validation, hence program need     pursue . weights optional case weights. size Text size plot Output function: \"plot\" | \"model\" ... arguments","code":""},{"path":"/reference/explain_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explain a target using a simple decision tree (classification or regression) — explain_tree","text":"Plot additional model (= \"model\")","code":""},{"path":"/reference/explain_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explain a target using a simple decision tree (classification or regression) — explain_tree","text":"","code":"data <- iris data$is_versicolor <- ifelse(iris$Species == \"versicolor\", 1, 0) data$Species <- NULL explain_tree(data, target = is_versicolor)"},{"path":"/reference/explain_xgboost.html","id":null,"dir":"Reference","previous_headings":"","what":"Explain a binary target using xgboost — explain_xgboost","title":"Explain a binary target using xgboost — explain_xgboost","text":"Based hyperparameters defined setup parameter, XGBoost hyperparameter-tuning carried using cross-validation. best model chosen returned. default, function returns feature-importance plot. get outputs, use parameter = \"\"","code":""},{"path":"/reference/explain_xgboost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explain a binary target using xgboost — explain_xgboost","text":"","code":"explain_xgboost(   data,   target,   log = TRUE,   nthread = 1,   setup = list(cv_nfold = 2, max_nrounds = 1000, early_stopping_rounds = 50, grid_xgboost     = list(eta = c(0.3, 0.1, 0.01), max_depth = c(3, 5), gamma = 0, colsample_bytree =     0.8, subsample = 0.8, min_child_weight = 1, scale_pos_weight = 1)),   out = \"plot\" )"},{"path":"/reference/explain_xgboost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explain a binary target using xgboost — explain_xgboost","text":"data Data frame, must contain variable defined target, contain customer-IDs date/period columns target Target variable (must binary 0/1, FALSE/TRUE, /yes) log Log? nthread Number threads used training setup Setup model Output function: \"plot\" | \"model\" | \"importance\" | \"","code":""},{"path":"/reference/explain_xgboost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explain a binary target using xgboost — explain_xgboost","text":"Plot importance (= \"plot\")","code":""},{"path":"/reference/explain_xgboost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explain a binary target using xgboost — explain_xgboost","text":"","code":"data <- use_data_iris() data$is_versicolor <- ifelse(data$Species == \"versicolor\", 1, 0) data$Species <- NULL explain_xgboost(data, target = is_versicolor, log = FALSE)"},{"path":"/reference/explore-package.html","id":null,"dir":"Reference","previous_headings":"","what":"explore: Simplifies Exploratory Data Analysis — explore-package","title":"explore: Simplifies Exploratory Data Analysis — explore-package","text":"Interactive data exploration one line code, automated reporting use easy remember set tidy functions low code exploratory data analysis.","code":""},{"path":[]},{"path":"/reference/explore-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"explore: Simplifies Exploratory Data Analysis — explore-package","text":"Maintainer: Roland Krasser roland.krasser@gmail.com","code":""},{"path":"/reference/explore.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore a dataset or variable — explore","title":"Explore a dataset or variable — explore","text":"Explore dataset variable","code":""},{"path":"/reference/explore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore a dataset or variable — explore","text":"","code":"explore(   data,   var,   var2,   n,   target,   targetpct,   split,   min_val = NA,   max_val = NA,   auto_scale = TRUE,   na = NA,   ... )"},{"path":"/reference/explore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore a dataset or variable — explore","text":"data dataset var variable var2 variable checking correlation n Variable number observations (count data) target Target variable (0/1 FALSE/TRUE) targetpct Plot variable target% (FALSE/TRUE) split Alternative targetpct (split = !targetpct) min_val values < min_val converted min_val max_val values > max_val converted max_val auto_scale Use 0.2 0.98 quantile min_val max_val (min_val max_val defined) na Value replace NA ... arguments (like flip = TRUE/FALSE)","code":""},{"path":"/reference/explore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explore a dataset or variable — explore","text":"Plot object","code":""},{"path":"/reference/explore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore a dataset or variable — explore","text":"","code":"## Launch Shiny app (in interactive R sessions) if (interactive())  {    explore(iris) }  ## Explore grafically  # Load library library(magrittr)  # Explore a variable iris %>% explore(Species)  iris %>% explore(Sepal.Length)  iris %>% explore(Sepal.Length, min_val = 4, max_val = 7)   # Explore a variable with a target iris$is_virginica <- ifelse(iris$Species == \"virginica\", 1, 0) iris %>% explore(Species, target = is_virginica)  iris %>% explore(Sepal.Length, target = is_virginica)   # Explore correlation between two variables iris %>% explore(Species, Petal.Length)  iris %>% explore(Sepal.Length, Petal.Length)   # Explore correlation between two variables and split by target iris %>% explore(Sepal.Length, Petal.Length, target = is_virginica)"},{"path":"/reference/explore_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore all variables — explore_all","title":"Explore all variables — explore_all","text":"Explore variables dataset (create plots)","code":""},{"path":"/reference/explore_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore all variables — explore_all","text":"","code":"explore_all(   data,   n,   target,   ncol = 2,   targetpct,   color = c(\"lightgrey\", \"#7888A8\"),   split = TRUE )"},{"path":"/reference/explore_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore all variables — explore_all","text":"data dataset n Weights variable (count data) target Target variable (0/1 FALSE/TRUE) ncol Layout plots (number columns) targetpct Plot variable target% (FALSE/TRUE) color Forece default color (possible) split Split target (TRUE|FALSE)","code":""},{"path":"/reference/explore_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explore all variables — explore_all","text":"Plot","code":""},{"path":"/reference/explore_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore all variables — explore_all","text":"","code":"explore_all(iris)   iris$is_virginica <- ifelse(iris$Species == \"virginica\", 1, 0) explore_all(iris, target = is_virginica)"},{"path":"/reference/explore_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore categorical variable using bar charts — explore_bar","title":"Explore categorical variable using bar charts — explore_bar","text":"Create barplot explore categorical variable. target selected, barplot created levels target.","code":""},{"path":"/reference/explore_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore categorical variable using bar charts — explore_bar","text":"","code":"explore_bar(   data,   var,   target,   flip = NA,   title = \"\",   numeric = NA,   max_cat = 30,   max_target_cat = 5,   color = c(\"lightgrey\", \"#7888A8\"),   legend_position = \"right\",   label,   label_size = 2.7,   ... )"},{"path":"/reference/explore_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore categorical variable using bar charts — explore_bar","text":"data dataset var variable target target (can 2 levels) flip plot flipped? (change x y) title Title plot (empty var name) numeric Display variable numeric (category) max_cat Maximum number categories plotted max_target_cat Maximum number categories plotted target (except NA) color Color bar legend_position Position legend (\"bottom\"|\"top\"|\"none\") label Show labels? (empty, automatic) label_size Size labels ... arguments","code":""},{"path":"/reference/explore_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explore categorical variable using bar charts — explore_bar","text":"Plot object (bar chart)","code":""},{"path":"/reference/explore_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore the correlation between two variables — explore_cor","title":"Explore the correlation between two variables — explore_cor","text":"Explore correlation two variables","code":""},{"path":"/reference/explore_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore the correlation between two variables — explore_cor","text":"","code":"explore_cor(   data,   x,   y,   target,   bins = 8,   min_val = NA,   max_val = NA,   auto_scale = TRUE,   title = NA,   color = \"grey\",   ... )"},{"path":"/reference/explore_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore the correlation between two variables — explore_cor","text":"data dataset x Variable x axis y Variable y axis target Target variable (categorical) bins Number bins min_val values < min_val converted min_val max_val values > max_val converted max_val auto_scale Use 0.2 0.98 quantile min_val max_val (min_val max_val defined) title Title plot color Color plot ... arguments","code":""},{"path":"/reference/explore_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explore the correlation between two variables — explore_cor","text":"Plot","code":""},{"path":"/reference/explore_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore the correlation between two variables — explore_cor","text":"","code":"explore_cor(iris, x = Sepal.Length, y = Sepal.Width)"},{"path":"/reference/explore_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore count data (categories + frequency) — explore_count","title":"Explore count data (categories + frequency) — explore_count","text":"Create plot explore count data (categories + freuency) Variable named 'n' auto detected Frequency","code":""},{"path":"/reference/explore_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore count data (categories + frequency) — explore_count","text":"","code":"explore_count(   data,   cat,   n,   target,   pct = FALSE,   split = TRUE,   title = NA,   numeric = FALSE,   max_cat = 30,   max_target_cat = 5,   flip = NA )"},{"path":"/reference/explore_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore count data (categories + frequency) — explore_count","text":"data dataset (categories + frequency) cat Numerical variable n Number observations (frequency) target Target variable pct Show percent? split Split target (FALSE/TRUE) title Title plot numeric Display variable numeric (category) max_cat Maximum number categories plotted max_target_cat Maximum number categories plotted target (except NA) flip Flip plot? (categorical variables)","code":""},{"path":"/reference/explore_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explore count data (categories + frequency) — explore_count","text":"Plot object","code":""},{"path":"/reference/explore_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore count data (categories + frequency) — explore_count","text":"","code":"library(dplyr) iris %>%   count(Species) %>%   explore_count(Species)"},{"path":"/reference/explore_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore density of variable — explore_density","title":"Explore density of variable — explore_density","text":"Create density plot explore numerical variable","code":""},{"path":"/reference/explore_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore density of variable — explore_density","text":"","code":"explore_density(   data,   var,   target,   title = \"\",   min_val = NA,   max_val = NA,   color = c(\"lightgrey\", \"#7888A8\"),   auto_scale = TRUE,   max_target_cat = 5,   ... )"},{"path":"/reference/explore_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore density of variable — explore_density","text":"data dataset var Variable target Target variable (0/1 FALSE/TRUE) title Title plot (empty var name) min_val values < min_val converted min_val max_val values > max_val converted max_val color Color plot auto_scale Use 0.02 0.98 percent quantile min_val max_val (min_val max_val defined) max_target_cat Maximum number levels target shown plot (except NA). ... arguments","code":""},{"path":"/reference/explore_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explore density of variable — explore_density","text":"Plot object (density plot)","code":""},{"path":"/reference/explore_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore density of variable — explore_density","text":"","code":"explore_density(iris, \"Sepal.Length\") #> Warning: Groups with fewer than two data points have been dropped. #> Warning: no non-missing arguments to max; returning -Inf  iris$is_virginica <- ifelse(iris$Species == \"virginica\", 1, 0) explore_density(iris, Sepal.Length, target = is_virginica)"},{"path":"/reference/explore_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore dataset interactive — explore_shiny","title":"Explore dataset interactive — explore_shiny","text":"Launches shiny app explore dataset","code":""},{"path":"/reference/explore_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore dataset interactive — explore_shiny","text":"","code":"explore_shiny(data, target)"},{"path":"/reference/explore_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore dataset interactive — explore_shiny","text":"data dataset target Target variable (0/1 FALSE/TRUE)","code":""},{"path":"/reference/explore_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore dataset interactive — explore_shiny","text":"","code":"# Only run examples in interactive R sessions if (interactive())  {    explore_shiny(iris) }"},{"path":"/reference/explore_targetpct.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore variable + binary target (values 0/1) — explore_targetpct","title":"Explore variable + binary target (values 0/1) — explore_targetpct","text":"Create plot explore relation variable binary target target percent. target variable choosen automatically possible (name starts 'target')","code":""},{"path":"/reference/explore_targetpct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore variable + binary target (values 0/1) — explore_targetpct","text":"","code":"explore_targetpct(   data,   var,   target = NULL,   title = NA,   min_val = NA,   max_val = NA,   auto_scale = TRUE,   na = NA,   flip = NA,   ... )"},{"path":"/reference/explore_targetpct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore variable + binary target (values 0/1) — explore_targetpct","text":"data dataset var Numerical variable target Target variable (0/1 FALSE/TRUE) title Title plot min_val values < min_val converted min_val max_val values > max_val converted max_val auto_scale Use 0.2 0.98 quantile min_val max_val (min_val max_val defined) na Value replace NA flip Flip plot? (categorical variables) ... arguments","code":""},{"path":"/reference/explore_targetpct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explore variable + binary target (values 0/1) — explore_targetpct","text":"Plot object","code":""},{"path":"/reference/explore_targetpct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore variable + binary target (values 0/1) — explore_targetpct","text":"","code":"iris$target01 <- ifelse(iris$Species == \"versicolor\",1,0) explore_targetpct(iris)"},{"path":"/reference/explore_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore table — explore_tbl","title":"Explore table — explore_tbl","text":"Explore table. Plots variable types, variables variance variables NA","code":""},{"path":"/reference/explore_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore table — explore_tbl","text":"","code":"explore_tbl(data, n)"},{"path":"/reference/explore_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore table — explore_tbl","text":"data dataset n Weight variable count data","code":""},{"path":"/reference/explore_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore table — explore_tbl","text":"","code":"explore_tbl(iris)"},{"path":"/reference/format_num_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"Format number as character string (auto) — format_num_auto","title":"Format number as character string (auto) — format_num_auto","text":"Formats number depending value number space, scientific big number k (1 000), M (1 000 000) B (1 000 000 000)","code":""},{"path":"/reference/format_num_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format number as character string (auto) — format_num_auto","text":"","code":"format_num_auto(number = 0, digits = 1)"},{"path":"/reference/format_num_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format number as character string (auto) — format_num_auto","text":"number number (integer real) digits Number digits","code":""},{"path":"/reference/format_num_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format number as character string (auto) — format_num_auto","text":"Formatted number text","code":""},{"path":"/reference/format_num_auto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format number as character string (auto) — format_num_auto","text":"","code":"format_num_kMB(5500, digits = 2) #> [1] \"5.5k\""},{"path":"/reference/format_num_kMB.html","id":null,"dir":"Reference","previous_headings":"","what":"Format number as character string (kMB) — format_num_kMB","title":"Format number as character string (kMB) — format_num_kMB","text":"Formats big number k (1 000), M (1 000 000) B (1 000 000 000)","code":""},{"path":"/reference/format_num_kMB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format number as character string (kMB) — format_num_kMB","text":"","code":"format_num_kMB(number = 0, digits = 1)"},{"path":"/reference/format_num_kMB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format number as character string (kMB) — format_num_kMB","text":"number number (integer real) digits Number digits","code":""},{"path":"/reference/format_num_kMB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format number as character string (kMB) — format_num_kMB","text":"Formatted number text","code":""},{"path":"/reference/format_num_kMB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format number as character string (kMB) — format_num_kMB","text":"","code":"format_num_kMB(5500, digits = 2) #> [1] \"5.5k\""},{"path":"/reference/format_num_space.html","id":null,"dir":"Reference","previous_headings":"","what":"Format number as character string (space as big.mark) — format_num_space","title":"Format number as character string (space as big.mark) — format_num_space","text":"Formats big number using space big.mark (1000 = 1 000)","code":""},{"path":"/reference/format_num_space.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format number as character string (space as big.mark) — format_num_space","text":"","code":"format_num_space(number = 0, digits = 1)"},{"path":"/reference/format_num_space.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format number as character string (space as big.mark) — format_num_space","text":"number number (integer real) digits Number digits","code":""},{"path":"/reference/format_num_space.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format number as character string (space as big.mark) — format_num_space","text":"Formatted number text","code":""},{"path":"/reference/format_num_space.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format number as character string (space as big.mark) — format_num_space","text":"","code":"format_num_space(5500, digits = 2) #> [1] \"5 500\""},{"path":"/reference/format_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Format target — format_target","title":"Format target — format_target","text":"Formats target 0/1 variable. target numeric, 1 = average.","code":""},{"path":"/reference/format_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format target — format_target","text":"","code":"format_target(target)"},{"path":"/reference/format_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format target — format_target","text":"target Variable vector","code":""},{"path":"/reference/format_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format target — format_target","text":"Formated target","code":""},{"path":"/reference/format_target.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format target — format_target","text":"","code":"iris$is_virginica <- ifelse(iris$Species == \"virginica\", \"yes\", \"no\") iris$target <- format_target(iris$is_virginica) table(iris$target) #>  #>   0   1  #> 100  50"},{"path":"/reference/format_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Format type description — format_type","title":"Format type description — format_type","text":"Format type description variable 3 letters (int|dbl|lgl|chr|dat)","code":""},{"path":"/reference/format_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format type description — format_type","text":"","code":"format_type(type)"},{"path":"/reference/format_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format type description — format_type","text":"type Type description (\"integer\", \"double\", \"logical\", character\", \"date\")","code":""},{"path":"/reference/format_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format type description — format_type","text":"Formatted type description (int|dbl|lgl|chr|dat)","code":""},{"path":"/reference/format_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format type description — format_type","text":"","code":"format_type(typeof(iris$Species)) #> [1] \"int\""},{"path":"/reference/get_nrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Get number of rows for a grid plot — get_nrow","title":"Get number of rows for a grid plot — get_nrow","text":"function deprecated, please use total_fig_height() instead.","code":""},{"path":"/reference/get_nrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get number of rows for a grid plot — get_nrow","text":"","code":"get_nrow(varnames, exclude = 0, ncol = 2)"},{"path":"/reference/get_nrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get number of rows for a grid plot — get_nrow","text":"varnames List variables plotted exclude Number variables excluded plot ncol Number columns (default = 2)","code":""},{"path":"/reference/get_nrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get number of rows for a grid plot — get_nrow","text":"Number rows","code":""},{"path":"/reference/get_nrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get number of rows for a grid plot — get_nrow","text":"","code":"if (FALSE) { get_nrow(names(iris), ncol = 2) }"},{"path":"/reference/get_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Return type of variable — get_type","title":"Return type of variable — get_type","text":"Return value typeof, except variable contains hide, return \"\"","code":""},{"path":"/reference/get_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return type of variable — get_type","text":"","code":"get_type(var)"},{"path":"/reference/get_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return type of variable — get_type","text":"var vector (dataframe column)","code":""},{"path":"/reference/get_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return type of variable — get_type","text":"Value typeof \"\"","code":""},{"path":"/reference/get_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return type of variable — get_type","text":"","code":"get_type(iris$Species) #> [1] \"factor\""},{"path":"/reference/get_var_buckets.html","id":null,"dir":"Reference","previous_headings":"","what":"Put variables into ","title":"Put variables into ","text":"Put variables \"buckets\" create set plots instead one large plot","code":""},{"path":"/reference/get_var_buckets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put variables into ","text":"","code":"get_var_buckets(data, bucket_size = 100, var_name_target = NA, var_name_n = NA)"},{"path":"/reference/get_var_buckets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put variables into ","text":"data dataset bucket_size Maximum number variables one bucket var_name_target Name target variable (defined) var_name_n Name weight (n) variable (defined)","code":""},{"path":"/reference/get_var_buckets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put variables into ","text":"Buckets list","code":""},{"path":"/reference/get_var_buckets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Put variables into ","text":"","code":"get_var_buckets(iris) #> [[1]] #> [1] \"Sepal.Length\" \"Sepal.Width\"  \"Petal.Length\" \"Petal.Width\"  \"Species\"      #>  get_var_buckets(iris, bucket_size = 2) #> [[1]] #> [1] \"Sepal.Length\" \"Sepal.Width\"  #>  #> [[2]] #> [1] \"Petal.Length\" \"Petal.Width\"  #>  #> [[3]] #> [1] \"Species\" #>  get_var_buckets(iris, bucket_size = 2, var_name_target = \"Species\") #> [[1]] #> [1] \"Sepal.Length\" \"Sepal.Width\"  \"Species\"      #>  #> [[2]] #> [1] \"Petal.Length\" \"Petal.Width\"  \"Species\"      #>"},{"path":"/reference/guess_cat_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Return if variable is categorical or numerical — guess_cat_num","title":"Return if variable is categorical or numerical — guess_cat_num","text":"Guess variable categorical numerical based name, type values variable","code":""},{"path":"/reference/guess_cat_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return if variable is categorical or numerical — guess_cat_num","text":"","code":"guess_cat_num(var, descr)"},{"path":"/reference/guess_cat_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return if variable is categorical or numerical — guess_cat_num","text":"var vector (dataframe column) descr description variable (optional)","code":""},{"path":"/reference/guess_cat_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return if variable is categorical or numerical — guess_cat_num","text":"\"cat\" (categorical), \"num\" (numerical) \"oth\" ()","code":""},{"path":"/reference/guess_cat_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return if variable is categorical or numerical — guess_cat_num","text":"","code":"guess_cat_num(iris$Species) #> [1] \"cat\""},{"path":"/reference/interact.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a explore-plot interactive — interact","title":"Make a explore-plot interactive — interact","text":"Make explore-plot interactive","code":""},{"path":"/reference/interact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a explore-plot interactive — interact","text":"","code":"interact(obj, lower_title = TRUE, hide_geom_text = TRUE)"},{"path":"/reference/interact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a explore-plot interactive — interact","text":"obj object (e.g. ggplot2-object) lower_title Lowering title ggplot2-object(FALSE/TRUE) hide_geom_text Hiding geom_text ggplot2-object (FALSE/TRUE)","code":""},{"path":"/reference/interact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a explore-plot interactive — interact","text":"Plot object","code":""},{"path":"/reference/interact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a explore-plot interactive — interact","text":"","code":"library(dplyr) if (interactive())  {    iris %>% explore(Sepal.Length, target = Species) %>% interact() }"},{"path":"/reference/log_info_if.html","id":null,"dir":"Reference","previous_headings":"","what":"Log conditional — log_info_if","title":"Log conditional — log_info_if","text":"Log conditional","code":""},{"path":"/reference/log_info_if.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log conditional — log_info_if","text":"","code":"log_info_if(log = TRUE, text = \"log\")"},{"path":"/reference/log_info_if.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log conditional — log_info_if","text":"log log (TRUE|FALSE) text text string logged","code":""},{"path":"/reference/log_info_if.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log conditional — log_info_if","text":"prints log screen (log == TRUE).","code":""},{"path":"/reference/mix_color.html","id":null,"dir":"Reference","previous_headings":"","what":"mix_color — mix_color","title":"mix_color — mix_color","text":"mix_color","code":""},{"path":"/reference/mix_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mix_color — mix_color","text":"","code":"mix_color(color1, color2 = NA, n = 5)"},{"path":"/reference/mix_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mix_color — mix_color","text":"color1 Color 1 color2 Color 2 n Number different colors generated","code":""},{"path":"/reference/mix_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mix_color — mix_color","text":"Vector color-codes","code":""},{"path":"/reference/mix_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mix_color — mix_color","text":"","code":"mix_color(\"blue\", n = 10) #>  [1] \"#00002E\" \"#00005C\" \"#00008B\" \"#0000B9\" \"#0000E7\" \"#1717FF\" \"#4545FF\" #>  [8] \"#7373FF\" \"#A2A2FF\" \"#D0D0FF\" mix_color(\"gold\", \"red\", n = 4) #> [1] \"#FFD700\" \"#FF8F00\" \"#FF4700\" \"#FF0000\""},{"path":"/reference/plot_legend_targetpct.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots a legend that can be used for explore_all with a binary target — plot_legend_targetpct","title":"Plots a legend that can be used for explore_all with a binary target — plot_legend_targetpct","text":"Plots legend can used explore_all binary target","code":""},{"path":"/reference/plot_legend_targetpct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots a legend that can be used for explore_all with a binary target — plot_legend_targetpct","text":"","code":"plot_legend_targetpct(border = TRUE)"},{"path":"/reference/plot_legend_targetpct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots a legend that can be used for explore_all with a binary target — plot_legend_targetpct","text":"border Draw border?","code":""},{"path":"/reference/plot_legend_targetpct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots a legend that can be used for explore_all with a binary target — plot_legend_targetpct","text":"Base plot","code":""},{"path":"/reference/plot_legend_targetpct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots a legend that can be used for explore_all with a binary target — plot_legend_targetpct","text":"","code":"plot_legend_targetpct(border = TRUE)"},{"path":"/reference/plot_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a text — plot_text","title":"Plot a text — plot_text","text":"Plots text (base plot) let choose text-size color","code":""},{"path":"/reference/plot_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a text — plot_text","text":"","code":"plot_text(text = \"hello world\", size = 1.2, color = \"black\", ggplot = FALSE)"},{"path":"/reference/plot_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a text — plot_text","text":"text Text string size Text-size color Text-color ggplot return ggplot-object? (base plot)","code":""},{"path":"/reference/plot_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a text — plot_text","text":"Plot","code":""},{"path":"/reference/plot_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a text — plot_text","text":"","code":"plot_text(\"hello\", size = 2, color = \"red\")"},{"path":"/reference/plot_var_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a variable info — plot_var_info","title":"Plot a variable info — plot_var_info","text":"Creates ggplot variable-name title text","code":""},{"path":"/reference/plot_var_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a variable info — plot_var_info","text":"","code":"plot_var_info(data, var, info = \"\")"},{"path":"/reference/plot_var_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a variable info — plot_var_info","text":"data dataset var Variable info Text plot","code":""},{"path":"/reference/plot_var_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a variable info — plot_var_info","text":"Plot (ggplot)","code":""},{"path":"/reference/predict_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict target using a trained model. — predict_target","title":"Predict target using a trained model. — predict_target","text":"Predict target using trained model.","code":""},{"path":"/reference/predict_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict target using a trained model. — predict_target","text":"","code":"predict_target(data, model, name = \"prediction\")"},{"path":"/reference/predict_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict target using a trained model. — predict_target","text":"data dataset (data.frame tbl) model model created explain_*() function name Prefix variable-name prediction","code":""},{"path":"/reference/predict_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict target using a trained model. — predict_target","text":"data containing predicted probabilities target values","code":""},{"path":"/reference/predict_target.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict target using a trained model. — predict_target","text":"","code":"data_train <- create_data_buy(seed = 1) data_test <- create_data_buy(seed = 2) model <- explain_tree(data_train, target = buy, out = \"model\")  data <- predict_target(data = data_test, model = model) describe(data) #> # A tibble: 15 × 8 #>    variable        type     na na_pct unique       min      mean       max #>    <chr>           <chr> <int>  <dbl>  <int>     <dbl>     <dbl>     <dbl> #>  1 period          int       0      0      1 202012    202012    202012    #>  2 buy             int       0      0      2      0         0.5       1    #>  3 age             int       0      0     65     20        52.7      95    #>  4 city_ind        int       0      0      2      0         0.5       1    #>  5 female_ind      int       0      0      2      0         0.53      1    #>  6 fixedvoice_ind  int       0      0      2      0         0.1       1    #>  7 fixeddata_ind   int       0      0      1      1         1         1    #>  8 fixedtv_ind     int       0      0      2      0         0.4       1    #>  9 mobilevoice_ind int       0      0      2      0         0.59      1    #> 10 mobiledata_prd  chr       0      0      3     NA        NA        NA    #> 11 bbi_speed_ind   int       0      0      2      0         0.61      1    #> 12 bbi_usg_gb      int       0      0     88      7       164.   100000    #> 13 hh_single       int       0      0      2      0         0.33      1    #> 14 prediction_0    dbl       0      0      6      0.1       0.5       0.88 #> 15 prediction_1    dbl       0      0      6      0.12      0.5       0.9"},{"path":"/reference/replace_na_with.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace NA — replace_na_with","title":"Replace NA — replace_na_with","text":"Replace NA values variable dataframe","code":""},{"path":"/reference/replace_na_with.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace NA — replace_na_with","text":"","code":"replace_na_with(data, var_name, with)"},{"path":"/reference/replace_na_with.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace NA — replace_na_with","text":"data dataframe var_name Name variable NAs replaced Value instead NA","code":""},{"path":"/reference/replace_na_with.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace NA — replace_na_with","text":"Updated dataframe","code":""},{"path":"/reference/replace_na_with.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace NA — replace_na_with","text":"","code":"data <- data.frame(nr = c(1,2,3,NA,NA)) replace_na_with(data, \"nr\", 0) #> replace NA in variable nr with 0 #>   nr #> 1  1 #> 2  2 #> 3  3 #> 4  0 #> 5  0"},{"path":"/reference/report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a report of all variables — report","title":"Generate a report of all variables — report","text":"Generate report variables target defined, relation target reported","code":""},{"path":"/reference/report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a report of all variables — report","text":"","code":"report(data, n, target, targetpct, split, output_file, output_dir)"},{"path":"/reference/report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a report of all variables — report","text":"data dataset n Weights variable count data target Target variable (0/1 FALSE/TRUE) targetpct Plot variable target% (FALSE/TRUE) split Alternative targetpct (split = !targetpct) output_file Filename html report output_dir Directory save html report","code":""},{"path":"/reference/report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a report of all variables — report","text":"","code":"if (rmarkdown::pandoc_available(\"1.12.3\")) {  report(iris, output_dir = tempdir())  } #> ℹ Processing template: \"template_report_variable.Rmd\" #> ✔ Report created at file:///tmp/Rtmp4DuB4o/report_variable.html"},{"path":"/reference/rescale01.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescales a numeric variable into values between 0 and 1 — rescale01","title":"Rescales a numeric variable into values between 0 and 1 — rescale01","text":"Rescales numeric variable values 0 1","code":""},{"path":"/reference/rescale01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescales a numeric variable into values between 0 and 1 — rescale01","text":"","code":"rescale01(x)"},{"path":"/reference/rescale01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescales a numeric variable into values between 0 and 1 — rescale01","text":"x numeric vector (rescaled)","code":""},{"path":"/reference/rescale01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescales a numeric variable into values between 0 and 1 — rescale01","text":"vector values 0 1","code":""},{"path":"/reference/rescale01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rescales a numeric variable into values between 0 and 1 — rescale01","text":"","code":"rescale01(0:10) #>  [1] 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0"},{"path":"/reference/show_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Show color vector as ggplot — show_color","title":"Show color vector as ggplot — show_color","text":"Show color vector ggplot","code":""},{"path":"/reference/show_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show color vector as ggplot — show_color","text":"","code":"show_color(color)"},{"path":"/reference/show_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show color vector as ggplot — show_color","text":"color Vector colors","code":""},{"path":"/reference/show_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show color vector as ggplot — show_color","text":"ggplot","code":""},{"path":"/reference/show_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show color vector as ggplot — show_color","text":"","code":"show_color(\"gold\")  show_color(c(\"blue\", \"red\", \"green\"))"},{"path":"/reference/simplify_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplifies a text string — simplify_text","title":"Simplifies a text string — simplify_text","text":"text string converted simplified version trimming, converting upper case, replacing german Umlaute, dropping special characters like comma semicolon replacing multiple spaces one space.","code":""},{"path":"/reference/simplify_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplifies a text string — simplify_text","text":"","code":"simplify_text(text)"},{"path":"/reference/simplify_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplifies a text string — simplify_text","text":"text text string","code":""},{"path":"/reference/simplify_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplifies a text string — simplify_text","text":"text string","code":""},{"path":"/reference/simplify_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplifies a text string — simplify_text","text":"","code":"simplify_text(\" Hello  World !, \") #> [1] \"HELLO WORLD !\""},{"path":"/reference/target_explore_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore categorical variable + target — target_explore_cat","title":"Explore categorical variable + target — target_explore_cat","text":"Create plot explore relation categorical variable binary target","code":""},{"path":"/reference/target_explore_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore categorical variable + target — target_explore_cat","text":"","code":"target_explore_cat(   data,   var,   target = \"target_ind\",   min_val = NA,   max_val = NA,   flip = TRUE,   num2char = TRUE,   title = NA,   auto_scale = TRUE,   na = NA,   max_cat = 30,   legend_position = \"bottom\" )"},{"path":"/reference/target_explore_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore categorical variable + target — target_explore_cat","text":"data dataset var Categorical variable target Target variable (0/1 FALSE/TRUE) min_val values < min_val converted min_val max_val values > max_val converted max_val flip plot flipped? (change x y) num2char TRUE, numeric values variable converted character title Title plot auto_scale used, just compatibility na Value replace NA max_cat Maximum numbers categories plotted legend_position Position legend (\"right\"|\"bottom\"|\"non\")","code":""},{"path":"/reference/target_explore_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explore categorical variable + target — target_explore_cat","text":"Plot object","code":""},{"path":"/reference/target_explore_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore categorical variable + target — target_explore_num","title":"Explore categorical variable + target — target_explore_num","text":"Create plot explore relation numerical variable binary target","code":""},{"path":"/reference/target_explore_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore categorical variable + target — target_explore_num","text":"","code":"target_explore_num(   data,   var,   target = \"target_ind\",   min_val = NA,   max_val = NA,   flip = TRUE,   title = NA,   auto_scale = TRUE,   na = NA,   legend_position = \"bottom\" )"},{"path":"/reference/target_explore_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore categorical variable + target — target_explore_num","text":"data dataset var Numerical variable target Target variable (0/1 FALSE/TRUE) min_val values < min_val converted min_val max_val values > max_val converted max_val flip plot flipped? (change x y) title Title plot auto_scale Use 0.02 0.98 quantile min_val max_val (min_val max_val defined) na Value replace NA legend_position Position legend (\"right\"|\"bottom\"|\"non\")","code":""},{"path":"/reference/target_explore_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explore categorical variable + target — target_explore_num","text":"Plot object","code":""},{"path":"/reference/total_fig_height.html","id":null,"dir":"Reference","previous_headings":"","what":"Get fig.height for RMarkdown-junk using explore_all() — total_fig_height","title":"Get fig.height for RMarkdown-junk using explore_all() — total_fig_height","text":"Get fig.height RMarkdown-junk using explore_all()","code":""},{"path":"/reference/total_fig_height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get fig.height for RMarkdown-junk using explore_all() — total_fig_height","text":"","code":"total_fig_height(   data,   var_name_n,   var_name_target,   nvar = NA,   ncol = 2,   size = 3 )"},{"path":"/reference/total_fig_height.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get fig.height for RMarkdown-junk using explore_all() — total_fig_height","text":"data dataset var_name_n Weights variable count data? (TRUE / MISSING) var_name_target Target variable (TRUE / MISSING) nvar Number variables plot ncol Number columns (default = 2) size fig.height 1 plot (default = 3)","code":""},{"path":"/reference/total_fig_height.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get fig.height for RMarkdown-junk using explore_all() — total_fig_height","text":"Number rows","code":""},{"path":"/reference/total_fig_height.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get fig.height for RMarkdown-junk using explore_all() — total_fig_height","text":"","code":"total_fig_height(iris) #> [1] 9 total_fig_height(iris, var_name_target = \"Species\") #> [1] 6 total_fig_height(nvar = 5) #> [1] 9"},{"path":"/reference/use_data_beer.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the beer data set — use_data_beer","title":"Use the beer data set — use_data_beer","text":"data set incomplete collection popular beers Austria, Germany Switzerland. Data collected various websites 2023. collected data may incorrect.","code":""},{"path":"/reference/use_data_beer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use the beer data set — use_data_beer","text":"","code":"use_data_beer()"},{"path":"/reference/use_data_beer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the beer data set — use_data_beer","text":"Dataset tibble","code":""},{"path":"/reference/use_data_beer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use the beer data set — use_data_beer","text":"","code":"use_data_beer() #> # A tibble: 161 × 11 #>    name       brand country  year type  color_dark alcohol_vol_pct original_wort #>    <chr>      <chr> <chr>   <dbl> <chr>      <dbl>           <dbl>         <dbl> #>  1 Puntigame… Punt… Austria  2023 Rest           0             5.1          11.5 #>  2 Puntigame… Punt… Austria  2023 Alko…          0             0             5.1 #>  3 Puntigame… Punt… Austria  2023 Rest           0             5.2          12.1 #>  4 Puntigame… Punt… Austria  2023 Rest           0             6            13.8 #>  5 Puntigame… Punt… Austria  2023 Rest           0             4.9          11.5 #>  6 Goesser M… Goes… Austria  2023 Rest           0             5.2          11.9 #>  7 Goesser H… Goes… Austria  2023 Rest           0             4.4          11.1 #>  8 Goesser N… Goes… Austria  2023 Alko…          0             0.5           7   #>  9 Goesser S… Goes… Austria  2023 Rest           0             5.7          13.2 #> 10 Goesser G… Goes… Austria  2023 Rest           0             5.3          12.2 #> # ℹ 151 more rows #> # ℹ 3 more variables: energy_kcal_100ml <dbl>, carb_g_100ml <dbl>, #> #   sugar_g_100ml <dbl>"},{"path":"/reference/use_data_diamonds.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the diamonds data set — use_data_diamonds","title":"Use the diamonds data set — use_data_diamonds","text":"data set comes ggplot2 package. contains prices attributes almost 54,000 diamonds.","code":""},{"path":"/reference/use_data_diamonds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use the diamonds data set — use_data_diamonds","text":"","code":"use_data_diamonds()"},{"path":"/reference/use_data_diamonds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the diamonds data set — use_data_diamonds","text":"Dataset","code":""},{"path":[]},{"path":"/reference/use_data_diamonds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use the diamonds data set — use_data_diamonds","text":"","code":"use_data_diamonds() #> # A tibble: 53,940 × 10 #>    carat cut       color clarity depth table price     x     y     z #>    <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl> #>  1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43 #>  2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31 #>  3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31 #>  4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63 #>  5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75 #>  6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48 #>  7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47 #>  8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53 #>  9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49 #> 10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39 #> # ℹ 53,930 more rows"},{"path":"/reference/use_data_iris.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the iris flower data set — use_data_iris","title":"Use the iris flower data set — use_data_iris","text":"data set comes base R. data set gives measurements centimeters variables sepal length width petal length width, respectively, 50 flowers 3 species iris. species Iris setosa, versicolor, virginica.","code":""},{"path":"/reference/use_data_iris.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use the iris flower data set — use_data_iris","text":"","code":"use_data_iris()"},{"path":"/reference/use_data_iris.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the iris flower data set — use_data_iris","text":"Dataset tibble","code":""},{"path":"/reference/use_data_iris.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use the iris flower data set — use_data_iris","text":"","code":"use_data_iris() #> # A tibble: 150 × 5 #>    Sepal.Length Sepal.Width Petal.Length Petal.Width Species #>           <dbl>       <dbl>        <dbl>       <dbl> <fct>   #>  1          5.1         3.5          1.4         0.2 setosa  #>  2          4.9         3            1.4         0.2 setosa  #>  3          4.7         3.2          1.3         0.2 setosa  #>  4          4.6         3.1          1.5         0.2 setosa  #>  5          5           3.6          1.4         0.2 setosa  #>  6          5.4         3.9          1.7         0.4 setosa  #>  7          4.6         3.4          1.4         0.3 setosa  #>  8          5           3.4          1.5         0.2 setosa  #>  9          4.4         2.9          1.4         0.2 setosa  #> 10          4.9         3.1          1.5         0.1 setosa  #> # ℹ 140 more rows"},{"path":"/reference/use_data_mpg.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the mpg data set — use_data_mpg","title":"Use the mpg data set — use_data_mpg","text":"data set comes ggplot2 package. contains subset fuel economy data EPA makes available https://fueleconomy.gov/. contains models new release every year 1999 2008 - used proxy popularity car.","code":""},{"path":"/reference/use_data_mpg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use the mpg data set — use_data_mpg","text":"","code":"use_data_mpg()"},{"path":"/reference/use_data_mpg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the mpg data set — use_data_mpg","text":"Dataset","code":""},{"path":[]},{"path":"/reference/use_data_mpg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use the mpg data set — use_data_mpg","text":"","code":"use_data_mpg() #> # A tibble: 234 × 11 #>    manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class #>    <chr>        <chr>      <dbl> <int> <int> <chr> <chr> <int> <int> <chr> <chr> #>  1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp… #>  2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp… #>  3 audi         a4           2    2008     4 manu… f        20    31 p     comp… #>  4 audi         a4           2    2008     4 auto… f        21    30 p     comp… #>  5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp… #>  6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp… #>  7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp… #>  8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp… #>  9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp… #> 10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp… #> # ℹ 224 more rows"},{"path":"/reference/use_data_mtcars.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the mtcars data set — use_data_mtcars","title":"Use the mtcars data set — use_data_mtcars","text":"data set comes base R. data extracted 1974 Motor Trend US magazine, comprises fuel consumption 10 aspects automobile design performance 32 automobiles (1973–74 models).","code":""},{"path":"/reference/use_data_mtcars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use the mtcars data set — use_data_mtcars","text":"","code":"use_data_mtcars()"},{"path":"/reference/use_data_mtcars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the mtcars data set — use_data_mtcars","text":"Dataset","code":""},{"path":"/reference/use_data_mtcars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use the mtcars data set — use_data_mtcars","text":"","code":"use_data_mtcars() #> # A tibble: 32 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> # ℹ 22 more rows"},{"path":"/reference/use_data_penguins.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the penguins data set — use_data_penguins","title":"Use the penguins data set — use_data_penguins","text":"data set comes palmerpenguins package. contains measurements penguin species, island Palmer Archipelago, size (flipper length, body mass, bill dimensions), sex.","code":""},{"path":"/reference/use_data_penguins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use the penguins data set — use_data_penguins","text":"","code":"use_data_penguins()"},{"path":"/reference/use_data_penguins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the penguins data set — use_data_penguins","text":"Dataset","code":""},{"path":[]},{"path":"/reference/use_data_penguins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use the penguins data set — use_data_penguins","text":"","code":"use_data_penguins() #> # A tibble: 344 × 8 #>    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g #>    <fct>   <fct>              <dbl>         <dbl>             <int>       <int> #>  1 Adelie  Torgersen           39.1          18.7               181        3750 #>  2 Adelie  Torgersen           39.5          17.4               186        3800 #>  3 Adelie  Torgersen           40.3          18                 195        3250 #>  4 Adelie  Torgersen           NA            NA                  NA          NA #>  5 Adelie  Torgersen           36.7          19.3               193        3450 #>  6 Adelie  Torgersen           39.3          20.6               190        3650 #>  7 Adelie  Torgersen           38.9          17.8               181        3625 #>  8 Adelie  Torgersen           39.2          19.6               195        4675 #>  9 Adelie  Torgersen           34.1          18.1               193        3475 #> 10 Adelie  Torgersen           42            20.2               190        4250 #> # ℹ 334 more rows #> # ℹ 2 more variables: sex <fct>, year <int>"},{"path":"/reference/use_data_starwars.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the starwars data set — use_data_starwars","title":"Use the starwars data set — use_data_starwars","text":"data set comes dplyr package. contains data 87 star war characters","code":""},{"path":"/reference/use_data_starwars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use the starwars data set — use_data_starwars","text":"","code":"use_data_starwars()"},{"path":"/reference/use_data_starwars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the starwars data set — use_data_starwars","text":"Dataset","code":""},{"path":[]},{"path":"/reference/use_data_starwars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use the starwars data set — use_data_starwars","text":"","code":"use_data_starwars() #> # A tibble: 87 × 14 #>    name     height  mass hair_color skin_color eye_color birth_year sex   gender #>    <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr>  #>  1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu… #>  2 C-3PO       167    75 NA         gold       yellow         112   none  mascu… #>  3 R2-D2        96    32 NA         white, bl… red             33   none  mascu… #>  4 Darth V…    202   136 none       white      yellow          41.9 male  mascu… #>  5 Leia Or…    150    49 brown      light      brown           19   fema… femin… #>  6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu… #>  7 Beru Wh…    165    75 brown      light      blue            47   fema… femin… #>  8 R5-D4        97    32 NA         white, red red             NA   none  mascu… #>  9 Biggs D…    183    84 black      light      brown           24   male  mascu… #> 10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu… #> # ℹ 77 more rows #> # ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>, #> #   vehicles <list>, starships <list>"},{"path":"/reference/use_data_titanic.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the titanic data set — use_data_titanic","title":"Use the titanic data set — use_data_titanic","text":"data set comes base R. Survival passengers Titanic.","code":""},{"path":"/reference/use_data_titanic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use the titanic data set — use_data_titanic","text":"","code":"use_data_titanic(count = FALSE)"},{"path":"/reference/use_data_titanic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use the titanic data set — use_data_titanic","text":"count use count data","code":""},{"path":"/reference/use_data_titanic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the titanic data set — use_data_titanic","text":"Dataset","code":""},{"path":"/reference/use_data_titanic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use the titanic data set — use_data_titanic","text":"","code":"use_data_titanic(count = TRUE) #> # A tibble: 32 × 5 #>    Class Sex    Age   Survived     n #>    <chr> <chr>  <chr> <chr>    <dbl> #>  1 1st   Male   Child No           0 #>  2 2nd   Male   Child No           0 #>  3 3rd   Male   Child No          35 #>  4 Crew  Male   Child No           0 #>  5 1st   Female Child No           0 #>  6 2nd   Female Child No           0 #>  7 3rd   Female Child No          17 #>  8 Crew  Female Child No           0 #>  9 1st   Male   Adult No         118 #> 10 2nd   Male   Adult No         154 #> # ℹ 22 more rows use_data_titanic(count = FALSE) #> # A tibble: 2,201 × 4 #>    Class Sex   Age   Survived #>    <chr> <chr> <chr> <chr>    #>  1 3rd   Male  Child No       #>  2 3rd   Male  Child No       #>  3 3rd   Male  Child No       #>  4 3rd   Male  Child No       #>  5 3rd   Male  Child No       #>  6 3rd   Male  Child No       #>  7 3rd   Male  Child No       #>  8 3rd   Male  Child No       #>  9 3rd   Male  Child No       #> 10 3rd   Male  Child No       #> # ℹ 2,191 more rows"},{"path":"/reference/weight_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Weight target variable — weight_target","title":"Weight target variable — weight_target","text":"Create weights target variable dataset equal weights target = 0 target = 1. Target must 0/1, FALSE/TRUE ore /yes","code":""},{"path":"/reference/weight_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weight target variable — weight_target","text":"","code":"weight_target(data, target)"},{"path":"/reference/weight_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weight target variable — weight_target","text":"data dataset target Target variable (0/1, TRUE/FALSE, yes/)","code":""},{"path":"/reference/weight_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weight target variable — weight_target","text":"Weights observation (vector)","code":""},{"path":"/reference/weight_target.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weight target variable — weight_target","text":"","code":"iris$is_versicolor <- ifelse(iris$Species == \"versicolor\", 1, 0) weights <- weight_target(iris, target = is_versicolor) versicolor <- iris$is_versicolor table(versicolor, weights) #>           weights #> versicolor   1   2 #>          0 100   0 #>          1   0  50"},{"path":[]},{"path":"/news/index.html","id":"new-features-1-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"explore 1.3.0","text":"add parameter nthread explain_xgboost(). (#45) add interact(). add interactivity default explore shiny app. add create_data_abtest(). add basic color parameter explore() & abtest() functions. move NA-info explore() title subtitle. add descriptive infos explore()subtitle.","code":""},{"path":"/news/index.html","id":"bug-fixes--internal-1-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes / internal","title":"explore 1.3.0","text":"fix undefined / meaningful values abtest() shiny-app","code":""},{"path":"/news/index.html","id":"explore-120","dir":"Changelog","previous_headings":"","what":"explore 1.2.0","title":"explore 1.2.0","text":"CRAN release: 2024-02-28","code":""},{"path":"/news/index.html","id":"new-features-1-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"explore 1.2.0","text":"add explain_xgboost() (#42) add drop_var_by_names() (#43) add drop_var_not_numeric() (#43) add drop_var_low_variance() (#43) add drop_var_no_variance() (#43) add drop_var_with_na() (#43) add drop_obs_with_na() (#43) add drop_obs_if() (#43) add mix_color() add show_color() add create_data_esoteric()","code":""},{"path":"/news/index.html","id":"breaking-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"explore 1.2.0","text":"create_data_empty() longer parameter seed","code":""},{"path":"/news/index.html","id":"bug-fixes--internal-1-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes / internal","title":"explore 1.2.0","text":"add check_vec_low_variance() (internal helper function)","code":""},{"path":"/news/index.html","id":"explore-111","dir":"Changelog","previous_headings":"","what":"explore 1.1.1","title":"explore 1.1.1","text":"CRAN release: 2024-02-10 Fix CRAN check warning running example get_nrow() (#41)","code":""},{"path":"/news/index.html","id":"explore-110","dir":"Changelog","previous_headings":"","what":"explore 1.1.0","title":"explore 1.1.0","text":"CRAN release: 2023-10-11","code":""},{"path":"/news/index.html","id":"breaking-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"explore 1.1.0","text":"explore longer imports MASS RandomForest. explain_logreg() explain_forest(), receive prompt install packages interactive sessions. (#2 1, @olivroy)","code":""},{"path":"/news/index.html","id":"new-features-1-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"explore 1.1.0","text":"add explain_forest(). add predict_target(). add create_data_newsletter(). add use_data_beer() use_data_starwars() functions (#20, #23) explore now website. (#17, #19, @olivroy) abtest() now supports numeric target (t-test). abtest_targetpct() count data (parameter n). abtest() explore() can now run without data (shiny app). data provided, palmerpenguins::penguins used. (#25) New vignettes added. (#27, #28, #29, #31) Documentation examples enhanced. (#38, @olivroy, #32, #33, #36, #37) create_data_() use_data_*() return data sets tibble.","code":""},{"path":"/news/index.html","id":"bug-fixes--internal-1-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes / internal","title":"explore 1.1.0","text":"drop use fct_explicit_na() (forcats >= 1.0.0) use linewidth ggplot2 (>= 3.4.0) (deprecated) (#15, @olivroy) explore longer depends assertthat, tidyr, broom. (#16, #21, @olivroy). Error messages now informative (#18, @olivroy) explore now uses testthat 3rd edition GitHub actions (#16, @olivroy) explore re-licensed MIT (#22)","code":""},{"path":"/news/index.html","id":"explore-102-2023-01-14","dir":"Changelog","previous_headings":"","what":"explore 1.0.2 (2023-01-14)","title":"explore 1.0.2 (2023-01-14)","text":"CRAN release: 2023-01-14 add_var_random_01() creates variable type integer add target_name & factorise_target parameter create_data_*() add target1_prob parameter create_data_*() add checks create_data_*() format variable random_moon add abtest() remove native pipe explore_tbl() fix error explore() median NA values add tests explore() (error data contains NA)","code":""},{"path":"/news/index.html","id":"explore-101-2022-12-20","dir":"Changelog","previous_headings":"","what":"explore 1.0.1 (2022-12-20)","title":"explore 1.0.1 (2022-12-20)","text":"CRAN release: 2022-12-20 Switch back %>% vignettes (compatibility R < 4.1) (#6) hard coded path markdown-templates Add create_data_unfair() create_data_app() gains screen_size argument.","code":""},{"path":"/news/index.html","id":"explore-100-2022-11-11","dir":"Changelog","previous_headings":"","what":"explore 1.0.0 (2022-11-11)","title":"explore 1.0.0 (2022-11-11)","text":"CRAN release: 2022-11-11 Dependency DT (>= 0.3.0) Improve use native pipe README. Improve documentation Add function create_data_app() Add support integer64 Bugfix report() >100 variables warning-message explore_count() Redesign explore_tbl() Add mean explore_density() plot Add create_data_churn() Add add_var_random_moon() Vignettes: switch %>% |> Add create_notebook_explore()","code":""},{"path":"/news/index.html","id":"explore-090-2022-08-31","dir":"Changelog","previous_headings":"","what":"explore 0.9.0 (2022-08-31)","title":"explore 0.9.0 (2022-08-31)","text":"CRAN release: 2022-08-31 rename create_x_data() create_data_x() rename add_x_var() add_var_x() extend create_data_*() functions extend add_var_*() functions explain_tree(): set default minsplit = 20 explain_tree(): set prior probabilities explore() report(): targetpct alternative split parameter balance_target(): add parameter seed fix variable type create_data_x() using md roxygen","code":""},{"path":"/news/index.html","id":"explore-080-2022-01-30","dir":"Changelog","previous_headings":"","what":"explore 0.8.0 (2022-01-30)","title":"explore 0.8.0 (2022-01-30)","text":"CRAN release: 2022-01-30 dwh_*() functions longer included {explore} Alternative: source https://github.com/rolkra/dwh add create_fake_data() add create_random_data() add add_random_var() add get_var_buckets() total_fig_height(): parameters var_name_target, var_name_n code styling report templates: add var buckets (plot large number variables)","code":""},{"path":"/news/index.html","id":"explore-071-2021-06-04","dir":"Changelog","previous_headings":"","what":"explore 0.7.1 (2021-06-04)","title":"explore 0.7.1 (2021-06-04)","text":"CRAN release: 2021-06-04 change theme_light() individual theme() set_theme works. add rmarkdown Suggests DESCRIPTION fix URL DESCRIPTION drop LazyData DESCRIPTION format DESCRIPTION","code":""},{"path":"/news/index.html","id":"explore-070-2021-01-21","dir":"Changelog","previous_headings":"","what":"explore 0.7.0 (2021-01-21)","title":"explore 0.7.0 (2021-01-21)","text":"CRAN release: 2021-01-21 explain_tree() gains weights parameter. flip /yes label rpart.plot fix minsplit count-data add weight_target() add plot_legend_targetpct() add legend targetpct rmarkdown-template add unit testing (testthat)","code":""},{"path":"/news/index.html","id":"explore-062-2020-10-14","dir":"Changelog","previous_headings":"","what":"explore 0.6.2 (2020-10-14)","title":"explore 0.6.2 (2020-10-14)","text":"CRAN release: 2020-10-14 Bugfix explore_bar(): NA plot explore_count(): convert target factor explore_count(): add default title (cat name) explore_count(): add parameter numeric, max_cat, max_target_cat explain_tree(): convert character variables factors (count data) explain_tree(): parameter (“plot” | “model”) explain_logreg(): parameter (“tibble” | “model”) vignette(\"explore_titanic\"): change tibble vignette(\"explore_mtcars\"): add explanations change theme_minimal theme_light dwh_fastload(): add parameters overwrite append update README.md","code":""},{"path":"/news/index.html","id":"explore-061-2020-09-04","dir":"Changelog","previous_headings":"","what":"explore 0.6.1 (2020-09-04)","title":"explore 0.6.1 (2020-09-04)","text":"CRAN release: 2020-09-04 Fix Github URL new Vignette vignette(\"explore_penguins\") new Vignette vignette(\"explore_titanic\") (count data) explore_count(): plot count() output add default parameter n count data: explore(), explore_all(), explore_tbl(), explain_tree(), report(), describe(), describe_cat(), describe_num(), describe_tbl(), total_fig_height() explore_tree(): default value minsplit = 10% obs explore_cor(): use geom_point() small datasets explore_shiny(): use browseURL() parameter browser=NULL describe_tbl(): add observations containing NA guess_cat_num(): parameter description (optional) count_pct(): renaming variables.","code":""},{"path":"/news/index.html","id":"explore-055-2020-04-06","dir":"Changelog","previous_headings":"","what":"explore 0.5.5 (2020-04-06)","title":"explore 0.5.5 (2020-04-06)","text":"CRAN release: 2020-04-06 Maintenance update: fix breaking changes tibble 3.0.0","code":""},{"path":"/news/index.html","id":"explore-054-2020-02-09","dir":"Changelog","previous_headings":"","what":"explore 0.5.4 (2020-02-09)","title":"explore 0.5.4 (2020-02-09)","text":"CRAN release: 2020-02-09 Maintenance update: fix param ... description (PR#16223, see https://bugs.r-project.org/show_bug.cgi?id=16223)","code":""},{"path":"/news/index.html","id":"explore-053-2020-01-17","dir":"Changelog","previous_headings":"","what":"explore 0.5.3 (2020-01-17)","title":"explore 0.5.3 (2020-01-17)","text":"CRAN release: 2020-01-17 explore_bar(): add parameter numeric describe_all() returns tibble describe_all(): column ‘variable’ character (factor) report() split = TRUE default add rescale01() add parameter rescale01 clean_var() add function count_pct() add ='tibble' describe_cat() add function explore_targetpct()","code":""},{"path":"/news/index.html","id":"explore-052-2019-11-22","dir":"Changelog","previous_headings":"","what":"explore 0.5.2 (2019-11-22)","title":"explore 0.5.2 (2019-11-22)","text":"CRAN release: 2019-11-22 split source-code file multiple files format_num_auto() without brackets treat Date variables cat report() fix automatic file extension .html add simplify_text() add parameter simplify_text clean_var() fix link README.md","code":""},{"path":"/news/index.html","id":"explore-051-2019-10-08","dir":"Changelog","previous_headings":"","what":"explore 0.5.1 (2019-10-08)","title":"explore 0.5.1 (2019-10-08)","text":"CRAN release: 2019-10-08 Prepare new dplyr 0.8.4 (#2, @romainfrancois)","code":""},{"path":"/news/index.html","id":"bug-fixes-0-5-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"explore 0.5.1 (2019-10-08)","text":"prepare explore_tbl() dplyr 0.8.4 describe_num() default digits=6 describe_cat() bugfix variable NA describe_all() bugfix variable NA explain_tree() bugfix dataframe 0 rows improve speed describe() text output (RMarkdown) explore() now checks data data.frame","code":""},{"path":"/news/index.html","id":"explore-050-2019-09-19","dir":"Changelog","previous_headings":"","what":"explore 0.5.0 (2019-09-19)","title":"explore 0.5.0 (2019-09-19)","text":"CRAN release: 2019-09-19 Interactive data exploration now accept categorical numerical targets (next binary target). explain_tree(): target can bin/num/cat explain_tree(): add parameter max_target_cat explore_shiny(): target can bin/num/cat add function format_num_auto() total_fig_height() replaces now deprecated get_nrow(). add parameter title explore_cor() add support POSIXct describe() improved handling dataframes observations add parameter title explore_density() add parameter nvar total_fig_height() update README.md update Vignettes add NEWS.md add hex sticker","code":""},{"path":"/news/index.html","id":"explore-044-2019-08-27","dir":"Changelog","previous_headings":"","what":"explore 0.4.4 (2019-08-27)","title":"explore 0.4.4 (2019-08-27)","text":"CRAN release: 2019-08-27 Many functions now accept categorical numerical targets (next binary target). want force geom used visualisation, can use explore_bar() explore_density(). New function explore_tbl() visualise dataframe/table (type variables, number NA, …) add function explore_bar() explore_density() now using correct tidy eval, target cat > 2 possible target_explore_cat() now using correct tidy eval target_explore_num() now using correct tidy eval add plot_var_info() - plots info-text variable ggplot obj. plot_var_info() used explore/explore_all plot_var_info() used explore empty data add parameter max_cat explore_bar(), explore_density() explain_tree() add explore_tbl() drop explore_cat() & explore_num() rename template_report_target_den.html > _split.html intelligent placing labels plots add info window “generating report …” explore_shiny() format_num() -> format_num_kMB(), format_num_space() format_target() -> numeric split 0/1 mean report() -> default .html file extension consistency showing NA info explore-title parameter split: default = FALSE allow numeric (num) target explore_all & report describe_tbl() -> fix target bin describe(): change =“vector” =“list”","code":""},{"path":"/news/index.html","id":"explore-043-2019-06-17","dir":"Changelog","previous_headings":"","what":"explore 0.4.3 (2019-06-17)","title":"explore 0.4.3 (2019-06-17)","text":"CRAN release: 2019-06-17 fix parameter explore(): auto_scale, na fix number NA explore() (move code auto_scale) explore_density() target: drop plot title “propensity ” explore_shiny(): use output_dir / tempdir() change naming “attribute” “variable” (consistent)","code":""}]
